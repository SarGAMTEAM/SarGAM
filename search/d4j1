if (line.flags() == STATE_COMMENT) return hideSyntacticWhitespace(line.getText(), STATE_COMMENT); if (line.flags() == STATE_QUOTE) return hideSyntacticWhitespace(line.getText(), STATE_QUOTE); return hideSyntacticWhitespace(line.getText(), STATE_NEUTRAL); <s> if (isClientSide()) { return dequeueOutput(); } else { return new UnparseResult(BYTE_BUFFER_PROTO); } <s> String content = matcher.group(1); Location location = new Location(LOCATION_INSIDE_EVAL); location.setProperty(LOCATION_EVAL_CONTENT, content); return location; <s> String content = matcher.group(1); Location location = new Location(LOCATION_INSIDE_EVAL); location.setProperty(LOCATION_EVAL_CONTENT, content); return location; <s> String content = matcher.group(1); Location location = new Location(LOCATION_INSIDE_EVAL); location.setProperty(LOCATION_EVAL_CONTENT, content); return location; <s> String content = matcher.group(1); Location location = new Location(LOCATION_INSIDE_EVAL); location.setProperty(LOCATION_EVAL_CONTENT, content); return location; <s> return buildModelTestSuite(CompletionTests.class); <s> return contains(FINAL); <s> SavedCodeReaderFactory.getInstance().getCodeReaderCache().flush(); return CDOM.getInstance().getTranslationUnit(code); <s> SavedCodeReaderFactory.getInstance().getCodeReaderCache().flush(); return CDOM.getInstance().getTranslationUnit(code); <s> ref = task.createGLO(mm, MATCHMAKER_GLO_NAME); task.addChannelListener(mm.channel, ref); return ref; <s> ref = task.createGLO(mm, MATCHMAKER_GLO_NAME); task.addChannelListener(mm.channel, ref); return ref; <s> return this.listEffVals(Grouper.DEF_LIST_TYPE); <s> if (manager.isStarted()) { throw new InitialisationException(new Message(Messages.MANAGER_ALREADY_STARTED), this); } if (serverUrl == null) { serverUrl = ""; } MuleManager.getConfiguration().setServerUrl(serverUrl); MuleManager.getConfiguration().setSynchronous(synchronous); if(!MODEL_NOT_SET.equals(modeltype)) { manager.setModel(ModelFactory.createModel(modeltype)); } manager.start(); return manager; <s> if (manager.isStarted()) { throw new InitialisationException(new Message(Messages.MANAGER_ALREADY_STARTED), this); } if (serverUrl == null) { serverUrl = ""; } MuleManager.getConfiguration().setServerUrl(serverUrl); MuleManager.getConfiguration().setSynchronous(synchronous); if(!MODEL_NOT_SET.equals(modeltype)) { manager.setModel(ModelFactory.createModel(modeltype)); } manager.start(); return manager; <s> if (manager.isStarted()) { throw new InitialisationException(new Message(Messages.MANAGER_ALREADY_STARTED), this); } if (serverUrl == null) { serverUrl = ""; } MuleManager.getConfiguration().setServerUrl(serverUrl); MuleManager.getConfiguration().setSynchronous(synchronous); if(!MODEL_NOT_SET.equals(modeltype)) { manager.setModel(ModelFactory.createModel(modeltype)); } manager.start(); return manager; <s> return new ProgramFieldType(typeId, "unknown (" + typeId + ")", UNKOWN_FORMAT, false); <s> if(((int)value) == value) return Integer.toString((int)value); else return Double.toString(value); <s> if(((int)value) == value) return Integer.toString((int)value); else return Double.toString(value); <s> if(((int)value) == value) return Integer.toString((int)value); else return Double.toString(value); <s> if(((int)value) == value) return Integer.toString((int)value); else return Double.toString(value); <s> if(((int)value) == value) return Integer.toString((int)value); else return Double.toString(value); <s> if(((int)value) == value) return Integer.toString((int)value); else return Double.toString(value); <s> return getStringColumnValue(COLUMN_FINAL_REFLECTION_CLASS); <s> return new String(chars, 0, INT_LENGTH);
callGraph.createEdge(node, callGraph.getNodeForMethod(called), callSite); <s> callGraph.createEdge(node, callGraph.getNodeForMethod(called), callSite); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s>  new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> new ModeCreateEdgeAndNode(ce, edgeType, false, this); <s> callGraph.addEdge(node, callGraph.getNodeForMethod(called), callSite); <s> callGraph.addEdge(node, callGraph.getNodeForMethod(called), callSite); <s> String uuid = calculateStableUUID(ntDef.getName().toString()); VirtualNodeState ntState = createNodeState(parent, ntDef.getName(), uuid, NT_NODETYPE); <s> String uuid = calculateStableUUID(ntDef.getName().toString()); VirtualNodeState ntState = createNodeState(parent, ntDef.getName(), uuid, NT_NODETYPE); <s> final AntLink link = createLink(graph, task.getTaskType(), startNode, called); <s> getCastedModel().fireAllPropertyChange(IGraphModelNode.FORCE_REDRAW, null, null); <s> getCastedModel().fireAllPropertyChange(IGraphModelNode.FORCE_REDRAW, null, null); <s> semanticLayoutLinkData.addIntermediate(node,dummy); <s> semanticLayoutLinkData.addIntermediate(node,dummy); <s> semanticLayoutLinkData.addIntermediate(node,dummy); <s> semanticLayoutLinkData.addIntermediate(node,dummy);
if (simpletype != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> String appContext = uri; if (uri != null) { <s> if (uri == null || uri.length() == 0) { <s> if (uri == null || uri.length() == 0) { <s> if (model != null && hierarchyObject == null) { <s> if (model != null) <s> if (model != null && hierarchyObject == null) { <s> if (model != null && hierarchyObject == null) { <s> if (model != null && hierarchyObject == null) { <s> if (model != null && controller != null) { <s> if (textReader != null) { <s> if (textReader != null) { <s> if (textReader != null) { <s> if (textReader != null) { <s> if (target != null)
this(TimeZone.getDefault(), Locale.getDefault()); <s> this(pi.getName(), pi.getEmailAddress()); <s> this(TimeZone.getDefault(), Locale.getDefault()); } <s> return get(DEFAULT, DEFAULT, Locale.getDefault()); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); computeCenturyStart(); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = (formatData.dateFormats[DEFAULT] + ' ' + formatData.timeFormats[DEFAULT]); compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); numberFormat.setGroupingUsed (false); numberFormat.setParseIntegerOnly (true); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = formatData.dateFormats[DEFAULT]+' '+formatData.timeFormats[DEFAULT]; compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = formatData.dateFormats[DEFAULT]+' '+formatData.timeFormats[DEFAULT]; compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); <s>  <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); computeCenturyStart(); tokens = new ArrayList(); formatData = new DateFormatSymbols(locale); pattern = (formatData.dateFormats[DEFAULT] + ' ' + formatData.timeFormats[DEFAULT]); compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); numberFormat.setGroupingUsed (false); numberFormat.setParseIntegerOnly (true); numberFormat.setMaximumFractionDigits (0); <s>  <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = formatData.dateFormats[DEFAULT]+' '+formatData.timeFormats[DEFAULT]; compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); <s>  <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); computeCenturyStart(); tokens = new ArrayList(); formatData = new DateFormatSymbols(locale); pattern = (formatData.dateFormats[DEFAULT] + ' ' + formatData.timeFormats[DEFAULT]); compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); numberFormat.setGroupingUsed (false); numberFormat.setParseIntegerOnly (true); numberFormat.setMaximumFractionDigits (0); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); computeCenturyStart(); tokens = new ArrayList(); formatData = new DateFormatSymbols(locale); pattern = (formatData.dateFormats[DEFAULT] + ' ' + formatData.timeFormats[DEFAULT]); compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); numberFormat.setGroupingUsed (false); numberFormat.setParseIntegerOnly (true); numberFormat.setMaximumFractionDigits (0); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = formatData.dateFormats[DEFAULT]+' '+formatData.timeFormats[DEFAULT]; compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); computeCenturyStart(); tokens = new ArrayList(); formatData = new DateFormatSymbols(locale); pattern = (formatData.dateFormats[DEFAULT] + ' ' + formatData.timeFormats[DEFAULT]); compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); numberFormat.setGroupingUsed (false); numberFormat.setParseIntegerOnly (true); numberFormat.setMaximumFractionDigits (0); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); computeCenturyStart(); tokens = new ArrayList(); formatData = new DateFormatSymbols(locale); pattern = (formatData.dateFormats[DEFAULT] + ' ' + formatData.timeFormats[DEFAULT]); compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); numberFormat.setGroupingUsed (false); numberFormat.setParseIntegerOnly (true); numberFormat.setMaximumFractionDigits (0); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = formatData.dateFormats[DEFAULT]+' '+formatData.timeFormats[DEFAULT]; compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); computeCenturyStart(); tokens = new ArrayList(); formatData = new DateFormatSymbols(locale); pattern = (formatData.dateFormats[DEFAULT] + ' ' + formatData.timeFormats[DEFAULT]); compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); numberFormat.setGroupingUsed (false); numberFormat.setParseIntegerOnly (true); numberFormat.setMaximumFractionDigits (0); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = formatData.dateFormats[DEFAULT]+' '+formatData.timeFormats[DEFAULT]; compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = formatData.dateFormats[DEFAULT]+' '+formatData.timeFormats[DEFAULT]; compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); <s> /* * There does not appear to be a standard API for determining * what the default pattern for a locale is, so use package-scope * variables in DateFormatSymbols to encapsulate this. */ super(); Locale locale = Locale.getDefault(); calendar = new GregorianCalendar(locale); tokens = new Vector(); formatData = new DateFormatSymbols(locale); pattern = formatData.dateFormats[DEFAULT]+' '+formatData.timeFormats[DEFAULT]; compileFormat(pattern); numberFormat = NumberFormat.getInstance(locale); <s>  <s>  <s> return getInstance(TimeZone.getDefault(), Locale.getDefault());
if (ifindex == null) { <s> if (ifindex == null) { <s> if (ifindex == null) { <s> if (ifindex == null) { <s> if (ifindex == null) { <s> if (ifindex == null) { <s> if (ifindex == null) { <s> if (ifindex == null) { <s> if(index < 0) { <s> if (index < 0 && method.getDeclaringClass() != javax.ejb.EJBObject.class && method.getDeclaringClass() != javax.ejb.EJBHome.class) { <s> if(classNameIndex < 0){ <s> if(classNameIndex < 0){ <s> if(classNameIndex < 0){ <s> if(classNameIndex < 0){ <s> if(classNameIndex < 0){ <s> if(classNameIndex < 0){ <s> if(classNameIndex < 0){ <s> if(classNameIndex < 0){ <s> if (cstart < 0 && gstart < 0) { <s> if (cstart < 0 && gstart < 0) { <s> if (cstart < 0 && gstart < 0) { <s> if (start < first) { <s> if (leadIndex < 0 && anchorSelectionIndex < 0) { leadSelectionIndex = leadIndex; } if (leadIndex < 0 || anchorSelectionIndex < 0) { <s> if (0 >= index) { <s> if (0 >= index) {
return getName(); <s> return getName(); <s> return "HopObject " + name; <s> return "HopObject " + name; <s> StringBuffer sb = new StringBuffer(super.paramString()); sb.append(",tiptext="); if (text != null); sb.append(text); return sb.toString(); <s> StringBuffer sb = new StringBuffer(super.paramString()); sb.append(",tiptext="); if (text != null); sb.append(text); return sb.toString(); <s> return "x " + text + " x"; <s> return "x " + text + " x"; <s> return "x " + text + " x"; <s> return "x " + text + " x"; <s> return "InlineBox text = \"" + getSubstring() + <s> return "InlineBox text = \"" + getSubstring() + <s> return "InlineBox text = \"" + getSubstring() + <s> return "InlineBox text = \"" + getSubstring() + <s> this.toolTipText = toolTipText; <s> return "item" + itemId; <s> if (opIsBoolean(op)) { return "boolean " + variableName; } else { return "String " + variableName; } <s> if (opIsBoolean(op)) { return "boolean " + variableName; } else { return "String " + variableName; } <s> if (opIsBoolean(op)) { return "boolean " + variableName; } else { return "String " + variableName; } <s> if (opIsBoolean(op)) { return "boolean " + variableName; } else { return "String " + variableName; } <s> return this.getLabel(); <s> return this.getLabel(); <s> if (node > 0) return "N" + node; else return EMPTYSTRING; <s> if (node > 0) return "N" + node; else return EMPTYSTRING; <s> return "\"" + escape(stringVal) + "\"";
if (getStroke() instanceof BasicStroke) { PathIterator path = shape.getPathIterator(null); <s> ExtendedPathIterator iter = getExtShape().getExtendedPathIterator(); <s> ExtendedPathIterator iter = getExtShape().getExtendedPathIterator(); <s> ExtendedPathIterator iter = getExtShape().getExtendedPathIterator(); <s> ExtendedPathIterator iter = getExtShape().getExtendedPathIterator(); <s> ExtendedPathIterator iter = getExtShape().getExtendedPathIterator(); <s> ExtendedPathIterator iter = getExtShape().getExtendedPathIterator(); <s>  PathIterator iter = shp.getPathIterator(null); <s> PathIterator points; if (drawType == CLIP) points = s.getPathIterator(IDENTITY); else points = s.getPathIterator(transform); <s> PathIterator points; if (drawType == CLIP) points = s.getPathIterator(IDENTITY); else points = s.getPathIterator(transform); <s> PathIterator points; if (drawType == CLIP) points = s.getPathIterator(IDENTITY); else points = s.getPathIterator(transform); <s> PathIterator points; if (drawType == CLIP) points = s.getPathIterator(IDENTITY); else points = s.getPathIterator(transform); <s> return s == null ? new NullIterator() : s.getPathIterator(t); <s>  <s>  <s>  <s>  <s> PathInfo pi = pathInfoMap.getInfo(path); <s> NodeIterator it = getNodeIterator(context, parent, step); <s> NodeIterator it = getNodeIterator(context, parent, step); <s> Path path = (Path) paths.get(slot); <s> IIndexFileLocation path2 = findLocation(sourceLoc.getFileName()); <s> IIndexFileLocation path2 = findLocation(sourceLoc.getFileName()); <s> Object nextSource = sourceIter.next(); IPath sourcePath = new Path(provider.getFullPath(nextSource)); <s> Object nextSource = sourceIter.next(); IPath sourcePath = new Path(provider.getFullPath(nextSource));
this.windowView= windowView; <s>  <s>  <s> setExperiment(experiment); <s>  <s>  <s>  <s>  <s> this.fromEval = fromEval; <s>  <s> this.fromEval = fromEval; <s> this.scope = helper.getScope( ); this.helper = helper; <s>  <s>  <s>  <s> this.scope = helper.getScope( ); this.helper = helper; <s> this.fromEval = fromEval; <s> this.scope = helper.getScope( ); this.helper = helper; <s> this.fromEval = fromEval; <s> this.fromEval = fromEval; <s> this.fromEval = fromEval; <s>  <s>  <s>  <s> this.fromEval = fromEval;
bounds); <s>  <s>  <s>  <s>  <s> new Rectangle(getCurrentControlIcon(path). getIconWidth() - 5, 0, bounds.width, bounds.height)); <s> new Dimension(totalWidth, cornerHeader.getPreferredScrollableViewportSize().height)); <s> new Dimension(totalWidth, cornerHeader.getPreferredScrollableViewportSize().height)); <s> location, <s> location, <s> newLocation = new Point(newLocation.x, newLocation.y - getHeight() - myRelativeCell.getHeight()); <s> newX = Math.min (Math.max (0, lastX + xChange), parentWidth - width); <s> new Integer(d.width), new Integer(d.height), <s> new Integer(d.width), new Integer(d.height), <s> new Integer(d.width), new Integer(d.height), <s> new Integer(d.width), new Integer(d.height), <s> new Integer(d.width), new Integer(d.height), <s> dialog.setSize((int) (dialog.getWidth() * 1.05), height); <s>  <s>  <s>  <s>  <s> new Dimension(totalWidth, rowHeader.getPreferredScrollableViewportSize().height)); <s> new Dimension(totalWidth, rowHeader.getPreferredScrollableViewportSize().height)); <s> Dimension size = editingComponent.getPreferredSize(); int rowHeight = getRowHeight(); if (size.height != bounds.height && rowHeight > 0) size.height = rowHeight;
super(label); <s> super(name); createActiveObject(); init(width, height); <s> super(name); createActiveObject(); init(width, height); <s> super(name); createActiveObject(); init(width, height); <s> super(name); createActiveObject(); init(width, height); <s> super(name, true, false, start, bytes); <s> super(parent, context, elementKinds, scope); <s> super(label, image, text); <s> super(parent, model, target, x, y); <s> super(parent); <s> super(parent); <s> super(parent); <s> super(parent); <s> super(parent, style|SWT.DOUBLE_BUFFERED); <s> super(parent); <s> super(parent, style|SWT.DOUBLE_BUFFERED); <s> super(parent); <s> super(w, ss, e, s, WorkbenchTriggerPoints.EXPORT_WIZARDS); <s> super(w, ss, e, s, WorkbenchTriggerPoints.IMPORT_WIZARDS); <s> super(w, ss, e, s, WorkbenchTriggerPoints.IMPORT_WIZARDS); <s> super(w, ss, e, s, WorkbenchTriggerPoints.EXPORT_WIZARDS); <s> super(w, ss, e, s, WorkbenchTriggerPoints.IMPORT_WIZARDS); <s> super(w, ss, e, s, WorkbenchTriggerPoints.EXPORT_WIZARDS); <s> super(w, ss, e, s, WorkbenchTriggerPoints.IMPORT_WIZARDS); <s> super(w, ss, e, s, WorkbenchTriggerPoints.EXPORT_WIZARDS);
this.average = ((this.average * this.alpha) + <s> this.average = ((this.average * this.alpha) + <s> this.average = ((this.average * this.alpha) + <s> this.average = ((this.average * this.alpha) + <s> int i; if (value == m_max) i = m_size - 1; else i = (int)((value - m_min) / m_step); <s> int i; if (value == m_max) i = m_size - 1; else i = (int)((value - m_min) / m_step); <s> int i; if (value == m_max) i = m_size - 1; else i = (int)((value - m_min) / m_step); <s>  if (this.memberToThreadRatio != 0) { f = ((int) Math.ceil(((float) members) / ((float) this.memberToThreadRatio))) + this.additionalThreads; } else { f = this.additionalThreads; } <s>  if (this.memberToThreadRatio != 0) { f = ((int) Math.ceil(((float) members) / ((float) this.memberToThreadRatio))) + this.additionalThreads; } else { f = this.additionalThreads; } <s>  if (this.memberToThreadRatio != 0) { f = ((int) Math.ceil(((float) members) / ((float) this.memberToThreadRatio))) + this.additionalThreads; } else { f = this.additionalThreads; } <s>  if (this.memberToThreadRatio != 0) { f = ((int) Math.ceil(((float) members) / ((float) this.memberToThreadRatio))) + this.additionalThreads; } else { f = this.additionalThreads; } <s> int step = (int) Math.ceil((1.0d - factor) / stepSize); <s> int step = (int) Math.ceil((1.0d - factor) / stepSize); <s> int step = (int) Math.ceil((1.0d - factor) / stepSize); <s> int step = (int) Math.ceil((1.0d - factor) / stepSize); <s> int step = (int) Math.ceil((1.0d - factor) / stepSize); <s> int step = (int) Math.ceil((1.0d - factor) / stepSize); <s> int step = (int) Math.ceil((1.0d - factor) / stepSize); <s> int step = (int) Math.ceil((1.0d - factor) / stepSize); <s> int index = (int) Math.rint((r+g+b) / 96.0); <s> int index = (int) Math.rint((r+g+b) / 96.0); <s> return lower + (int) (rand.nextDouble() * (upper - lower + 1)); <s> return this.value.compareTo(other.value); <s> x = (int)(p.right() * width_factor + bounds.x); <s> int baseline = (int)((this.baseline + lineHeight
if (Layout.getJoiners().contains(node) && !KjcOptions.decoupled) { <s> if (Layout.getJoiners().contains(node) && !KjcOptions.decoupled) { <s> if (Types.isReferenceType(type2) && !RccOptions.readonly) { <s> if (Types.isReferenceType(type2) && !RccOptions.readonly) { <s> if ((Dependency.dependsOn(expr, Dependency.CONTEXT_ITEM) || Dependency.dependsOn(expr, Dependency.CONTEXT_POSITION)) && result != null && !result.isEmpty()) { <s>  if (p.isDescriptor() && !p.isPrimaryDescriptor()) { <s>  if (p.isDescriptor() && !p.isPrimaryDescriptor()) { <s>  if (p.isDescriptor() && !p.isPrimaryDescriptor()) { <s> if (name == this.name || (name != null && name.equals(this.name)) || provider.isReadOnly()) { <s> if (name == this.name || (name != null && name.equals(this.name)) || provider.isReadOnly()) { <s> if (name == this.name || (name != null && name.equals(this.name)) || provider.isReadOnly()) { <s> if (rtype == Type.SOA && !name.equals(origin)) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) {
if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if((i == 0) || (prev == '-')) { <s> if (i == 0 && ch != '/' && result.length() > 0) { <s> if (i == 0 && ch != '/' && result.length() > 0) { <s> if (peek (0) == '-') { <s> boolean negative = c == '-'; if (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9') { break; } if (negative) { <s> boolean negative = c == '-'; if (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9') { break; } if (negative) { <s> int endChar = -1; if( c == '<' ){ endChar = '>'; } else if ( c == '"' ){ endChar = '"'; useIncludePath = false; } else { if( throwExceptionOnBadPreprocessorSyntax ) throw new ScannerException( "Encountered ill-formed #include"); else return; } c = getChar(); while ((c != '\n') && (c != endChar) && (c != NOCHAR)){ if( c == '\r' ){ c = getChar(); continue; } fileName.append((char) c); <s> switch (c) { case '<': <s> int endChar = -1; if( c == '<' ){ endChar = '>'; } else if ( c == '"' ){ endChar = '"'; useIncludePath = false; } else { if( throwExceptionOnBadPreprocessorSyntax ) throw new ScannerException( "Encountered ill-formed #include"); else return; } c = getChar(); while ((c != '\n') && (c != endChar) && (c != NOCHAR)){ if( c == '\r' ){ c = getChar(); continue; } fileName.append((char) c); <s> if ((b.length() >= 4) && (c == '-') && (prevC == '-')) { <s> if ((b.length() >= 4) && (c == '-') && (prevC == '-')) {
 if (num >= 0 && (int) num == num) <s> if (this == obj) { <s> if (this == obj) { <s> if (this == obj) { <s> if ((int)value > 255) { <s> if ((int)value > 255) { <s> if (pos++ == mask) { <s> if (pos++ == mask) { <s>  <s>  <s> if (((data >> 24) & 0xFF) == 0) { <s> if ((char) value == '\n' || value == -1) { <s> if ((char) value == '\n' || value == -1) { <s> if ((char) value == '\n' || value == -1) { <s> if ((char) value == '\n' || value == -1) { <s> if (!(is instanceof BufferedInputStream)) { <s> if (!(is instanceof BufferedInputStream)) { <s> if (!(is instanceof BufferedInputStream)) { <s> if (!(is instanceof BufferedInputStream)) { <s> if ( (name == null) <s> if ( (name == null) <s> if (ch == '\\') { ret.append("\\\\"); } else if( ((int)ch) > z ) { <s> if (ch == '\\') { ret.append("\\\\"); } else if( ((int)ch) > z ) { <s> if (ch == '\\') { ret.append("\\\\"); } else if( ((int)ch) > z ) { <s> if (ch == '\\') { ret.append("\\\\"); } else if( ((int)ch) > z ) {
return (currentIndex == 0 && !history.get(currentIndex).isActive()) || currentIndex > 0; <s> return (currentIndex == 0 && !history.get(currentIndex).isActive()) || currentIndex > 0; <s> return ! keys.isEmpty(); <s> return ! keys.isEmpty(); <s> return getArrayDepth() > 0; <s> return getArrayDepth() > 0; <s>  return activeWriters == 1; <s>  return activeWriters == 1; <s>  return activeWriters == 1; <s> int len = getLength(); if (len == 0) return false; if (len > 1) return true; Item first = itemAt(0); if(first instanceof StringValue) return first.getStringValue().equals("") ? true : false; else if(first instanceof BooleanValue) return ((BooleanValue)first).getValue(); else if(first instanceof NumericValue) return ((BooleanValue)first.convertTo(Type.BOOLEAN)).getValue(); else return true; <s> return value < 0; <s> return value < 0; <s> return value < 0; <s> return value < 0; <s> return value < 0; <s> return result == IDialogConstants.YES_ID; <s> return result == IDialogConstants.YES_ID; <s> return result == IDialogConstants.YES_ID; <s> return result == IDialogConstants.YES_ID; <s> return state == 0 || state == __XmlLexer.TAG || state == __XmlLexer.END_TAG; <s> return state == 0 || state == __XmlLexer.TAG || state == __XmlLexer.END_TAG; <s> return state == 0 || state == __XmlLexer.TAG || state == __XmlLexer.END_TAG; <s> return state == __XmlLexer.TAG; <s> return state == __XmlLexer.TAG; <s> return state == 0 || state == __XmlLexer.TAG || state == __XmlLexer.END_TAG;
if (target != null) <s> if (target != null) <s> if (target == null || target.equals(ce())) { <s> if (targetCache == null) { <s> if (target == null || !ModelFacade.isABase(target)) { <s> if (targetAlias == null) { <s> if (targetCache == null) { <s> if (target == null || fElements.contains(target)) { <s> if (targetCache == null) { <s> if (target == null || target.equals(ce())) { <s> if (targetCache == null) { <s> if (targetCache == null) { <s> if (targetCache == null) { <s> if (targetAlias == null) { <s> if (targetCache == null) { <s> if (target == null && sendNow && config.nagleMillis > 0) { <s> if (targetCache == null) { <s> if (targetCache == null) { <s> if (targetCache == null) { <s> if (target == null || fElements.contains(target)) { <s> if (targetCache == null) { <s> if (targetCache == null) { <s> if (targetCache == null) { <s> if (targetCache == null) { <s> if (targetCache == null) {
&& source.charAt(result) == target.charAt(result)) { <s> && (null == tctxRef ? true : null != tctxRef.get())) { <s> && index >= 0 && !startEditing && list.isSelectedIndex(index)) <s> && index >= 0 && !startEditing && list.isSelectedIndex(index)) <s> && index >= 0 && !startEditing && list.isSelectedIndex(index)) <s> && this.eofPosition > this.currentPosition) { <s> && this.eofPosition > this.currentPosition) { <s> && this.eofPosition > this.currentPosition) { <s> && this.eofPosition > this.currentPosition) { <s> && this.eofPosition > this.currentPosition) { <s> && noWordSep.indexOf(ch) == -1) <s> && noWordSep.indexOf(ch) == -1) <s> && noWordSep.indexOf(ch) == -1) <s> && source.charAt(result) == target.charAt(result) && !CollationElementIterator.isThaiPreVowel(source.charAt(result))) { <s> && name.length > prefixLen && ScannerHelper.isUpperCase(name[prefixLen])) { <s> && name.length > prefixLen && ScannerHelper.isUpperCase(name[prefixLen])) { <s> for (int count = 0; lastPos < source.length(); ++count) { <s> && (separators == null || separators.indexOf(c) == -1)) <s> && (separators == null || separators.indexOf(c) == -1)) <s> && Math.abs(srcHex.floor() - destHex.floor()) > entity.getMaxElevationChange()) { <s> && Math.abs(srcHex.floor() - destHex.floor()) > entity.getMaxElevationChange()) { <s> && (base.length() == 0 || ( base.length() > 0 && derivedByRestriction)) ) { <s> && (base.length() == 0 || ( base.length() > 0 && derivedByRestriction)) ) { <s> && (base.length() == 0 || ( base.length() > 0 && derivedByRestriction)) ) { <s> && (base.length() == 0 || ( base.length() > 0 && derivedByRestriction)) ) {
&& source.charAt(result) == target.charAt(result)) { <s> && (null == tctxRef ? true : null != tctxRef.get())) { <s> && index >= 0 && !startEditing && list.isSelectedIndex(index)) <s> && index >= 0 && !startEditing && list.isSelectedIndex(index)) <s> && index >= 0 && !startEditing && list.isSelectedIndex(index)) <s> && this.eofPosition > this.currentPosition) { <s> && this.eofPosition > this.currentPosition) { <s> && this.eofPosition > this.currentPosition) { <s> && this.eofPosition > this.currentPosition) { <s> && this.eofPosition > this.currentPosition) { <s> && noWordSep.indexOf(ch) == -1) <s> && noWordSep.indexOf(ch) == -1) <s> && noWordSep.indexOf(ch) == -1) <s> && source.charAt(result) == target.charAt(result) && !CollationElementIterator.isThaiPreVowel(source.charAt(result))) { <s> && name.length > prefixLen && ScannerHelper.isUpperCase(name[prefixLen])) { <s> && name.length > prefixLen && ScannerHelper.isUpperCase(name[prefixLen])) { <s> for (int count = 0; lastPos < source.length(); ++count) { <s> && (separators == null || separators.indexOf(c) == -1)) <s> && (separators == null || separators.indexOf(c) == -1)) <s> && Math.abs(srcHex.floor() - destHex.floor()) > entity.getMaxElevationChange()) { <s> && Math.abs(srcHex.floor() - destHex.floor()) > entity.getMaxElevationChange()) { <s> && (base.length() == 0 || ( base.length() > 0 && derivedByRestriction)) ) { <s> && (base.length() == 0 || ( base.length() > 0 && derivedByRestriction)) ) { <s> && (base.length() == 0 || ( base.length() > 0 && derivedByRestriction)) ) { <s> && (base.length() == 0 || ( base.length() > 0 && derivedByRestriction)) ) {
case '\'' : res.append("\u007E\u0027"); <s> case 'h': case 'H': sb.append( "HH" ); break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case '\\': escape = '\\'; break; <s> case 0x2a: acc.append('*'); <s> case 0x2a: acc.append('*'); <s> case 0x2a: acc.append('*'); <s> sql.append('\\').append('0'); <s> sql.append('\\').append('0'); <s> case 'U' : user = g.getOptarg(); break; <s> case 0x20: case 0x09: case 0x0a: case 0x0d: buf.append(Character.toChars(c)); <s> case 0x20: case 0x09: case 0x0a: case 0x0d: buf.append(Character.toChars(c)); <s> case 0x20: case 0x09: case 0x0a: case 0x0d: buf.append(Character.toChars(c)); <s>  } else out.print("\t0\t0"); <s>  } else out.print("\t0\t0");
) throws VM_PragmaInterruptible { <s> ) throws VM_PragmaInterruptible { <s> ) throws VM_PragmaInterruptible { <s> || type.equals("oligo") || type.equals("BAC") || type.equals("chromosome_band")) { <s> || type.equals("oligo") || type.equals("BAC") || type.equals("chromosome_band")) { <s> ) { <s> )) <s> ) + 1 <s> )) <s> ) { <s> ), new Writer() { public void writeTo(DataOutputStream out) throws IOException { out.writeBoolean(false); } } <s> ) + 1 <s> )) <s> )) <s> ) + 1 <s> ), p <s> ) + 1 <s> ), (Provider) null <s> )), <s> )), <s> )), <s> )), <s> ){ return filename; } <s>  if ((DrJava.getConfig().getSetting(DIALOG_COMPLETE_SCAN_CLASS_FILES).booleanValue()) && (_model.getBuildDirectory()!=null)) { _scanClassFiles(); <s> catch (Exception e) { String es = "Erorr add()"; log.error(es, e); throw new RuntimeException(es, e); } finally {
jsrSiteMap.getReferenceMapIndex(), true); <s> jsrSiteMap.getReferenceMapIndex(), true); <s> jsrSiteMap.getReferenceMapIndex(), true); <s> ParameterNode pn; if (value instanceof UnaryOperatorNode) pn = ((UnaryOperatorNode)value).getParameterOperand(); else pn = (ParameterNode) (value); jsqlType = pn.getJSQLType(); <s> jsrSiteMap.getNonReferenceMapIndex(), true); <s> jsrSiteMap.getNonReferenceMapIndex(), true); <s> jsrSiteMap.getNonReferenceMapIndex(), true); <s> jsrSiteMap.getReturnAddressMapIndex(), false); <s> jsrSiteMap.getReturnAddressMapIndex(), false); <s> jsrSiteMap.getReturnAddressMapIndex(), false); <s> jspt.reset(xmlNode, null, JSPELHandler.getJSPELHandler()); <s> scriptStatistics.getForLastTest(); <s> action.setEnabled(true); <s> action.setEnabled(true); <s> callbackMethod.getReturnType(),world.isInJava5Mode()); <s> IPluginBase pluginBase = model.getPluginBase(true); try { pluginBase.setSchemaVersion("3.0"); } catch (CoreException e) { } <s> IPluginBase pluginBase = model.getPluginBase(true); try { pluginBase.setSchemaVersion("3.0"); } catch (CoreException e) { } <s> return jsFunction_toString(10); <s> return jsFunction_toString(10); <s> return jsFunction_toString(10); <s> return jsFunction_toString(10); <s> return jsFunction_toString(10); <s> return jsFunction_toString(10); <s> return jsFunction_toString(10); <s> return jsFunction_toString(10);
((this.isLeaf==null && other.getIsLeaf()==null) || (this.isLeaf!=null && this.isLeaf.equals(other.getIsLeaf()))) && <s> ((this.isLeaf==null && other.getIsLeaf()==null) || (this.isLeaf!=null && this.isLeaf.equals(other.getIsLeaf()))) && <s> ((this.isLeaf==null && other.getIsLeaf()==null) || (this.isLeaf!=null && this.isLeaf.equals(other.getIsLeaf()))) && <s> ((this.isLeaf==null && other.getIsLeaf()==null) || (this.isLeaf!=null && this.isLeaf.equals(other.getIsLeaf()))) && <s> m_isGlobal = false; <s> m_isGlobal = false; <s> final String scopeName = aScopeName.trim().toLowerCase(); <s> final String scopeName = aScopeName.trim().toLowerCase(); <s> Object isTransportBlocking = msgContext.getProperty( <s> ! ts.equals(s, t) && <s> ! ts.equals(s, t) && <s> (r.getType()== newR.getType() || (r.isNatural() && newR.isNatural())) && <s> (r.getType()== newR.getType() || (r.isNatural() && newR.isNatural())) && <s> (r.getType()== newR.getType() || (r.isNatural() && newR.isNatural())) && <s> return isPackageClass() || (isStatic() && isModuleClass() <s> return isPackageClass() || (isStatic() && isModuleClass() <s> return isPackageClass() || (isStatic() && isModuleClass() <s> return isPackageClass() || (isStatic() && isModuleClass() <s> return isPackageClass() || (isStatic() && isModuleClass() <s> return isPackageClass() || (isStatic() && isModuleClass() <s> return isPackageClass() || (isStatic() && isModuleClass() <s> return isPackageClass() || (isStatic() && isModuleClass() <s> return ! t.isVoid(); <s> boolean funcReturnVal = (in.read() == 2); <s> boolean funcReturnVal = (in.read() == 2);
if (b < 0x20 || b >= 0x7f) { <s> if(ch == '/') <s> if(ch == '/') <s> if(ch == '/') <s> if (b0 == 0x00 && b1 == 0x3C && b2 == 0x00 && b3 == 0x3F) { <s> if (b0 == 0x00 && b1 == 0x3C && b2 == 0x00 && b3 == 0x3F) { <s> if (b0 == 0x00 && b1 == 0x3C && b2 == 0x00 && b3 == 0x3F) { <s> if (b0 == 0x00 && b1 == 0x3C && b2 == 0x00 && b3 == 0x3F) { <s> if(ch != '\b' && (ch < 0x20 || ch == 0x7f)) <s> if (secondByte < 0x40 || secondByte == 0x007f || secondByte == 0x00ff || sjis && secondByte >= 0x00fd) { <s>  if (header[0] == (byte) 0x4D && header[1] == (byte) 0x4D) { <s>  if (header[0] == (byte) 0x49 && header[1] == (byte) 0x49) { <s> int b0 = b[0] & 0xFF; int b1 = b[1] & 0xFF; int b2 = b[2] & 0xFF; if (b0 != 0xEF || b1 != 0xBB || b2 != 0xBF) { <s> int b0 = b[0] & 0xFF; int b1 = b[1] & 0xFF; int b2 = b[2] & 0xFF; if (b0 != 0xEF || b1 != 0xBB || b2 != 0xBF) { <s> int b0 = b[0] & 0xFF; int b1 = b[1] & 0xFF; int b2 = b[2] & 0xFF; if (b0 != 0xEF || b1 != 0xBB || b2 != 0xBF) { <s> int b0 = b[0] & 0xFF; int b1 = b[1] & 0xFF; int b2 = b[2] & 0xFF; if (b0 != 0xEF || b1 != 0xBB || b2 != 0xBF) { <s>  if (blen > 1 && buffer[blen-1] == UNDERSCORE) { <s> if (c != 'E' && c != 'e' && c != 'D' && c != 'd') { <s> if (c != 'E' && c != 'e' && c != 'D' && c != 'd') { <s> if (bsl > decToSL + 1) <s> if ( (mods != 0) && (mods != KeyEvent.SHIFT_MASK) ) { <s> if((c < 32) && (c != '\n') && (c != '\r') ) { <s> if((c < 32) && (c != '\n') && (c != '\r') ) { <s> if((c < 32) && (c != '\n') && (c != '\r') ) { <s> if((c < 32) && (c != '\n') && (c != '\r') ) {
expressionResult = true; break; <s>  return false; <s> expressionResult = true; break; <s> expressionResult = true; break; <s> if (psi != null) { if (psi.precedence < ssi.precedence) preserve = false; else if (psPriority < ssPriority) preserve = false; <s> expressionResult = true; break; <s>  <s> removed = true; <s>  return editor.shouldSelectCell(null); } <s> { position = match.getEndIndex(); return true; } <s> expressionResult = true; break; <s> return false; <s> return; <s> expressionResult = true; break; <s> removed = true; <s> finally { if (acquired) { lock.writeLock().release(); } } <s> expressionResult = true; break; <s> return res; <s> return false; <s> return context.isDataFlavorSupported (df); <s> { int edgeCount = ((WorkflowPort)port.getCell()).getEdgeCount(); if(edgeCount == 0) return true; } <s> return false; <s> return false; <s> boolean toggle = false; if (SwingUtilities.isLeftMouseButton(event)) { int clickCount = tree.getToggleClickCount(); if (clickCount > 0 && event.getClickCount() == clickCount) toggle = true; } return toggle; <s>  return equals(path);
/*int dot = mod.indexOf('.'); <s>  int dot = (name.endsWith(".fb") ? name.length()-3 : -1); <s>  int dot = (name.endsWith(".fb") ? name.length()-3 : -1); <s> int dotIndex = imageName.lastIndexOf('.'); <s> int idx = getType().getName().lastIndexOf('.'); <s> int idx = getType().getName().lastIndexOf('.'); <s> int index = filename.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int lastPeriod = cname.lastIndexOf('.'); <s> int lastPeriod = cname.lastIndexOf('.'); <s> int dotIndex = file.getName().lastIndexOf(".xml");
/*int dot = mod.indexOf('.'); <s>  int dot = (name.endsWith(".fb") ? name.length()-3 : -1); <s>  int dot = (name.endsWith(".fb") ? name.length()-3 : -1); <s> int dotIndex = imageName.lastIndexOf('.'); <s> int idx = getType().getName().lastIndexOf('.'); <s> int idx = getType().getName().lastIndexOf('.'); <s> int index = filename.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int x = arg.lastIndexOf('.'); <s> int lastPeriod = cname.lastIndexOf('.'); <s> int lastPeriod = cname.lastIndexOf('.'); <s> int dotIndex = file.getName().lastIndexOf(".xml");
 if (false && result != null) { <s>  if (false && result != null) { <s> boolean hasEnumTargets = (tr.nEnumTargets() > 0); if (result != null && !hasEnumTargets) { <s>  if (false && result != null) { <s> boolean hasEnumTargets = (tr.nEnumTargets() > 0); if (result != null && !hasEnumTargets) { <s>  if (false && result != null) { <s> boolean hasEnumTargets = (tr.nEnumTargets() > 0); if (result != null && !hasEnumTargets) { <s>  if (false && result != null) { <s>  if (false && result != null) { <s> if (result == null || !result.booleanValue()) { <s>  if (result == null) result = findRequiredObject(object, packageName); if (result == null) <s> if (result == null || !result.booleanValue()) { <s> if (result == null || result.length()==0) { <s> if (result == null || !result.booleanValue()) { <s>  if (result == null && Display.getCurrent()!=null) { <s>  <s>  if (result == null) result = findRequiredResources(name, packageName); if (result == null) <s> if (result == null || !result.booleanValue()) { <s> if (result == null || result.length()==0) { <s> if (result == null || !result.booleanValue()) { <s> if (! tm.isAround()) { <s>  if (result == null && Display.getCurrent()!=null) { <s> if (result == null || !result.booleanValue()) { <s> if (result == null || !result.booleanValue()) { <s> if (result == null || !result.booleanValue()) {
if (provider != null && element.equals(provider.getRootLayoutNode().getRootVMC().getInputObject())) { <s> if (provider != null && element.equals(provider.getRootLayoutNode().getRootVMC().getInputObject())) { <s> if (until != null && mDtStart != null) { <s> Map map = null; if (property == null) { try { map = (Map) bean; } catch (ClassCastException e) { throw new JspException (messages.getMessage("linkTag.type")); } } else { <s> Dictionary dictionary = null; if (property == null) { try { dictionary = (Dictionary) bean; } catch (ClassCastException e) { throw new JspException (messages.getMessage("linkTag.type1")); } } else { <s> Dictionary dictionary = null; if (property == null) { try { dictionary = (Dictionary) bean; } catch (ClassCastException e) { throw new JspException (messages.getMessage("linkTag.type1")); } } else { <s> Map map = null; if (property == null) { try { map = (Map) bean; } catch (ClassCastException e) { throw new JspException (messages.getMessage("linkTag.type")); } } else { <s> Map map = null; if (property == null) { try { map = (Map) bean; } catch (ClassCastException e) { throw new JspException (messages.getMessage("linkTag.type")); } } else { <s> Dictionary dictionary = null; if (property == null) { try { dictionary = (Dictionary) bean; } catch (ClassCastException e) { throw new JspException (messages.getMessage("linkTag.type1")); } } else { <s> if (property != null && svnProperty != null) { <s> if (property != null && svnProperty != null) { <s> RangeIndexSpec qnIdx = idxSpec.getIndexByQName(node.getQName()); if (spec != null || qnIdx != null) { <s> if (removed != null && sipTransaction.testAndSetTransactionTerminatedEvent()) { <s> if (removed != null && sipTransaction.testAndSetTransactionTerminatedEvent()) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (href != null) { <s> if (strs != null && !strs.isEmpty()) {
} } else { <s> else <s> } } else { <s> else { <s>  <s> else { <s> break; case 8: <s> } } else { <s> } else if (graphic.isSelected()){ <s> else <s> break; case PARAM: <s> } } else { <s> } else if (markerData.getTextMarker() != null){ <s> else { <s>  m.setPersisted(true); } else { log.info("The message " + m.getMessageID() + " has been peristed before so just updating it's channel count"); <s> else <s> } } else { <s> else <s> } else if (applies) { <s> else <s> break; case PARAM: <s> } else if (newStatus != STATUS_STD_ERROR) { <s> } else if (gcColor != GC_YELLOW) { <s> int size; int index; <s> 
this.globalContext = context.getGlobalContext(); <s>  <s>  <s>  <s>  <s>  <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s> ContextData contextData = debugGui.main.currentContextData(); <s>  <s>  <s>  <s>  <s>  <s> 
 <s>  <s>  <s>  <s> if (dataType != null && dataType instanceof DataType) { <s> if(type != null){ <s> if(type != null){ <s> if (type != null && _elementNameToTypeCache != null) { <s> if (type != null && _elementNameToTypeCache != null) { <s> if (type != null && _elementNameToTypeCache != null) { <s> if (kind != null) { <s> if(type != null){ <s> if(type != null){ <s> if (type != null && _elementNameToTypeCache != null) { <s> if(type != null){ <s> if(type != null){ <s> if(type != null){ <s> if(type != null){ <s> if (scriptOrFn.getType() == Token.FUNCTION) { <s> if (scriptOrFn.getType() == Token.FUNCTION) { <s> if (scriptOrFn.getType() == Token.FUNCTION) { <s> if (scriptOrFn.getType() == Token.FUNCTION) { <s> if (scriptOrFn.getType() == Token.FUNCTION) { <s> if (scriptOrFn.getType() == Token.FUNCTION) { <s> if (scriptOrFn.getType() == Token.FUNCTION) {
if (nameStr.length() == 0 && baseString.length() == 0) { <s>  Vector remainingSets = (Vector) cc.depthCondSets.get(cc.getDepth()); if (remainingSets != null) { <s> if (hi > 1 && _x_values.length > 1 && <s> if (tdata.format < 8 || tdata.format % 8 != 0) { <s> if (months.length > 1 && x_values.length > 1 && <s>  if (activeNode.menu_lower) <s>  if (activeNode.menu_lower) <s>  if (activeNode.menu_lower) <s> if (sasValues.targetRequires == 0 && sasValues.targetSupports == 0) { <s>  <s>  <s>  <s>  <s> if (prefix.equals(defined)) <s> if (qualifiedCandidates == null || qualifiedCandidates.length == 0) <s> if ( (_factories == null || _factories.size() == 0) && _dispatchedBatchFactories.isEmpty() ) <s> /*logger.info("getCandidates" + " name=" + se.name + " hasAttr=" + hasAttribute(se.attrs, "Role", "HealthMonitor") + " isExpired=" + isExpired(se) + " currentState=" + se.currentState + " normalState=" + normalState);*/ if (se != null && se.attrs != null && hasAttribute(se.attrs, "Role", "HealthMonitor") && !isExpired(se) && <s> if (node.values == null || node.values.length == 0) { <s> if (attr.prefix != null && <s> if (this.fileList.size() == 0 && this.linkList.size() == 0) <s> if (str.length() == 0 || set == null || set.length() == 0) { <s>  <s>  <s> if (this.protocol.equals(that.protocol) && this.host.equals(that.host) && <s> if (this.protocol.equals( that.protocol) && this.host.equals(that.host) &&
uc = ucn; <s>  <s>  <s>  <s>  <s> upperCase = toUpperCase(text.charAt(textPosition)); <s> upperCase = toUpperCase(text.charAt(textPosition)); <s>  planes.setChar(xPos + x, aid.charAt(x)); <s>  planes.setChar(xPos + x, aid.charAt(x)); <s>  planes.setChar(pPos, planes.getChar(pos)); <s>  planes.setChar(pPos, planes.getChar(pos)); <s>  planes.setChar(pPos, planes.getChar(pos)); <s>  planes.setChar(pPos, planes.getChar(pos)); <s> aciIdx += charCount; <s> aciIdx += charCount; <s> curChar = Character.codePointAt(curCodePointUTF16, 0); <s> curChar = Character.codePointAt(curCodePointUTF16, 0); <s> try { Token token = context.getTokenFactory() .createToken(Catcode.OTHER, t.getChar(), Namespace.DEFAULT_NAMESPACE); toks = new Tokens(token); } catch (CatcodeException e) { throw new InterpreterException(e); } <s> else ret = Character.isDigit(s.charAt(i)); <s> int numBegin = index - 1; int numEnd = pLength; for (int i = index; i < pLength; i++) { if (! Character.isDigit(pattern[i])) { numEnd = i; break; } } int num = parseInt(pattern, numBegin, numEnd-numBegin, 10); currentToken = new RETokenBackRef(subIndex,num,insens); index = numEnd; <s> int numBegin = index - 1; int numEnd = pLength; for (int i = index; i < pLength; i++) { if (! Character.isDigit(pattern[i])) { numEnd = i; break; } } int num = parseInt(pattern, numBegin, numEnd-numBegin, 10); currentToken = new RETokenBackRef(subIndex,num,insens); index = numEnd; <s> offset -= UTF16.getCharCount(ch); <s> offset -= UTF16.getCharCount(ch); <s> offset -= UTF16.getCharCount(ch); <s> offset -= UTF16.getCharCount(ch);
if (str.startsWith("0x") || str.startsWith("-0x")) { return createInteger(str); <s> if (str.startsWith("0x") || str.startsWith("-0x")) { return createInteger(str); <s>  <s> if (option.startsWith("-J") || option.startsWith("-X") || option.startsWith("-A")) { <s> if (modelText.startsWith("<") && !modelText.startsWith("</") && !modelText.startsWith("<!")) { <s> if (!name.startsWith("get") && !name.startsWith("is")) { <s> if (!name.startsWith("get") && !name.startsWith("is")) { <s> if (!name.startsWith("get") && !name.startsWith("is")) { <s> if (!name.startsWith("get") && !name.startsWith("is")) { <s> if (maValue == null || maValue.length()==0) { w.write("\"\""); } else if (maValue.startsWith("\"") && maValue.endsWith("\"")) { <s> if (domain.equals(WILDCARD) || domain.indexOf("@") < 0) { <s> if (domain.equals(WILDCARD) || domain.indexOf("@") < 0) { <s> System.out.println("e="+e.toString()+" action="+e.getActionCommand()); if (action.equals(".") || action.equals(",")) { <s> if (nextLine == null || nextLine.startsWith("#")) { <s> if (maValue.startsWith("\"") && maValue.endsWith("\"")) { <s> if (attributeName.startsWith ("xmlns:") || attributeName.equals ("xmlns")) { <s> if (attributeName.startsWith ("xmlns:") || attributeName.equals ("xmlns")) { <s> if (attributeName.startsWith ("xmlns:") || attributeName.equals ("xmlns")) { <s> if (attributeName.startsWith ("xmlns:") || attributeName.equals ("xmlns")) { <s> if (scheme.equals("http") || scheme.equals("https") || scheme.equals("ssl") || scheme.equals("tcp")) { <s> if (scheme.equals("http") || scheme.equals("https") || scheme.equals("ssl") || scheme.equals("tcp")) { <s> if (scheme.equals("http") || scheme.equals("https") || (isGet(method) && (scheme.equals("file") || scheme.equals("oxf")))) { <s> if (scheme.equals("http") || scheme.equals("https") || (isGet(method) && (scheme.equals("file") || scheme.equals("oxf")))) { <s> if (scheme.equals("http") || scheme.equals("https") || (isGet(method) && (scheme.equals("file") || scheme.equals("oxf")))) { <s> if (scheme.equals("http") || scheme.equals("https") || (isGet(method) && (scheme.equals("file") || scheme.equals("oxf")))) {
cal.get(Calendar.YEAR), cal.get(Calendar.MONTH) + 1, cal.get(Calendar.DAY_OF_MONTH), cal.get(Calendar.HOUR_OF_DAY), <s> 32 * ( cal.get(Calendar.MONTH) + 1 ) + <s> 32 * ( cal.get(Calendar.MONTH) + 1 ) + <s> && calOne.get(Calendar.DAY_OF_MONTH) == calTwo.get(Calendar.DAY_OF_MONTH) <s> && calOne.get(Calendar.DAY_OF_MONTH) == calTwo.get(Calendar.DAY_OF_MONTH) <s> && calOne.get(Calendar.DAY_OF_MONTH) == calTwo.get(Calendar.DAY_OF_MONTH) <s> && calOne.get(Calendar.DAY_OF_MONTH) == calTwo.get(Calendar.DAY_OF_MONTH)) <s> && calOne.get(Calendar.DAY_OF_MONTH) == calTwo.get(Calendar.DAY_OF_MONTH)) <s> && calOne.get(Calendar.DAY_OF_MONTH) == calTwo.get(Calendar.DAY_OF_MONTH)) <s> calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH)); <s> cal.get(Calendar.MONTH) + 1, <s> cal.get(Calendar.MONTH) + 1, <s> cal.get(Calendar.MONTH) + 1, <s> cal.set(Calendar.HOUR_OF_DAY, <s> format(c.get(Calendar.HOUR_OF_DAY), 2) + <s> cal.set(Calendar.MONTH, MONTHS.indexOf(mo) / 4); <s> cal.set(Calendar.MONTH, MONTHS.indexOf(mo) / 4); <s> long dt = year * 10000L; <s> long dt = year * 10000L; <s> long dt = year * 10000L; <s> long dt = year * 10000L; <s> long dt = year * 10000L; <s> long dt = year * 10000L; <s> startTimeAm = cal.get(Calendar.HOUR_OF_DAY) <= 11; <s> hour = c.get(Calendar.HOUR_OF_DAY);
 return stateExp && !stateAdded; } <s>  return stateExp && !stateAdded; } <s>  return stateExp && stateAdded; } <s>  return stateExp && stateAdded; } <s> return declaration == null && (this.tagBits & TagBits.IsArgument) == 0; <s> return leafStatus; <s>  <s> if(!repeatHeader) { return true; } else { if(IStyle.SOFT_VALUE.equals( content.getStyle( ).getProperty( IStyle.STYLE_PAGE_BREAK_BEFORE ) )) { return true; } return false; } <s> if(!repeatHeader) { return true; } else { if(IStyle.SOFT_VALUE.equals( content.getStyle( ).getProperty( IStyle.STYLE_PAGE_BREAK_BEFORE ) )) { return true; } return false; } <s> if(!repeatHeader) { return true; } else { if(IStyle.SOFT_VALUE.equals( content.getStyle( ).getProperty( IStyle.STYLE_PAGE_BREAK_BEFORE ) )) { return true; } return false; } <s> if(!repeatHeader) { return true; } else { if(IStyle.SOFT_VALUE.equals( content.getStyle( ).getProperty( IStyle.STYLE_PAGE_BREAK_BEFORE ) )) { return true; } return false; } <s> return getPluginPreferences().getBoolean(PREF_USE_NEW_PARSER); <s> return getPluginPreferences().getBoolean(PREF_USE_NEW_PARSER); <s> for (int i = 0; foundContext == null && i < contexts.length; i++) { if (contexts[i] instanceof _Inclusion) { context = (_Inclusion) contexts[i]; if (CharArrayUtils.equals( ((_Inclusion) context).reader.filename, path .toCharArray())) { foundContext = context; break; } foundContext = findInclusion(context, path); } } return foundContext; <s> for (int i = 0; foundContext == null && i < contexts.length; i++) { if (contexts[i] instanceof _Inclusion) { context = (_Inclusion) contexts[i]; if (CharArrayUtils.equals( ((_Inclusion) context).reader.filename, path .toCharArray())) { foundContext = context; break; } foundContext = findInclusion(context, path); } } return foundContext; <s> return isLeaf && !isVirtual; <s> return true; <s> Property rev = getAssociatedProperty(); if (rev == null) { return false; } else { return rev.isComponent(); } <s> return (flags & FLAG_HAS_PACKAGE_INFO) == FLAG_HAS_PACKAGE_INFO; <s> return validatedClass; <s> return iLeafPos; <s>  return new InterfaceBuilder(m_currentIf); <s>  return new InterfaceBuilder(m_currentIf); <s>  return new InterfaceBuilder(m_currentIf); <s>  return new InterfaceBuilder(m_currentIf);
GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> GregorianCalendar cal = new GregorianCalendar (TimeZone.getTimeZone("GMT")); <s> SimpleDateFormat df = new SimpleDateFormat("HH:mm:ss"); <s> long millis = date.getTime(); <s>  mCalendar=java.util.Calendar.getInstance(); <s> Calendar cal = GregorianCalendarFactory.constructCalendar(month); <s> Calendar calend = new GregorianCalendar(); <s> Calendar calend = new GregorianCalendar(); <s> Calendar calend = new GregorianCalendar(); <s> Calendar c = SystemTime.getUtcCalendar(); <s> Calendar c = SystemTime.getUtcCalendar(); <s> Calendar c = new GregorianCalendar(2003, 11, 25); <s>  java.util.TimeZone javazone = java.util.TimeZone.getTimeZone("GMT"); TimeZone icuzone = TimeZone.getTimeZone("GMT"); GregorianCalendar gc = new GregorianCalendar(icuzone); <s> GregorianCalendar cal = (GregorianCalendar) o; <s> GregorianCalendar cal = (GregorianCalendar) o; <s> YearMonthDay currentDate = new YearMonthDay(); <s> if(date == null) { date = new GregorianCalendar(); }
static String toDecimalScaledString(BigInteger val, int scale) { int sign = val.sign; int numberLength = val.numberLength; int digits[] = val.digits; <s> static String toDecimalScaledString(BigInteger val, int scale) { int sign = val.sign; int numberLength = val.numberLength; int digits[] = val.digits; <s> public static boolean isJavaVersionAtLeast(float requiredVersion) { <s> public static boolean isJavaVersionAtLeast(float requiredVersion) { <s> static Type[] toType(Class cls[]) { <s> static Type[] toType(Class cls[]) { <s> public static wFont parse(vString spec) { <s> public static String formatLogFileName(Date date) { <s> public static String formatLogFileName(Date date) { <s> public static String formatLogFileName(Date date) { <s> File createNewTestFile(int size) { <s> private static String getLongestCommonSubstring(String first, String second) { <s> public static int convertVersionStringToInt(IVirtualComponent comp) { if (comp.getComponentTypeId().equals(IModuleConstants.JST_WEB_MODULE)) return convertWebVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId().equals(IModuleConstants.JST_EJB_MODULE)) return convertEJBVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId().equals(IModuleConstants.JST_EAR_MODULE)) return convertVersionStringToInt(comp.getVersion()); if (comp.getComponentTypeId().equals(IModuleConstants.JST_CONNECTOR_MODULE)) return convertConnectorVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId().equals(IModuleConstants.JST_APPCLIENT_MODULE)) return convertAppClientVersionStringToJ2EEVersionID(comp.getVersion()); <s> public static int convertVersionStringToInt(IVirtualComponent comp) { if (comp.getComponentTypeId() == IModuleConstants.JST_WEB_MODULE) return convertWebVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId() == IModuleConstants.JST_EJB_MODULE) return convertEJBVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId() == IModuleConstants.JST_EAR_MODULE) return convertVersionStringToInt(comp.getVersion()); if (comp.getComponentTypeId() == IModuleConstants.JST_CONNECTOR_MODULE) return convertConnectorVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId() == IModuleConstants.JST_APPCLIENT_MODULE) return convertAppClientVersionStringToJ2EEVersionID(comp.getVersion()); <s> public static int convertVersionStringToInt(IVirtualComponent comp) { if (comp.getComponentTypeId().equals(IModuleConstants.JST_WEB_MODULE)) return convertWebVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId().equals(IModuleConstants.JST_EJB_MODULE)) return convertEJBVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId().equals(IModuleConstants.JST_EAR_MODULE)) return convertVersionStringToInt(comp.getVersion()); if (comp.getComponentTypeId().equals(IModuleConstants.JST_CONNECTOR_MODULE)) return convertConnectorVersionStringToJ2EEVersionID(comp.getVersion()); if (comp.getComponentTypeId().equals(IModuleConstants.JST_APPCLIENT_MODULE)) return convertAppClientVersionStringToJ2EEVersionID(comp.getVersion()); <s> public org.lockss.plugin.CachedUrl getCuVersion(int version) { <s> private String addIndexInfo(PrintWriter index, String path) { <s> private static int tzOffsetToTime(String utcOffset) throws ServiceException { int len = utcOffset != null ? utcOffset.length() : 0; if (len != 5 && len != 7) throw ServiceException.INVALID_REQUEST( "Invalid " + ICalTok.TZOFFSETFROM + "/" + ICalTok.TZOFFSETTO + " value \"" + utcOffset + "\"; must have format \"+/-hhmm[ss]\"", null); <s> public static boolean isJavaVersionAtLeast(float requiredVersion) { return (JAVA_VERSION_FLOAT >= requiredVersion); <s> public static boolean isJavaVersionAtLeast(float requiredVersion) { return (JAVA_VERSION_FLOAT >= requiredVersion); <s> static synchronized void registerSpecialVersion(OPT_SpecializedMethod spMethod) { <s> static synchronized void registerSpecialVersion(OPT_SpecializedMethod spMethod) { <s> static synchronized void registerSpecialVersion(OPT_SpecializedMethod spMethod) { <s> public static long tagsToBitmask(String csv) { <s> static public Writer toWriter(OutputStream f) {
ret[i] = types[i].getName(); <s> result[i] = array[i].charValue(); <s> result[i] = array[i].longValue(); <s> result[i] = array[i].charValue(); <s> String id = extensions[i].getNamespace(); if (!pluginIds.contains(id)) { pluginIds.add(id); } <s> String id = extensions[i].getNamespace(); if (!pluginIds.contains(id)) { pluginIds.add(id); } <s> String id = extensions[i].getNamespace(); if (!pluginIds.contains(id)) { pluginIds.add(id); } <s> String id = extensions[i].getNamespace(); if (!pluginIds.contains(id)) { pluginIds.add(id); } <s> s[i] = e[i].sym(); <s> s[i] = e[i].sym(); <s> s[i] = e[i].sym(); <s> IResource changedResource = statuses[i].getResource(); <s> r[i] = ContentModelRefExpRemover.remove(owners[i].contentModel,pool); <s> result[i] = array[i].charValue(); <s> result[i] = array[i].charValue(); <s> list[count++] = packets[i].getType(); <s> list[count++] = packets[i].getType(); <s> types[i] = markerDescriptions[i].getType(); <s> types[i] = markerDescriptions[i].getType(); <s> types[i] = markerDescriptions[i].getType(); <s> types[i] = markerDescriptions[i].getType(); <s> results[i] = runners[i].result; <s> Class rawClass = beanProperties[c].getValueClass(); if(primitiveToObjectMap.containsKey(rawClass)) { classes[c] = (Class)primitiveToObjectMap.get(rawClass); } else { classes[c] = rawClass; } <s> { msg.append(params[i].getClass().getName()); } <s>  if (params[i] == null) msg = msg + "null"; else msg = msg + params[i].getClass().getName();
return availableLocaleList().contains(locale); <s> return availableLocaleList().contains(locale); <s> return getModel(name) != null; <s>  return !hiddenBugCategorySet.contains(category); <s>  return !hiddenBugCategorySet.contains(category); <s> Reference classInfoRef = (Reference)m_repository.get(name.hashCode()); return (classInfoRef==null)?false:(classInfoRef.get()!=null); <s> return bakMap.containsKey(str.toUpperCase()); <s> return numericTypes.contains(typeName); <s> return numericTypes.contains(typeName); <s> return numericTypes.contains(typeName); <s> return numericTypes.contains(typeName); <s> return getDataType(name) != null; <s> return getLoadStoreCount(field).loadCount > 0; <s> return getLoadStoreCount(field).loadCount > 0; <s> return m_ExcludeResultPrefixs.contains(prefix); */ <s> return m_ExcludeResultPrefixs.contains(prefix); */ <s> return immutableTypes.contains(typeName); <s> return immutableTypes.contains(typeName); <s> return immutableTypes.contains(typeName); <s> return immutableTypes.contains(typeName); <s> return m_Ignored.containsKey(displayName); <s> return m_Ignored.containsKey(displayName); <s> return m_Ignored.containsKey(displayName); <s> return m_Ignored.containsKey(displayName); <s> return m_Ignored.containsKey(displayName);
str.getChars(0, width, buffer, size); <s> str.getChars(0, width, buffer, size); <s> System.arraycopy(str, str_offset, value, offset, len); <s> System.arraycopy(str, str_offset, value, offset, len); <s> System.arraycopy(str, str_offset, value, offset, len); <s> System.arraycopy(str, str_offset, value, offset, len); <s> VMSystem.arraycopy(str, str_offset, value, offset, len); <s> System.arraycopy(str, str_offset, value, offset, len); <s> System.arraycopy(chars, 0, value, count, chars.length); <s> System.arraycopy(chars, 0, value, count, chars.length); <s>  <s>  <s> System.arraycopy(c, offset, this.buf, this.count, len); <s> return content.getString(offset, length); <s> return content.getString(offset, length); <s> return content.getString(offset, length); <s> return content.getString(offset, length); <s> if (length > 0) { buffer.append(chars, start, length); } <s> if (length > 0) { buffer.append(chars, start, length); } <s> if (length > 0) { buffer.append(chars, start, length); } <s> if (length > 0) { buffer.append(chars, start, length); } <s> if (length > 0) { buffer.append(chars, start, length); } <s> if (length > 0) { buffer.append(chars, start, length); } <s> out.write(ch); <s> out.write(b);
int substringLength = stringLength; <s> int substringLength = stringLength; <s> int substringLength = stringLength; <s> int substringLength = stringLength; <s> int len = myOptLData.length; <s> int len = myOptLData.length; <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int strLen = s.length(); <s> int len = size; <s> int length = b.length; <s> int length = b.length; <s> int length = b.length; <s> int length = b.length; <s> int length = b.length;
return (double) getLength() / (double) getThickness(); <s> return (double) getLength() / (double) getThickness(); <s> return (double) getLength() / (double) getThickness(); <s> return (double) getLength() / (double) getThickness(); <s> return (float)(Math.ceil(entity.getWeight() * entity.getOriginalJumpMP() / 10.0) / 2.0); <s> return (float)(Math.ceil(entity.getWeight() * entity.getOriginalJumpMP() / 10.0) / 2.0); <s> return (double) (Configuration.NANOS_PER_SECOND * (bytesSent + bytesReceived)) / durationNanos; <s> return screenSize.getWidth() / screenSize.getHeight(); <s> return screenSize.getWidth() / screenSize.getHeight(); <s> return (double) (runTime) / (double) (runCount); <s> return (double) (runTime) / (double) (runCount); <s> return (double) (runTime) / (double) (runCount); <s> return (double) (runTime) / (double) (runCount); <s> return (double)getNumberOfCoveredBranches() / (double)getNumberOfBranches(); <s> return ( ( double ) this.getMatches() - ( double ) this.getQueryGapCount() - this.getTargetGapCount() ) / this.getQuerySize(); <s> return (count == 0) ? 0 : total / getLapCount(); <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4; <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4; <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4; <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4; <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4; <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4; <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4; <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4; <s> if(inputLimitDefault) return -1; return (((int) ((1000L * 1000L * 1000L) / requestInputThrottle.getNanosPerTick())) * 5) / 4;
 int size = funcs.size(); double sum = 0.0; if ( size > 0 ) { for ( int i = 0; i < size; i++ ) { sum += ((FunctionGenerator) funcs.get( i )).getFlux(); } } return sum; <s> return (value); <s> return a.getClassName().equals(b.getClassName()) ? EXACT_CLASS_NAME_MATCH : 0.0; <s> return (value); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> if ( filters != null ) { return 0.5; } return nodeTest.getPriority(); <s> return chiSquare; <s> return a.getClassName().equals(b.getClassName()) ? EXACT_CLASS_NAME_MATCH : 0.0; <s> if ( filters != null ) { return 0.5; } return nodeTest.getPriority(); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> double variance = 0.0; for (int k = 0; k < edges.length; ++k) { final double len = edges[k].length / avg; final double t = (1 - len * len); variance += t * t; } variance /= m; if (variance < 0) { throw new RuntimeException("variance got negative: " + variance); } final Matrix gram = (Matrix) getGramMatrix(p).dividedBy(avg * avg); final double cellVolume = Math.sqrt(((Real) gram.determinant()) .doubleValue()); final double volumePerNode = Math.max(cellVolume / n, 1e-12); final double sqrVol = volumePerNode * volumePerNode; final double energy = volumeWeight / sqrVol + variance; ++count; return energy; <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s>  int size = funcs.size(); double sum = 0.0; if ( size > 0 ) { for ( int i = 0; i < size; i++ ) { sum += ((FunctionGenerator) funcs.get( i )).getScale(); } sum /= (double) size; } return sum; <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s>  int size = funcs.size(); double sum = 0.0; if ( size > 0 ) { for ( int i = 0; i < size; i++ ) { sum += ((FunctionGenerator) funcs.get( i )).getCentre(); } sum /= (double) size; } return sum; <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> if ( filters != null ) { return 0.5; } return nodeTest.getPriority(); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> checkIndex (parameterIndex, Types.DOUBLE, "Double"); if (result == null) return 0; return ((Double)result).doubleValue (); <s> double variance = 0.0; for (int k = 0; k < edges.length; ++k) { final double len = edges[k].length / avg; final double t = (1 - len * len); variance += t * t; } variance /= m; if (variance < 0) { throw new RuntimeException("variance got negative: " + variance); } final Matrix gram = (Matrix) getGramMatrix(p).dividedBy(avg * avg); final double cellVolume = Math.sqrt(((Real) gram.determinant()) .doubleValue()); final double volumePerNode = Math.max(cellVolume / n, 1e-12); final double sqrVol = volumePerNode * volumePerNode; final double energy = volumeWeight / sqrVol + variance; ++count; return energy;
return 1 / Math.sqrt(2 * Math.PI) * Math.exp(-z * z / 2); <s> return value * Math.PI / 180; <s> return new Complex(MathUtils.sinh(a2) / d, Math.sin(b2) / d); <s> return new Complex(Math.sin(a2) / d, MathUtils.sinh(b2) / d); <s> return 180 * value / Math.PI; <s>  return ret; <s> return Math.sqrt(sum) / Math.sqrt(components.length); <s> return geoMean = Math.exp( super.increment(d) / (double)n ); <s> Math.atan(Math.sinh(p.north()))*180/Math.PI, p.east()*180/Math.PI); <s> r = (r + Math.PI) % (Math.PI * 2); <s> r = (r + Math.PI) % (Math.PI * 2); <s> else return 0.0; <s> else return 0.0; <s> else return 0.0; <s> else return 0.0; <s> double dMinAxis = Math.pow(dStep, iPow + 1); <s> double dMinAxis = Math.pow(dStep, iPow + 1); <s> double dMinAxis = Math.pow(dStep, iPow + 1); <s> double dMinAxis = Math.pow(dStep, iPow + 1); <s> return intVal.multiplyByTenPow(-scale); <s> return intVal.divide(BigInteger.getTenPow(scale)); <s> double theta_inc = local_speed * Math.PI * 2 * frameDuration / (orbitTime * 1000); <s> return tsize.width - ((tsize.width - (int)(horSide * zoom)) / 2); <s> return Math.max(0, value * (r.width - 2) / maxTickCount); <s> return Math.max(0, value * (r.width - 2) / maxTickCount);
else if (value == null) { throw new BAD_OPERATION("No value has previously been inserted"); } else { throw new INTERNAL("Encountered unexpected type of value: " + value.getClass()); } <s> BigDecimal value = getBigDecimal(); if (value == BIGDECIMAL_NULL_VALUE) return DOUBLE_NULL_VALUE; return value.doubleValue(); <s> return myAmount.doubleValue() / 100; <s> return BigDecimal.valueOf(longValue()); <s> return BigDecimal.valueOf(longValue()); <s> return BigDecimal.valueOf(longValue()); <s> return BigDecimal.valueOf(longValue()); <s> return BigDecimal.valueOf(longValue()); <s> return num1 * num2; <s> return new DoubleValue(this); <s> return new DoubleValue(this); <s> return new BigDecimal(Double.toString(value)); <s> return new BigDecimal(Float.toString(value)); <s> return _validator==null ? 0 : _validator.getDoubleValue(); <s> return new String(new char[] {ch}); <s> return new String(new char[] {ch}); <s> else if (value == null) { throw new BAD_OPERATION("No value has previously been inserted"); } else { throw new INTERNAL("Encountered unexpected type of value: " + value.getClass()); } <s> else if (value == null) { throw new BAD_OPERATION("No value has previously been inserted"); } else { throw new INTERNAL("Encountered unexpected type of value: " + value.getClass()); } <s> return res.toString(); <s> return v; <s> return _cols_fetched ?_cols.intValue() : -1; <s> return Double.parseDouble(s); <s> return Double.parseDouble(s); <s> return ((Integer)value).intValue(); <s> return ((Integer)value).intValue();
double diff; if (Double.isNaN(n1Num)) { if (Double.isNaN(n2Num)) diff = 0.0; else diff = -1; } else if (Double.isNaN(n2Num)) diff = 1; else diff = n1Num - n2Num; <s> double diff; if (Double.isNaN(n1Num)) { if (Double.isNaN(n2Num)) diff = 0.0; else diff = -1; } else if (Double.isNaN(n2Num)) diff = 1; else diff = n1Num - n2Num; <s> int n = y * nWidth + x; <s> int n = y * nWidth + x; <s> y = h1 * (m + 1); <s> y = h1 * (m + 1); <s> alphaSize = nInUse + 2; <s> alphaSize = nInUse + 2; <s> alphaSize = nInUse + 2; <s>  <s> int i = n / cols; int j = n % cols; <s> int i = n / cols; int j = n % cols; <s> int c1 = ColorMgmt.nc1; int c2 = ColorMgmt.nc2; <s>  <s> int dstStage = 0, srcStage = 0; int nDataInChannel = 0; { for (dstStage = 0; dstStage < dst.getInitNumPhases(); dstStage++) { int dataNeeded = dst.getPhasePeek(dstStage, inputChannel); while (dataNeeded >= nDataInChannel) { nDataInChannel += src.getPhasePush(srcStage, outputChannel); srcStage++; } nDataInChannel -= dst.getPhasePop(dstStage, inputChannel); } } { for (; srcStage < src.getInitNumPhases(); srcStage++) { nDataInChannel += src.getPhasePush(srcStage, outputChannel); while (nDataInChannel >= dst.getPhasePeek(dstStage, inputChannel)) { nDataInChannel -= dst.getPhasePop(dstStage, inputChannel); dstStage++; } } } numInitSrcExec = srcStage; numInitDstExec = dstStage; } dst2srcDependency = new int[numInitDstExec + numSteadyDstExec]; { int dstStage = 0, srcStage = 0; int nDataInChannel = 0; for (dstStage = 0; dstStage < numInitDstExec + numSteadyDstExec; dstStage++) { int dataNeeded = dst.getPhasePeek(dstStage, inputChannel); while (dataNeeded >= nDataInChannel) { nDataInChannel += src.getPhasePush(srcStage, outputChannel); srcStage++; } dst2srcDependency[dstStage] = srcStage - 1; nDataInChannel -= dst.getPhasePop(dstStage, inputChannel); } <s> int dstStage = 0, srcStage = 0; int nDataInChannel = initDataInChannel; { int minProducedData = dst.getInitPop(inputChannel) + (dst.getSteadyStatePeek(inputChannel) - dst.getSteadyStatePop(inputChannel)) - initDataInChannel; int totalConsumed = 0; for (dstStage = 0; dstStage < dst.getInitNumPhases() || totalConsumed < initDataInChannel || nDataInChannel + totalConsumed < minProducedData; dstStage++) { int dataNeeded = dst.getPhasePeek(dstStage, inputChannel); while (dataNeeded > nDataInChannel) { int dataPushed = src.getPhasePush(srcStage, outputChannel); nDataInChannel += dataPushed; srcStage++; } int dataPopped = dst.getPhasePop(dstStage, inputChannel); nDataInChannel -= dataPopped; totalConsumed += dataPopped; } } { for (; srcStage < src.getInitNumPhases(); srcStage++) { nDataInChannel += src.getPhasePush(srcStage, outputChannel); while (nDataInChannel >= dst.getPhasePeek(dstStage, inputChannel)) { nDataInChannel -= dst.getPhasePop(dstStage, inputChannel); dstStage++; } } } numInitSrcExec = srcStage; numInitDstExec = dstStage; } dst2srcDependency = new int[numInitDstExec + numSteadyDstExec + 1]; { int dstStage = 0, srcStage = 0; int nDataInChannel = initDataInChannel; for (dstStage = 0; dstStage < numInitDstExec + numSteadyDstExec; dstStage++) { int dataNeeded = dst.getPhasePeek(dstStage, inputChannel); while (dataNeeded > nDataInChannel) { nDataInChannel += src.getPhasePush(srcStage, outputChannel); srcStage++; } dst2srcDependency[dstStage + 1] = srcStage; nDataInChannel -= dst.getPhasePop(dstStage, inputChannel); } <s> ind1 = -1; ind2 = -1; <s> int locY2 = gridY2 * maxCellHeight2; <s> int locY2 = gridY2 * maxCellHeight2; <s> int rightIndex = -1; int leftIndex = -1; <s> public static double max(double d1, double d2) { if (d1 > d2) return d1; if (d1 < d2) return d2; /* if either arg is NaN, return NaN */ if (d1 != d2) return Double.NaN; /* max( +0.0,-0.0) == +0.0 */ if (d1 == 0.0 && ((Double.doubleToLongBits(d1) & Double.doubleToLongBits(d2)) & 0x8000000000000000L) == 0) return 0.0; return d1; <s> c1 = ColorMgmt.nsc1; c2 = ColorMgmt.nsc2; <s>  <s>  <s> full = nheight + margin * 3;
if (((Boolean) hMode).booleanValue()) { <s> if (!treeNode.isInitialized()) { <s> if (!treeNode.isInitialized()) { <s> if (((Boolean)value).booleanValue()) <s> if ((int) border.top() != 1) { <s> if ((int) border.top() != 1) { <s> if ((int) border.top() != 1) { <s> if ((int) border.top() != 1) { <s> if (!(Boolean) context.get( <s> if ((int) border.top() == 2) { <s> if ((int) border.top() == 2) { <s> if ((int) border.top() == 2) { <s> if ((int) border.top() == 2) { <s> if (node instanceof Text) { next = ((Text) node).getText(); } else if (node instanceof EntityRef) { next = "&" + ((EntityRef) node).getValue() + ";"; } else { throw new IllegalStateException("Should see only " + "CDATA, Text, or EntityRef"); } <s> if ((int) border.top() == 1) { <s> if ((int) border.top() == 1) { <s> if ((int) border.top() == 1) { <s> if ((int) border.top() == 1) { <s> if ((int) border.top() == 1) { <s> if ((int) border.top() == 1) { <s> if ((int) border.top() == 1) { <s> if ((int) border.top() == 1) { <s> BitSet bits2 = new BitSet(); <s> BitSet bits2 = new BitSet(); <s> BitSet bits2 = new BitSet();
if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) {
return allEnds; <s> return vertexIterator(); <s> return vertexIterator(); <s> return GenericMediaService.theListeners.iterator(); <s> return nodes.values().iterator(); <s> return new CellIterator(); <s> return new FSSSIterator(); <s> return windows.values().iterator(); <s> return this.elements.iterator(); <s> return roleSet.iterator(); <s> return tmpList.iterator (); <s> return resultList.iterator(); <s> if(defaults != null){ return new IteratorChain(defaults.getKeys(),store.iterator()); } else { return store.iterator(); } <s> return listUserNames().iterator(); <s> return listUserNames().iterator(); <s>  final HashSet clone = new HashSet(); clone.addAll( keys ); return clone.iterator(); <s>  final HashSet clone = new HashSet(); clone.addAll( keys ); return clone.iterator(); <s> synchronized (services) { return services.keySet().iterator(); } <s> int rtnValue = seismos.size(); seismos.put(name, seismo); return rtnValue; <s> int rtnValue = seismos.size(); seismos.put(name, seismo); return rtnValue; <s> return new ArrayList(listeners).iterator(); <s> return new ArrayList(listeners).iterator(); <s> return new ArrayList(valueMap.values()).iterator(); <s> return new ArrayList(valueMap.values()).iterator(); <s> return new ArrayList(valueMap.values()).iterator();
for(int i=0;i<m.length;i++) { <s> for(int i=0;i<m.length;i++) { <s> for (int i = 0; i < nKeys; i++) { <s> for (int i = 0; i < nKeys; i++) { <s> for (int i = 0; i < getValues().length; i++) { <s> for (int i = 0; i < nKeys; i++) { <s> for (int i = 0; i < counts.length; i++) <s> for(int i = 0; i < ints.length; i++){ <s> for(int i = 0; i < ints.length; i++){ <s> for(int i = 0; i < ints.length; i++){ <s> for(int i = 0; i < ints.length; i++){ <s> for(int i = 0; i < ints.length; i++){ <s> for(int i = 0; i < ints.length; i++){ <s> for(int i = 0; i < ints.length; i++){ <s> for(int i = 0; i < ints.length; i++){ <s> for (int indice : indices) { <s> for (int indice : indices) { <s> for (int i = 0; i < array.length; i++) <s> for(int i = 0; i < l.length; i++) { <s> for(int i = 0; i < l.length; i++) { <s> for(int i = 0; i < l.length; i++) { <s> for(int i = 0; i < l.length; i++) { <s> for(int i = 0; i < l.length; i++) { <s> for(int i = 0; i < l.length; i++) { <s> for(int i = 0; i < l.length; i++) {
double sum = 0; <s> long sum = 0; <s> int i = 0; int pos = 0; boolean lengthWritten = false; <s> int i = 0; int pos = 0; boolean lengthWritten = false; <s> int i = 0; int pos = 0; boolean lengthWritten = false; <s> long sumDelta = 0; <s> long sumDelta = 0; <s> long sumDelta = 0; <s>  <s> if (theoreticalCapacity.intValue() != 0) { capacities.add(theoreticalCapacity); } if (theoPraticalCapacity.intValue() != 0) { capacities.add(theoPraticalCapacity); } if (doubtsCapacity.intValue() != 0) { capacities.add(doubtsCapacity); } if (labCapacity.intValue() != 0) { capacities.add(labCapacity); } if (praticalCapacity.intValue() != 0) { capacities.add(praticalCapacity); } if (reserveCapacity.intValue() != 0) { capacities.add(reserveCapacity); } <s>  <s>  <s>  <s>  _bindTypes = new Class[_paramInfo.size()]; int paramIndex = 0; <s> int linesParsed = 0; <s>  <s>  <s>  <s>  <s> int count; <s> int count; <s>  <s> int count; <s>  <s> 
return new InputParameterBinding( handle.getParamName( ), expr ); <s> return new InputParameterBinding( handle.getParamName( ), expr ); <s> return new InputParameterBinding( handle.getParamName( ), expr ); <s> return new InputParameterBinding( handle.getParamName( ), expr ); <s> inst = new Instance(dest.weight(), vals); <s> inst = new Instance(dest.weight(), vals); <s> inst = new Instance(dest.weight(), vals); <s> inst = new Instance(dest.weight(), vals); <s> inst = new Instance(dest.weight(), vals); <s> inst = new Instance(dest.weight(), vals); <s> inst = new Instance(dest.weight(), vals); <s> inst = new Instance(dest.weight(), vals); <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result; <s> RubyBignum result = newBignum(input.getRuntime(), value); input.register(result); return result;
return (s != null) ? s : Integer.toString(i); <s> return (s != null) ? s : Integer.toString(i); <s> return (s != null) ? s : Integer.toString(i); <s> return (s != null) ? s : Integer.toString(i); <s> return (s != null) ? s : Integer.toString(i); <s> return (s != null) ? s : Integer.toString(i); <s> return (s != null) ? s : Integer.toString(i); <s> return (result != 0) ? new FSoundSample(result, null) : null; <s> return (result != 0) ? new FSoundSample(result, null) : null; <s> return isISOControl((int)c); <s> return contentFloat < it.contentFloat ? -1 : contentFloat == it.contentFloat ? 0 : 1; <s> return (value == 0.0f || Float.isNaN(value)) <s> return ((c == NEWLINE) || (textInfo.bWrap && (CharUtilities.isSpace(c) || BREAK_CHARS.indexOf(c) >= 0))); <s>  int finalBV = (int)Math.round(dbv + obv + xbv); int retVal = (int)Math.round(((double)finalBV) * pilotFactor); return retVal; <s>  int finalBV = (int)Math.round(dbv + obv + xbv); int retVal = (int)Math.round(((double)finalBV) * pilotFactor); return retVal; <s> return Boolean.valueOf(bb.get() != 0); <s> return Boolean.valueOf(bb.get() != 0); <s> if (item2 > 0) { return (item1 > Integer.MAX_VALUE - item2) ? Integer.MAX_VALUE : item1 + item2; } return item1 + item2; <s> return c2 == null; if(c2 == null) return false; <s> return c2 == null; if(c2 == null) return false; <s> return c2 == null; if(c2 == null) return false; <s> return (short) ((jddType < this._type) ? 1 : -1); <s> return (short) ((jddType < this._type) ? 1 : -1); <s> if (data == null) { return m + "null\n"; } StringBuffer sb = new StringBuffer(length * 3); if (length > 32) { sb.append(m).append("Hexadecimal dump of ").append(length).append( " bytes...\n"); } int end = offset + length; String s; int l = Integer.toString(length).length(); if (l < 4) { l = 4; } for (; offset < end; offset += 32) { if (length > 32) { s = " " + offset; sb.append(m).append(s.substring(s.length() - l)).append(": "); } int i = 0; for (; i < 32 && offset + i + 7 < end; i += 8) { sb.append(toString(data, offset + i, 8)).append(' '); } if (i < 32) { for (; i < 32 && offset + i < end; i++) { sb.append(byteToString(data[offset + i])); } } sb.append('\n'); } return sb.toString(); <s> if (data == null) return m + "null\n"; StringBuffer sb = new StringBuffer(length * 3); if (length > 32) sb.append(m).append("Hexadecimal dump of ") .append(length).append(" bytes...\n"); int end = offset + length; String s; int l = Integer.toString(length).length(); if (l < 4) l = 4; for (; offset < end; offset += 32) { if (length > 32) { s = " " + offset; sb.append(m).append(s.substring(s.length() - l)).append(": "); } int i = 0; for (; i < 32 && offset + i + 7 < end; i += 8) sb.append(toString(data, offset + i, 8)).append(' '); if (i < 32) for (; i < 32 && offset + i < end; i++) sb.append(byteToString(data[offset + i])); sb.append('\n'); } return sb.toString();
if (x == y) { return true; } else if (x != null && y != null) { if (x instanceof InternetAddress && y instanceof InternetAddress) { InternetAddress iax = (InternetAddress)x; InternetAddress iay = (InternetAddress)y; return equals(iax.getAddress(), iay.getAddress()) && equals(iax.getPersonal(), iay.getPersonal()); } else return x.equals(y); } else return false; <s> return (((oldTile == null) ? (m.oldTile == null) : oldTile.equals(m.oldTile)) && ((newTile == null) ? (m.newTile == null) : newTile.equals(m.newTile)) && <s> return (type == null || lower == null || type.isCompatible(lower)) && (type == null || upper == null || type.isCompatible(upper)); <s> return c2 == null; if(c2 == null) return false; <s> return c2 == null; if(c2 == null) return false; <s> return c2 == null; if(c2 == null) return false; <s> return ((ch >= 0x0000 && ch <= 0x0008) || (ch >= 0x000e && ch <= 0x001b) || (ch >= 0x007f && ch <= 0x009f) || ch == '$' || ch == '_' || isLetter(ch) || isDigit(ch)); <s> return (selectedNode == null || selectedNode.equals("Node 1") || selectedNodeObject == null) ; <s> return ((c == NEWLINE) || (textInfo.bWrap && (CharUtilities.isSpace(c) || BREAK_CHARS.indexOf(c) >= 0))); <s> if (a.equals(b)) { CompilationAndWeavingContext.leavingPhase(tok); return false; } <s> if (Double.isNaN(number)) return("NaN"); else if (number == Double.NEGATIVE_INFINITY) return("-Infinity"); else if (number == Double.POSITIVE_INFINITY) return("Infinity"); <s> if (Double.isNaN(number)) return("NaN"); else if (number == Double.NEGATIVE_INFINITY) return("-Infinity"); else if (number == Double.POSITIVE_INFINITY) return("Infinity"); <s> return (x == r.x) && (y == r.y) && (width == r.width) && (height == r.height); <s> return (address.compareTo( fStartAddress ) >= 0 && address.compareTo( fEndAddress ) <= 0); <s> return (address.compareTo( fStartAddress ) >= 0 && address.compareTo( fEndAddress ) <= 0); <s> Rectangle2D b = getBounds(); if (b != null) { return (b.contains(p) && paintedArea != null && paintedArea.contains(p)); } return false; <s> Rectangle2D b = getBounds(); if (b != null) { return (b.contains(p) && paintedArea != null && paintedArea.contains(p)); } return false; <s> return false; <s> return !( value == 0 || isNaN()); <s> if (name.equals(Property.FORMULA.name)) { return formula; } else if (name.equals(Property.CHILDREN_CARDINALITY.name)) { return new Integer(0); } else { return super.getPropertyValue(name); } <s> if (name.equals(Property.FORMULA.name)) { return formula; } else if (name.equals(Property.CHILDREN_CARDINALITY.name)) { return new Integer(0); } else { return super.getPropertyValue(name); } <s> if (name.equals(Property.FORMULA.name)) { return formula; } else if (name.equals(Property.CHILDREN_CARDINALITY.name)) { return new Integer(0); } else { return super.getPropertyValue(name); } <s> if(object instanceof Reference) { Reference ref = (Reference)object; if(this.internalRef == null) { return ref.internalRef == null; } else { return this.internalRef.equals(ref.internalRef); } } else { return false; } <s> return isNaN(value); <s> return ( topicFactoryName.equals(receiver.getTopicFactoryName()) && (jndiPath == null || jndiPath.equals(receiver.getJndiPath())) && super.isEquivalent(testPlugin) );
v2 += factor * Math.min((int)(comps[j]*binsCounts[j]), binsCounts[j]-1); <s> v1 += factor * Math.min((int)(comps[j]*binsCounts[j]),binsCounts[j]-1); <s> r[d - 1] = mbr.getMax(d); <s> if (((Object[])mValue)[i] == null) { mContext.getLogger().error("Null annotation value array element "+ i+" on "+getName()); out[i] = 0; } else { out[i] = Double.parseDouble(((Object[])mValue)[i].toString()); } <s> r[d - 1] = mbr.getMin(d); <s> if (((Object[])mValue)[i] == null) { mContext.getLogger().error("Null annotation value array element "+ i+" on "+getName()); out[i] = 0; } else { out[i] = Integer.parseInt(((Object[])mValue)[i].toString()); } <s> m[i] = new double[coeff[i].length + 1]; <s> if (((Object[])mValue)[i] == null) { mContext.getLogger().error("Null annotation value array element "+ i+" on "+getName()); out[i] = 0; } else { out[i] = Short.parseShort(((Object[])mValue)[i].toString()); } <s> if (((Object[])mValue)[i] == null) { mContext.getLogger().error("Null annotation value array element "+ i+" on "+getName()); out[i] = 0; } else { out[i] = Float.parseFloat(((Object[])mValue)[i].toString()); } <s> res[i - 1] = matcher.group(i); <s> res[i - 1] = matcher.group(i); <s> v[d - 1] = (dv.getValue(d) * (factor(d)) + minima[d - 1]); <s> arguments[i] = fromBinding(ptb.arguments[i]).getName(); <s> if (((Object[])mValue)[i] == null) { mContext.getLogger().error("Null annotation value array element "+ i+" on "+getName()); out[i] = 0; } else { out[i] = Long.parseLong(((Object[])mValue)[i].toString()); } <s> results[i] = getShort(data, offset + 2 + (i * 2)); <s> result[i] = index[n - i - 1]; <s> if (((Object[])mValue)[i] == null) { mContext.getLogger().error("Null annotation value array element "+ i+" on "+getName()); out[i] = 0; } else { out[i] = Byte.parseByte(((Object[])mValue)[i].toString()); } <s> result[i][j] = null != data.elementAt(i * columns + j) ? data.elementAt(i * columns + j).toString() : null ; <s> result[i][j] = null != data.elementAt(i * columns + j) ? data.elementAt(i * columns + j).toString() : null ; <s> v[i] = src[(o1 + i)]; <s> v[i] = src[(o1 + i)]; <s> outVect[wSample] = 0; for (int wVar=0; wVar<data.nVars; wVar++) outVect[wSample] += Math.abs(c[wVar]-x[wVar])/data.getRange(wVar+1); outVect[wSample] /= data.nVars; <s> result[j+i+1] = null != data.elementAt(j) ? data.elementAt(j).toString() : null ; <s> result[j+i+1] = null != data.elementAt(j) ? data.elementAt(j).toString() : null ; <s> byte returnBit = Byte.parseByte(aString.substring(j,j+1)); if (returnBit == 1){ genos[j] = Chromosome.getFilteredMarker(theBlock[j]).getMajor(); }else{ if (Chromosome.getFilteredMarker(theBlock[j]).getMinor() == 0){ genos[j] = 8; }else{ genos[j] = Chromosome.getFilteredMarker(theBlock[j]).getMinor(); } }
return optimize(x, f, tol); <s> return optimize(x, f, tol); <s> return inverse(width - 1, height - 1); <s> return inverse(width - 1, height - 1); <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return x >= 0 && y >= 0 && x < width && y < height; <s> return width > 0 && height > 0 && x >= this.x && x < this.x + width && y >= this.y && y < this.y + height; <s> return x >= 0 && y >= 0 && x < width && y < height;
int type = getType(c); return (type >= UPPERCASE_LETTER && type <= OTHER_LETTER) || type == CONNECTOR_PUNCTUATION || (type >= DECIMAL_DIGIT_NUMBER && type <= LETTER_NUMBER) || type == NON_SPACING_MARK || type == COMBINING_SPACING_MARK || isIdentifierIgnorable(c); } <s>  return getType(c) == UPPERCASE_LETTER; } <s> int value = c / 16; if (value >= mirrored.length) { return false; } int bit = 1 << (c % 16); return (mirrored[value] & bit) != 0; <s> return getType(c) == LOWERCASE_LETTER; } <s> if (c == '\u01c5' || c == '\u01c8' || c == '\u01cb' || c == '\u01f2') { return true; } if (c >= '\u1f88' && c <= '\u1ffc') { if (c > '\u1faf') { return c == '\u1fbc' || c == '\u1fcc' || c == '\u1ffc'; } int last = c & 0xf; return last >= 8 && last <= 0xf; } return false; } <s> if (c == 0x20 || c == 0xa0 || c == 0x1680) { return true; } if (c < 0x2000) { return false; } return c <= 0x200b || c == 0x2028 || c == 0x2029 || c == 0x202f || c == 0x3000; } <s> int result = BinarySearch.binarySearchRange(bidiKeys, c); int high = bidiValues[result * 2]; if (c <= high) { int code = bidiValues[result * 2 + 1]; if (code < 0x100) { return (byte) (code - 1); } return (byte) (((c & 1) == 1 ? code >> 8 : code & 0xff) - 1); } return DIRECTIONALITY_UNDEFINED; } <s> int type = getType(c); return (type >= UPPERCASE_LETTER && type <= OTHER_LETTER) || type == LETTER_NUMBER; } <s> return Py.newInteger((int)x); <s> return getElementType((EObject) o); <s> if (c == 0x1680) { return true; } if (c < 0x2000 || c == 0x2007) { return false; } return c <= 0x200b || c == 0x2028 || c == 0x2029 || c == 0x3000; } <s> return Vio.read(this); <s> return Vio.read(this); <s> return Vio.read(this); <s> return Vio.read(this); <s> return new ClobImpl(callerReference, (String) x); <s> return new ClobImpl(callerReference, (String) x); <s> return new ClobImpl(callerReference, (String) x); <s> return getElementType((EClass) o); <s> return generateUninterpreted((String) o); <s> return generateName((String) o); <s> for(Map.Entry<AvailableLoad, ValueNumber[]> e : availableLoadMap.entrySet()) { if (e.getValue() != null) for(ValueNumber v2 : e.getValue()) if (v.equals(v2)) return e.getKey(); } return null; <s> for(Map.Entry<AvailableLoad, ValueNumber[]> e : availableLoadMap.entrySet()) { if (e.getValue() != null) for(ValueNumber v2 : e.getValue()) if (v.equals(v2)) return e.getKey(); } return null; <s> if (!(Float.isInfinite(value) || Float.isNaN(value))) return new IntegerValue((long) value, requiredType); else throw new XPathException("FOCA0002: cannot convert ' xs:float(\"" + getStringValue() + "\")' to " + Type.getTypeName(requiredType)); <s> return Character.isWhitespace((char) c) && (c != strategy.getDelimiter());
lastImage = getFrame(n - 1); <s>  <s>  <s>  <s>  <s>  <s> int i = n / cols; int j = n % cols; <s> int i = n / cols; int j = n % cols; <s> int y = mTitleIcon.getIconHeight() + mDescriptionIcon.getIconHeight() + 18; y = Math.min(y, height - 1); <s> final int n = this.offset + this.count; <s> final int n = this.offset + this.count; <s>  <s>  <s>  <s>  <s>  <s>  <s>  <s>  <s> int l = j - i + 1; <s> int size = nameLength; <s> int size = nameLength; <s> int size = nameLength; <s> int size = nameLength; <s> int n = y * nWidth + x;
if (msc.compare(maximal, p) >= 0) { <s> if (hasEnd && object.compareTo(endKey) > 0) { <s> if (userListModelStr.compareTo(s) > 0) { <s> if (userListModelStr.compareTo(s) > 0) { <s> if (userListModelStr.compareTo(s) > 0) { <s> if (userListModelStr.compareTo(s) > 0) { <s> if (userListModelStr.compareTo(s) > 0) { <s> if (userListModelStr.compareTo(s) > 0) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if(i.compareTo(next) < 0 && (prev == null || i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) { <s> if((i.compareTo(next) < 0) && (i.compareTo(prev) > 0)) {
if (n2 < 0) { <s> if (index >= 0) { <s> if (index >= 0) { <s> if (index >= 0) { <s> if (index >= 0) { <s> if (n < 0) { <s> if ( floor > 0 || floor == bridgeEl) { <s> if ( floor > 0 || floor == bridgeEl) { <s> if ( inul >= 0 ) { <s> if (n > 0) { <s> if (n > 0) { <s> if (fw > 700) { <s> if (fw > 700) { <s> if (fw > 700) { <s> if (fw > 700) { <s> if ( i > toByte ) { <s> if ( sequence < 0 ) { <s> if ( sequence < 0 ) { <s> if (num > numWords) { <s>  if ( (id1 >= 0) && (m_cacheSize != -1) ) { <s>  if ( (id1 >= 0) && (m_cacheSize != -1) ) { <s>  if ( (id1 >= 0) && (m_cacheSize != -1) ) { <s>  if ( (id1 >= 0) && (m_cacheSize != -1) ) { <s> if ( maxForce < 0.0001 ) { <s> if ( maxForce < 0.0001 ) {
if (n == 0 || member.isNull()) { <s> if (n == 0 || member.isNull()) { <s> if (n == 0 || member.isNull()) { <s> if (isDelta()) { result = Long.MAX_VALUE; } else { <s> if (paths == null) { <s> if ( j == 0 ) { <s> html.append("<tr>"); if (j == 0 && result.getAxes().length > 1) { <s> html.append("<tr>"); if (j == 0 && result.getAxes().length > 1) { <s> html.append("<tr>"); if (j == 0 && result.getAxes().length > 1) { <s> if ( j == 0 ) { <s> if (firstTokenOfLocationPath) { <s> if (w == seperator1) { <s> if (w == seperator1) { <s> if (w == seperator1) { <s> if (w == seperator1) { <s> if (firstTokenOfLocationPath) { <s> if (c == divider) { if (maximize == Maximize.NONE) { if (splitVertical) { c.setBounds(firstSize + margin, margin, dividerSize, innerHeight - (margin * 2)); } else { c.setBounds(margin, firstSize + margin, innerWidth - (margin * 2), dividerSize); } c.setVisible(true); } else { c.setVisible(false); } } else if (cnt == 0) { if (maximize == Maximize.FIRST) { c.setVisible(false); } else { if (splitVertical) { c.setBounds(firstSize + dividerSize + margin, margin, secondSize, innerHeight - (margin * 2)); } else { c.setBounds(margin, firstSize + dividerSize + margin, innerWidth - (margin * 2), secondSize); } c.setVisible(true); } cnt++; } else if (cnt == 1) { <s> if (firstTokenOfLocationPath) { <s> if (firstTokenOfLocationPath) { <s> if (a == 0.0f) { <s> if (mode == Main.SERVER_MODE) { <s> if (val1.signum() == 0) { <s> if (isDelta()) { result = Integer.MIN_VALUE; } else { if (isSigned()) { result = -cardinality() / (1 << s); } else { <s> if (size == 0) <s> if (size == 0)
public final static short swapBytes(short val) { return (short)(((val & 0xff00) >> 8) + ((val & 0x00ff) << 8)); <s> return hostLiteralMkr.newImaginary(Double.valueOf(s).doubleValue()); <s> if (Double.doubleToLongBits(memoryDouble.doubleValue()) != Double.doubleToLongBits(databaseDouble.doubleValue())) { equalsError( propertyName, inMemoryValue, fromDatabaseValue); <s> return complex_hashCode(); <s> if(((IntegralThing)a).isLong() || ((IntegralThing)b).isLong()) { return new LongThing(a.longValue() | b.longValue()); } return new IntThing(a.intValue() | b.intValue()); <s> result = mExprFactory.createVerbatim("(int) (Double.doubleToLongBits(" + var + ") ^ (Double.doubleToLongBits(" + var + ") >>> 32))"); <s> return Math.pow(base, exp); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue())); <s> return RubyFloat.m_newFloat(getRuby(), Math.pow(getDoubleValue(), other.getDoubleValue()));
private static final float[] COMPUTE_WEIGHTS_1() { float[] weights = new float[SEGMENTS+1]; float t = 0; <s> private static final float[] COMPUTE_WEIGHTS_1() { float[] weights = new float[SEGMENTS+1]; float t = 0; <s> private static final float[] COMPUTE_WEIGHTS_2() { float[] weights = new float[SEGMENTS+1]; float t = 0; <s> private static final float[] COMPUTE_WEIGHTS_2() { float[] weights = new float[SEGMENTS+1]; float t = 0; <s> final Ontology so = subject.getOntology(); oo = new DefaultOps() { public Ontology getOntology() { return so; } }; <s> final Ontology so = subject.getOntology(); oo = new DefaultOps() { public Ontology getOntology() { return so; } }; <s> final Ontology so = subject.getOntology(); oo = new DefaultOps() { public Ontology getOntology() { return so; } }; <s> final Ontology so = subject.getOntology(); oo = new DefaultOps() { public Ontology getOntology() { return so; } }; <s> return Util.DOUBLE_DEFAULT_VALUE; <s> final long TWO_SECOND = 2000; <s> final long TWO_SECOND = 2000; <s> threshold = prevCostRatio * EPSILON * start.getDistance(end); <s> y0 -= EPSILON; <s> y0 -= EPSILON; <s> y0 -= EPSILON; <s> _mtu = getDefaultMTU(); <s> _mtu = getDefaultMTU(); <s> _mtu = getDefaultMTU(); <s> _mtu = getDefaultMTU(); <s> _mtu = getDefaultMTU(); <s> max = -Double.MAX_VALUE; <s>  <s>  <s>  <s> 
return Math.max(0d, sumYY - sumXY * sumXY / sumXX); <s> return sumYY; <s> return sumSqX - sumX * sumX / (double) n; <s> return sumSqY - sumY * sumY / (double) n; <s> sumSqY += y * y; sumXY += x * y; <s> return 1 - (sum / (a.abs() + b.abs())); <s> return mean + standardDeviation * val; <s> outBegIdx.value = startIdx; trailingIdx = startIdx - lookbackTotal; <s> outBegIdx.value = startIdx; trailingIdx = startIdx - lookbackTotal; <s> outBegIdx.value = startIdx; trailingIdx = startIdx - lookbackTotal; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom; <s> double denom = 1.0 - pSummaryFailure; if(denom == 0.0) denom = 0.000001; return d / denom;
catch(Exception e) { <s> catch(Exception e) { <s> catch(Exception e) { <s> catch(org.apache.xml.utils.synthetic.SynthesisException e) <s> catch(org.apache.xml.utils.synthetic.SynthesisException e) <s> catch(org.apache.xml.utils.synthetic.SynthesisException e) <s> catch(org.apache.xml.utils.synthetic.SynthesisException e) <s> catch (ParseException e) <s> catch (org.apache.xerces.util.URI.MalformedURIException e) { NodeImpl parentOrOwner = (parentNode() != null) ? parentNode() : ownerNode; String parentBaseURI = (parentOrOwner != null) ? parentOrOwner.getBaseURI() : null; if (parentBaseURI != null) { try { uri = new URI(new URI(parentBaseURI), uri).toString(); } catch (org.apache.xerces.util.URI.MalformedURIException ex){ return null; } return uri; } <s> catch (org.apache.xerces.util.URI.MalformedURIException e) { String parentBaseURI = (this.ownerNode != null) ? this.ownerNode.getBaseURI() : null; if (parentBaseURI != null){ try{ uri = new URI(new URI(parentBaseURI), uri).toString(); } catch (org.apache.xerces.util.URI.MalformedURIException ex){ return null; } return uri; } <s> catch (org.apache.xerces.util.URI.MalformedURIException e) { NodeImpl parentOrOwner = (parentNode() != null) ? parentNode() : ownerNode; String parentBaseURI = (parentOrOwner != null) ? parentOrOwner.getBaseURI() : null; if (parentBaseURI != null) { try { uri = new URI(new URI(parentBaseURI), uri).toString(); } catch (org.apache.xerces.util.URI.MalformedURIException ex){ return null; } return uri; } <s> catch (org.apache.xerces.util.URI.MalformedURIException e) { String parentBaseURI = (this.ownerNode != null) ? this.ownerNode.getBaseURI() : null; if (parentBaseURI != null){ try{ uri = new URI(new URI(parentBaseURI), uri).toString(); } catch (org.apache.xerces.util.URI.MalformedURIException ex){ return null; } return uri; } <s> catch (org.apache.xerces.util.URI.MalformedURIException e) { NodeImpl parentOrOwner = (parentNode() != null) ? parentNode() : ownerNode; String parentBaseURI = (parentOrOwner != null) ? parentOrOwner.getBaseURI() : null; if (parentBaseURI != null) { try { uri = new URI(new URI(parentBaseURI), uri).toString(); } catch (org.apache.xerces.util.URI.MalformedURIException ex){ return null; } return uri; } <s> catch (org.apache.xerces.util.URI.MalformedURIException e) { NodeImpl parentOrOwner = (parentNode() != null) ? parentNode() : ownerNode; String parentBaseURI = (parentOrOwner != null) ? parentOrOwner.getBaseURI() : null; if (parentBaseURI != null) { try { uri = new URI(new URI(parentBaseURI), uri).toString(); } catch (org.apache.xerces.util.URI.MalformedURIException ex){ return null; } return uri; } <s> catch (org.apache.xerces.util.URI.MalformedURIException e) { String parentBaseURI = (this.ownerNode != null) ? this.ownerNode.getBaseURI() : null; if (parentBaseURI != null){ try{ uri = new URI(new URI(parentBaseURI), uri).toString(); } catch (org.apache.xerces.util.URI.MalformedURIException ex){ return null; } return uri; } <s> catch (org.apache.xerces.util.URI.MalformedURIException e) { String parentBaseURI = (this.ownerNode != null) ? this.ownerNode.getBaseURI() : null; if (parentBaseURI != null){ try{ uri = new URI(new URI(parentBaseURI), uri).toString(); } catch (org.apache.xerces.util.URI.MalformedURIException ex){ return null; } return uri; } <s> catch (org.apache.xml.utils.WrappedRuntimeException wre) <s> catch (org.apache.xml.utils.WrappedRuntimeException wre) <s> catch( net.sourceforge.jtds.jdbc.TdsException e ) { <s> catch( net.sourceforge.jtds.jdbc.TdsException e ) { <s> catch( net.sourceforge.jtds.jdbc.TdsException e ) { <s>  if (nc == null) <s> catch( final junit.framework.AssertionFailedError e ) { <s> catch( final junit.framework.AssertionFailedError e ) { <s> if (t.getClass().equals(ArgoSecurityException.class)) {
} } else { <s> else <s> } } else { <s> else { <s>  <s> else { <s> break; case 8: <s> } } else { <s> } else if (graphic.isSelected()){ <s> else <s> break; case PARAM: <s> } } else { <s> } else if (markerData.getTextMarker() != null){ <s> else { <s>  m.setPersisted(true); } else { log.info("The message " + m.getMessageID() + " has been peristed before so just updating it's channel count"); <s> else <s> } } else { <s> else <s> } else if (applies) { <s> else <s> break; case PARAM: <s> } else if (newStatus != STATUS_STD_ERROR) { <s> } else if (gcColor != GC_YELLOW) { <s> int size; int index; <s> 
{ return -1; } <s> float a = get(pos_this++); float b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> long a = get(pos_this++); long b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> double a = get(pos_this++); double b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> int delta; if (orientation == SwingConstants.VERTICAL) { int row = getClosestRowForLocation(visibleRect.x, visibleRect.y + 1); row = row + direction; if (row < 0) row = 0; Rectangle newTop = getRowBounds(row); delta = newTop.y - visibleRect.y; } else delta = direction * rowHeight == 0 ? 20 : rowHeight; return delta; <s> byte a = get(pos_this++); byte b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> short a = get(pos_this++); short b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> short a = get(pos_this++); short b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> char[] chars = Character.toChars(ch); return charsWidth(chars, 0, chars.length); <s> double a = get(pos_this++); double b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> long a = get(pos_this++); long b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> if (orientation == VERTICAL) return visibleRect.height * direction; else return visibleRect.width * direction; <s> char a = get(pos_this++); char b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> if (unit == -1) { Font f = getFont(); unit = f != null ? f.getSize() : 1; } return unit; <s> int a = get(pos_this++); int b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> byte a = get(pos_this++); byte b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> float a = get(pos_this++); float b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> char a = get(pos_this++); char b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> return 2; <s> return charWidth((char) ch); <s> { return -1; } <s> return super.methodArity(methodId); <s> int a = get(pos_this++); int b = other.get(pos_other++); if (a == b) continue; if (a < b) return -1; return 1; <s> return getScrollableUnitIncrement(visibleRect, orientation, direction); <s> return 0;
externalValues.put(key,new Double(value)); <s> uniforms.add(object); <s> primitiveTypes.write(buffer); <s> primitiveTypes.write(buffer); <s> writer.annotation(typeName, 0); <s> writer.annotation(typeName, 0); <s> if (primitiveBounds == null) { return getPrimitiveBounds(rc); } else { primitiveBounds.add(ctb); } <s> if (primitiveBounds == null) { return getPrimitiveBounds(rc); } else { primitiveBounds.add(ctb); } <s> if (!type.equals(answer.getName())) { cachedClasses.put(type,NO_CLASS); System.out.println("Mismatch: answer.getName() = " + answer.getName() + ", type = " + type); throw new ClassNotFoundException(type); } cachedClasses.put(type,answer); <s>  <s>  <s> internal.setProperty(key, value); <s> internal.setProperty(key, value); <s> typeParameter.putUserData(PREVENT_RECURSION_KEY, Boolean.TRUE); <s> typeParameter.putUserData(PREVENT_RECURSION_KEY, Boolean.TRUE); <s> typeParameter.putUserData(PREVENT_RECURSION_KEY, Boolean.TRUE); <s> typeParameter.putUserData(PREVENT_RECURSION_KEY, Boolean.TRUE); <s> EquipmentType.lookupHash.put(s, this); <s> EquipmentType.lookupHash.put(s, this); <s> if (getDefault(key) != null && ((Float)getDefault(key)).floatValue() != value) internal.setProperty(key, Float.toString(value)); else internal.remove(key); <s> if (getDefault(key) != null && ((Float)getDefault(key)).floatValue() != value) internal.setProperty(key, Float.toString(value)); else internal.remove(key); <s> cacheHasNextValue = Double.valueOf(floatString); <s> message.setDoubleProperty(name, value); <s> message.setDoubleProperty(name, value); <s> message.setDoubleProperty(name, value);
fBuffer.append(text.ch, text.offset, text.length); <s> fBuffer.append(text.ch, text.offset, text.length); <s> fBuffer.append(text.ch, text.offset, text.length); <s> fBuffer.append(text.ch, text.offset, text.length); <s> fBuffer.append(text.ch, text.offset, text.length); <s> fBuffer.append(text.ch, text.offset, text.length); <s> fBuffer.append(text.ch, text.offset, text.length); <s> fBuffer.append(text.ch, text.offset, text.length); <s> message.setText(""); <s> message.setText(""); <s> try { JspWriter out = this.pageContext.getOut(); out.write(string); } catch (IOException e) { throw new JspTagException("Writer Exception: " + e.getMessage()); } <s> try { JspWriter out = this.pageContext.getOut(); out.write(string); } catch (IOException e) { throw new JspTagException("Writer Exception: " + e.getMessage()); } <s> v.addElement(String.valueOf(o)); <s> textNode.appendData (text.toString ()); <s> textNode.appendData (text.toString ()); <s> textNode.appendData (text.toString ()); <s> textNode.appendData (text.toString ()); <s> text.insert(newValue); <s> buffer.append(lang.toString()); <s> String retval = buf.toString(); <s> log(logText.toString()); <s> log(logText.toString()); <s> log(logText.toString()); <s> log(logText.toString()); <s> b.append("null");
if (arg == null) { return Collections.EMPTY_LIST; } else if (arg instanceof List) { <s> if (arg == null) { return Collections.EMPTY_LIST; } else if (arg instanceof List) { <s> if (arg == null) { return Collections.EMPTY_LIST; } else if (arg instanceof List) { <s> if (s instanceof CArrayType){ <s> if (s instanceof CArrayType){ <s> if (o instanceof FilterDescription && ((FilterDescription)o).getType()!=null) { <s> if (parent instanceof SimpleType && name.equals(((SimpleType) parent).getName())) { <s> if (child instanceof TaskCategory) { <s> if (child instanceof TaskCategory) { <s> if (parent == null && value == 0) { parent = new ValueReference(getLocation(node), getContext(), DefaultContext.CCITT); } else if (parent == null && value == 1) { parent = new ValueReference(getLocation(node), getContext(), DefaultContext.ISO); } else if (parent == null && value == 2) { parent = new ValueReference(getLocation(node), getContext(), DefaultContext.JOINT_ISO_CCITT); } else if (parent instanceof ObjectIdentifierValue) { <s> if (referenceNode instanceof BaseMethodCall && (referenceRole == null || BaseMethodCall.BASE_METHOD_DECLARATION.equals(referenceRole))) { <s> if (parent instanceof TypeDeclaration && name.equals(((TypeDeclaration) parent).getName())) { <s> if (expression instanceof MethodCallExpression && !MethodCallExpression.isSuperMethodCall((MethodCallExpression) expression)) { <s> if (binding instanceof IParameter && !(binding instanceof IProblemBinding)) { <s> if (binding instanceof IParameter && !(binding instanceof IProblemBinding)) { <s> if ((child instanceof Import) || (child instanceof Include)) { <s> if ((child instanceof Import) || (child instanceof Include)) { <s> if ((child instanceof VariableBase) || (child instanceof NamespaceAlias)) { <s> if ((child instanceof VariableBase) || (child instanceof NamespaceAlias)) { <s> if (client instanceof MClassifier) { <s> if (type == null || type instanceof MClassifier) { <s>  <s>  <s>  <s> 
return toString().equals(obj.toString()); <s>  return false; <s> return m_name.equals(classInfo.getName()); <s> boolean returnValue = shouldInclude ^ value.equals(matcherValue.toString()); return returnValue; <s> boolean result = true; if (self != obj) { ParsedIOR pior = new ParsedIOR (obj.toString ()); result = getIDString().equals (pior.getIDString ()); } return result; <s> if (o != null) { return toString().equals(o.toString()); } else { return false; } <s> return new CodeFormatter((Map)null).format(buff.toString()); <s> return labelText.equals(label); <s> return labelText.equals(label); <s> return labelText.equals(label); <s> return labelText.equals(label); <s> return compareTo(obj) == 0; <s> return toString().equalsIgnoreCase(obj.toString()); <s> return toString().equalsIgnoreCase(obj.toString()); <s> return this.getDescription(false).equals(compare.getDescription(false)); <s> return this.getHandleIdentifier().equals(compare.getHandleIdentifier()); <s> return this.getDescription(false).equals(compare.getDescription(false)); <s> return this.getHandleIdentifier().equals(compare.getHandleIdentifier()); <s> return false; <s> return false; <s> return o1.toString().toLowerCase().compareTo(o2.toString().toLowerCase()); <s> return o1.toString().toLowerCase().compareTo(o2.toString().toLowerCase()); <s> if (element.m_name == null) { return false; } String name1 = m_name; String name2 = element.m_name; if (name1.endsWith("[0]")) { name1 = m_name.substring(0, name1.length()-3); } if (name2.endsWith("[0]")) { name2 = m_name.substring(0, name2.length()-3); } return name1.equals(name2); <s> if (element.m_name == null) { return false; } String name1 = m_name; String name2 = element.m_name; if (name1.endsWith("[0]")) { name1 = m_name.substring(0, name1.length()-3); } if (name2.endsWith("[0]")) { name2 = m_name.substring(0, name2.length()-3); } return name1.equals(name2); <s> return m_name.equals(t.m_name);
YearMonthDay newYearMonthDay = new YearMonthDay(this, newChronology); newChronology.validate(newYearMonthDay, getValues()); return newYearMonthDay; <s> YearMonthDay newYearMonthDay = new YearMonthDay(this, newChronology); newChronology.validate(newYearMonthDay, getValues()); return newYearMonthDay; <s> TimeOfDay newTimeOfDay = new TimeOfDay(this, newChronology); newChronology.validate(newTimeOfDay, getValues()); return newTimeOfDay; <s> TimeOfDay newTimeOfDay = new TimeOfDay(this, newChronology); newChronology.validate(newTimeOfDay, getValues()); return newTimeOfDay; <s> int[] getPartialValues(ReadablePartial fieldSource, Object object, Chronology chrono); <s> return new DummyCharm("Instant", charmType, new ComboRestrictions(), null); <s> return new DummyCharm("Instant", charmType, new ComboRestrictions(), null); <s> month = new Month(calendar, date, firstDay, timeZone); <s> month = new Month(calendar, date, firstDay, timeZone); <s> long endMillis = chrono.add(period, startMillis, 1); return new Interval(startMillis, endMillis, chrono); <s> long endMillis = chrono.add(period, startMillis, 1); return new Interval(startMillis, endMillis, chrono); <s>  <s> ParseData parseData = new ParseData(status, title, newlinks, metadata); parseData.setConf(this.nutchConf); parse = new ParseImpl(text, parseData); <s> ParseData parseData = new ParseData(status, title, newlinks, metadata); parseData.setConf(this.nutchConf); parse = new ParseImpl(text, parseData); <s> ParseData parseData = new ParseData(status, title, newlinks, metadata); parseData.setConf(this.nutchConf); parse = new ParseImpl(text, parseData); <s> ParseData parseData = new ParseData(status, title, newlinks, metadata); parseData.setConf(this.nutchConf); parse = new ParseImpl(text, parseData); <s> calendars = new Calendars(this, access, currentMode, debug); <s> return other.plus(this); <s> TimeTable timeTable = new TimeTable(numberOfHours, numberOfDays, calendar, slotSizeMinutes,locale, pageContext); <s> if (ctClass == null) { tpe = Type.compoundTypeWithOwner(ctOwner, parents, new Scope()); entries[ctClassRef] = tpe.symbol(); } else { tpe = Type.compoundType(parents, new Scope(), ctClass); } <s> if (ctClass == null) { tpe = Type.compoundTypeWithOwner(ctOwner, parents, new Scope()); entries[ctClassRef] = tpe.symbol(); } else { tpe = Type.compoundType(parents, new Scope(), ctClass); } <s> if (ctClass == null) { tpe = Type.compoundTypeWithOwner(ctOwner, parents, new Scope()); entries[ctClassRef] = tpe.symbol(); } else { tpe = Type.compoundType(parents, new Scope(), ctClass); } <s> if (ctClass == null) { tpe = Type.compoundTypeWithOwner(ctOwner, parents, new Scope()); entries[ctClassRef] = tpe.symbol(); } else { tpe = Type.compoundType(parents, new Scope(), ctClass); } <s> if (ctClass == null) { tpe = Type.compoundTypeWithOwner(ctOwner, parents, new Scope()); entries[ctClassRef] = tpe.symbol(); } else { tpe = Type.compoundType(parents, new Scope(), ctClass); } <s> if (ctClass == null) { tpe = Type.compoundTypeWithOwner(ctOwner, parents, new Scope()); entries[ctClassRef] = tpe.symbol(); } else { tpe = Type.compoundType(parents, new Scope(), ctClass); }
acct, rcpts, onBehalfOf, authAcct, defaultInv, cancelInvite, text, iCal); <s> acct, rcpts, onBehalfOf, authAcct, inv, null, text, iCal); <s> acct, appt, oldInv, null, replySubject, verb, null, iCal); <s> calItem, inv, text, iCal); <s> return getTimeStamp(year, month, day, hour, minute, second, TimeZone.getTimeZone("UTC")); <s> return getTimeStamp(year, month, day, hour, minute, second, TimeZone.getTimeZone("UTC")); <s> return getTimeStamp(year, month, day, hour, minute, second, TimeZone.getTimeZone("UTC")); <s> return getTimeStamp(year, month, day, hour, minute, second, TimeZone.getTimeZone("UTC")); <s> packageClass.getClassLoader(), absolutePath, style, locale, null); <s> getClass().getClassLoader(), absolutePath, style, locale, null); <s> acct, appt, oldInv, replySubject, verb, true, null, iCal); <s> LOAD, local, Op.COLOR, type, flagValue, tcon); <s> LOAD, local, Op.READ, type, flagValue, tcon); <s> TimeZone.getTimeZone(timezone), country,copyright,webpage, mGroup, null, categories); <s> localStoreCount, localLoadCount, localIncrementCount, cfg); <s> localStoreCount, localLoadCount, localIncrementCount, cfg); <s> timeStamp+duration, qty, geoLoc, org, type, item); <s> getUserId(), parentOrganizationId, name, regionId, countryId, statusId, location); <s> getUserId(), parentOrganizationId, name, regionId, countryId, statusId, location); <s> Font defaultFont, Color defaultColor, int x, int y) <s> channel, section, year, id, title); <s> channel, section, year, id, title); <s> LOAD, local, Op.MOVE, type, flagValue, tcon); <s> cos, currentProject, buildInfo, collector); <s> cos, currentProject, buildInfo, collector);
} else if (start > 0 && charAt(start-1) != NO_STYLE_MARK) { <s> } else if (key > a[index]) { <s> } else if (MCOffset.sGT(offset)) { <s> } else if (MCOffset.sGT(offset)) { <s> } else if (MCOffset.sGT(offset)) { <s> } else if (!this.statementRecoveryActivated && extendedDimensions > 0) { <s> } else if (minutes != 1) { <s> } else if (minutes != 1) { <s> } else if (minutes != 1) { <s> } else if (minutes != 1) { <s> } else if (p1 <= 0) { <s> } else if (p1 <= 0) { <s> } else if (cmp < 0 || (cmp > 0 && candidate.getNodeId().getTreeLevel() >= reference.getNodeId().getTreeLevel())) { <s> } else if (cmp < 0 || (cmp > 0 && candidate.getNodeId().getTreeLevel() >= reference.getNodeId().getTreeLevel())) { <s> else <s> } else if (offset.sLT(mcOffset)) { <s> } else if (offset.sLT(mcOffset)) { <s> } else if (offset.sLT(mcOffset)) { <s> } else if (tokenBegin < 0) <s> } else if (processing == STATE_GROUND) { <s> } else if (dAdjust > 0) { <s> } else if (len > currentLength) { <s> } else if (len > currentLength) { <s> } else if (len > currentLength) { <s> } else if (len > currentLength) {
