if (arg.getQName().equals(name) && arg.isVisible()) <s> if (arg.getQName().equals(name) && arg.isVisible()) <s> if (decl.isSimple()) <s> if (decl.isSimple()) <s> if (decl.isSimple()) <s> if (decl.isSimple()) <s> if (decl.isSimple()) <s> if (arg.getQName().equals(qname) && arg.isFromWithParam()) <s> if (arg.getQName().equals(qname) && arg.isFromWithParam()) <s> if (evalTitle == null && (this.titleKey != null || this.property != null)) <s> if (evalTitle == null && (this.titleKey != null || this.property != null)) <s> if (args.length == 0 || !ExpressionUtils.isNullLiteral(args[0])) { <s> if (args.length == 0 || !ExpressionUtils.isNullLiteral(args[0])) { <s> if (args.length == 0 || !ExpressionUtils.isNullLiteral(args[0])) { <s> if (args.length == 0 || !ExpressionUtils.isNullLiteral(args[0])) { <s> if (hasSpacesInField(field) || hasSpecialCharInField(field) || hasDotInField(field)) <s> if (hasSpacesInField(field) || hasSpecialCharInField(field) || hasDotInField(field)) <s> if (ns == null || (ns.length() == 0 && prefix.length() != 0) || prefixMap.containsKey(prefix)) <s> if (ns == null || (ns.length() == 0 && prefix.length() != 0) || prefixMap.containsKey(prefix)) <s> if (member.equals("class")) <s> if (member.equals("class")) <s> if (target == null) { return; } if (includeObject(target)) <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) { <s> if (inFunction && vars.getVariable(name) != null && !inWithStatement()) {
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
endScreenLine = i; <s> endScreenLine = i; <s> endScreenLine = i; <s> endLine = i; <s> endLine = i; <s> endLine = i; <s> scopeStart = scanEnd; <s> lastOffset = i1; <s> lastOffset = i1; <s> lastOffset = i+1; <s> lastOffset = i1; <s> lastOffset = i1; <s> lastKeyword = i1; <s> lastKeyword = i1; <s> lastKeyword = i1; <s> if(returnValue == -1 && i != 0 && buffer.isFoldStart(i - 1)) { returnValue = i - 1; } <s> if(returnValue == -1 && i != 0 && buffer.isFoldStart(i - 1)) { returnValue = i - 1; } <s> if(returnValue == -1 && i != 0 && buffer.isFoldStart(i - 1)) { returnValue = i - 1; } <s> firstToken.index = 1; <s> for (int i = 1; i < args.size(); i++) { o = args.elementAt (i); argArray[i] = o; } <s> for (int i = 1; i < args.size(); i++) { o = args.elementAt (i); argArray[i] = o; } <s>  for (int i = 0; i < args.size(); i++) { Object o = args.elementAt (i); argArray[i+1] = o; } <s>  for (int i = 0; i < args.size(); i++) { Object o = args.elementAt (i); argArray[i+1] = o; } <s>  <s> lastindex = index + 2;
break inner; <s>  break; <s> break outer; <s>  <s>  <s> return 0; <s> return; <s>  <s> i = breakPoint + 1; <s> path = "/"; <s> continue; <s>  break; <s>  <s>  <s> case IA32_LEA_opcode: { int size = 2; size += operandCost(MIR_Lea.getResult(inst), false); size += operandCost(MIR_Lea.getValue(inst), false); return size; } <s>  <s> break findJSRSiteMap; } <s>  break; <s>  <s>  break; <s> { positionMarks[startIndex] = end; <s> break; case JAVAAGENT_ARG: /* Extract jar file from the -javaagent:<jar>[=options] form */ int equalsPos = arg.indexOf("="); String jarPath; if (equalsPos != -1) { jarPath = arg.substring(0, equalsPos); } else { jarPath = arg; } String newClassPath = VM_ClassLoader.getApplicationRepositories() + File.pathSeparator + jarPath; VM_ClassLoader.setApplicationRepositories(newClassPath); break; <s>  <s> break findJSRSiteMap; } <s>  break;
return dim; <s> return new NoPrinterJob(); <s> short[] data; switch (component) { case REDCOMPONENT: data = getCurve(icSigRedTRCTag); break; case GREENCOMPONENT: data = getCurve(icSigGreenTRCTag); break; case BLUECOMPONENT: data = getCurve(icSigBlueTRCTag); break; default: throw new IllegalArgumentException("Not a valid component"); } if (data == null) throw new IllegalArgumentException("Error reading TRC"); if (data.length <= 1) throw new ProfileDataException("Gamma value, not a TRC table."); return data; <s> return this; <s> if (accessibleContext == null) accessibleContext = new AccessibleJPanel(); return accessibleContext; <s> short[] data = getCurve(icSigGrayTRCTag); if (data == null) throw new IllegalArgumentException("Couldn't read Gray TRC data."); if (data.length <= 1) throw new ProfileDataException("Gamma value, not a TRC table."); return data; <s> return Registry.RAW_ENCODING_SHORT_NAME; <s> return AccessibleRole.PAGE_TAB_LIST; <s> String[][] info = { {"host","text","Hostname or IP Address of Host"}, {"-p","int","IP Port to connect to"}, {"width","int","Width of Applet"}, {"height","int","Height of Applet"}, {"-dn","text","Screen Device Name"}, {"-sslType","text","Type of SSL connection (NONE | SSLv2 | TLS)"} }; return info; <s> float[][] mat = new float[3][3]; for (int i = 0; i < 3; i++) for (int j = 0; j < 3; j++) mat[i][j] = matrix[i][j]; return mat; <s> AccessibleContext parentCtx = JTabbedPane.this.getAccessibleContext(); AccessibleStateSet state = parentCtx.getAccessibleStateSet(); state.add(AccessibleState.SELECTABLE); if (component == getSelectedComponent()) state.add(AccessibleState.SELECTED); return state; <s> return bidiRoot; <s> return getAccessibleChild(r * getAccessibleColumnCount() + c); <s> float[] wp = new float[3]; wp[0] = whitePoint[0]; wp[1] = whitePoint[1]; wp[2] = whitePoint[2]; return wp; <s> return caption; <s> return new AccessibleJList(); <s> return getFontManager().createFont(format, stream); <s> float[] wp = new float[3]; wp[0] = whitePoint[0]; wp[1] = whitePoint[1]; wp[2] = whitePoint[2]; return wp; <s> Accessible descr = null; if (columnDescriptions != null) descr = columnDescriptions[c]; return descr; <s> return KeyPairCodecFactory.getEncodingShortName(defaultFormat); <s> if (accessibleContext == null) accessibleContext = new AccessibleJApplet(); return accessibleContext; <s> JTableHeader h = getTableHeader(); AccessibleTable header = null; if (h != null) header = new AccessibleTableHeader(h); return header; <s> int tabIndex = indexAtLocation(p.x, p.y); if (tabIndex >= 0) return getAccessibleChild(tabIndex); else return getAccessibleSelection(0); <s> return dim; <s> Accessible child = null; switch (i) { case 0: if (popup instanceof Accessible) { AccessibleContext ctx = ((Accessible) popup).getAccessibleContext(); ctx.setAccessibleParent(comboBox); child = (Accessible) popup; } break; case 1: if (comboBox.isEditable() && editor instanceof Accessible) { AccessibleContext ctx = ((Accessible) editor).getAccessibleContext(); ctx.setAccessibleParent(comboBox); child = (Accessible) editor; } break; } return child;
pos = append(pos, TAB, inputLength); <s> pos = append(pos, LF, inputLength); <s> pos = append(pos, CR, inputLength); <s> c = symbols.getMinusSign(); <s> c = symbols.getPerMill(); <s> pos = append(pos, LESS, inputLength); <s> pos = append(pos, NOTHING, inputLength); <s> int lineStartOffset = getLineStartOffset(offset, whiteSpace, text, documentModel); <s> int lineStartOffset = getLineStartOffset(offset, whiteSpace, text, documentModel); <s> int lineStartOffset = getLineStartOffset(offset, whiteSpace, text, documentModel); <s> int lineStartOffset = getLineStartOffset(offset, whiteSpace, text, documentModel); <s> indent = getIndentOfLine(doc, refLine); <s> indent = getIndentOfLine(doc, refLine); <s> int x= posIn(text, start, end); <s> pos = append(pos, AMP, inputLength); <s> newCaret = TextUtilities.findWordStart(lineText,newCaret - 1,noWordSep, wordCommandsEatWhiteSpace) <s> newCaret = TextUtilities.findWordStart(lineText,newCaret - 1,noWordSep, wordCommandsEatWhiteSpace) <s> newCaret = TextUtilities.findWordStart(lineText,newCaret - 1,noWordSep, wordCommandsEatWhiteSpace) <s> newCaret = TextUtilities.findWordEnd(lineText,newCaret + 1,noWordSep, wordCommandsEatWhiteSpace) <s> newCaret = TextUtilities.findWordEnd(lineText,newCaret + 1,noWordSep, wordCommandsEatWhiteSpace) <s> newCaret = TextUtilities.findWordEnd(lineText,newCaret + 1,noWordSep, wordCommandsEatWhiteSpace) <s> pos = append(pos, QUOTE, inputLength); <s> indent = getCurrentIndentForLine(prevPrevLineIndex,null); <s> indent = getCurrentIndentForLine(prevPrevLineIndex,null); <s> indent = getCurrentIndentForLine(prevPrevLineIndex,null);
final String unfolded = raw.replaceAll("\r|\n", ""); <s> dir = dir.replaceAll(BACKSLASH_MULTI, FORWARDSLASH); <s> dir = dir.replaceAll(BACKSLASH_MULTI, FORWARDSLASH); <s> dir = dir.replaceAll(BACKSLASH_MULTI, FORWARDSLASH); <s> dir = dir.replaceAll(BACKSLASH_MULTI, FORWARDSLASH); <s>  <s>  <s>  <s>  <s> string = string.replaceAll("\\$SQL_SERVERS", "any"); string = string.replaceAll("\\$TELNET_SERVERS", "any"); string = string.replaceAll("\\$ORACLE_PORTS", "any"); string = string.replaceAll("\\$AIM_SERVERS", "any"); <s>  <s> className = className.replace('/', '.'); <s> className = Strings.replaceSubString(className, "*", "[a-zA-Z0-9_$]+"); <s>  path = path.replaceAll("file: path = path.replaceAll("file:", ""); <s>  <s> result = CommonUtils.replaceText(result, "\\.","__"); <s> result = CommonUtils.replaceText(result, "\\.","__"); <s> term = term.replaceAll(">", "&gt;"); <s> expression = expression.replaceAll("\"", "&quot;"); <s> val = val.replaceAll("\"","").trim(); <s> val = val.replaceAll("\"","").trim(); <s> lines = xmlInput.split("\\n"); <s>  <s>  <s> phrase = phrase.replaceAll("&gt;", ">");
307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 307, 308, 309, -1, 311, 312, 313, 314, -1, 316, <s> 98, 99, 100, 22, 23, 24, 25, 0, 0, 0, <s> 98, 99, 100, 22, 23, 24, 25, 0, 0, 0, <s> 98, 99, 100, 22, 23, 24, 25, 0, 0, 0, <s> 98, 99, 100, 22, 23, 24, 25, 0, 0, 0, <s> 98, 99, 100, 22, 23, 24, 25, 0, 0, 0,
return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new InputStreamReader(System.in, encoding); <s> return new String(bytes, encoding); <s> return new UTF_16Encoder (this, UTF_16Encoder.BIG_ENDIAN, false); <s> return new UTF_16Encoder (this, UTF_16Encoder.BIG_ENDIAN, false); <s> return new UTF_16Encoder (this, UTF_16Encoder.BIG_ENDIAN, false); <s> return new UTF_16Encoder (this, UTF_16Encoder.BIG_ENDIAN, false);
return string.endsWith(substr); <s> int textLen = Math.min(maxCharacterLength, ptext.length()); <s> int textLen = Math.min(maxCharacterLength, ptext.length()); <s> int textLen = Math.min(maxCharacterLength, ptext.length()); <s> int textLen = Math.min(maxCharacterLength, ptext.length()); <s> return new ArrayList(l.subList(0, Math.min(limit, l.size()))); <s> return new ArrayList(l.subList(0, Math.min(limit, l.size()))); <s>  <s> List al = new ArrayList(2); al.add(this); al.add(l); <s> List al = new ArrayList(2); al.add(this); al.add(l); <s>  NumberFormat nf = NumberFormat.getInstance(); nf.setParseIntegerOnly(true); int labelLength = Integer.toString(labels.length).length(); nf.setMaximumIntegerDigits(labelLength); nf.setMinimumIntegerDigits(labelLength); int cell = Math.max(Integer.toString(max).length(),labelLength+classPrefix.length()); <s>  <s> params[0] = new StringValue(str.substring(offset.getOffset(), offset.getOffset() + offset.getLength())); Sequence callbackResult = callback.evalFunction(null, null, params); for (SequenceIterator iter = callbackResult.iterate(); iter.hasNext(); ) { Item next = iter.nextItem(); if (Type.subTypeOf(next.getType(), Type.NODE)) { nodeNr = builder.getDocument().getLastNode(); try { next.copyTo(context.getBroker(), receiver); result.add(builder.getDocument().getNode(++nodeNr)); lastNodeNr = nodeNr; } catch (SAXException e) { throw new XPathException(getASTNode(), "Internal error while copying nodes: " + e.getMessage(), e); } } } <s> params[0] = new StringValue(str.substring(offset.getOffset(), offset.getOffset() + offset.getLength())); Sequence callbackResult = callback.evalFunction(null, null, params); for (SequenceIterator iter = callbackResult.iterate(); iter.hasNext(); ) { Item next = iter.nextItem(); if (Type.subTypeOf(next.getType(), Type.NODE)) { nodeNr = builder.getDocument().getLastNode(); try { next.copyTo(context.getBroker(), receiver); result.add(builder.getDocument().getNode(++nodeNr)); lastNodeNr = nodeNr; } catch (SAXException e) { throw new XPathException(getASTNode(), "Internal error while copying nodes: " + e.getMessage(), e); } } } <s> ftf.setColumns(Math.max(maxString.length(), minString <s> textArea.setSelectedText(doFormat(text,maxLineLength)); <s> value = s2.substring(matchResult.end(), s2.length()); <s> Collections.sort(componentLocations, Location.naturalOrder); <s> Collections.sort(componentLocations, Location.naturalOrder); <s> int arrayX /*= Math.max(0,convertX(i)); arrayX*/ = Math.min(width-1,Math.max(0,convertX(i))/*convertX(i)*/); <s> int newStart, newEnd; boolean newBias; <s> int arrayY /*= Math.max(0,convertY(k)); arrayY*/ = Math.min(height-1,Math.max(0,convertY(k))/*convertY(k)*/); <s> int result = read(tmp, 0, (int)Math.min(tmp.length, n)); <s> name.endsWith("/")) { int nextIndexOfSlash = name.indexOf("/", prefix.length()); result.add(name.substring(0, nextIndexOfSlash).replace("/", ".")); <s> nextPaths.addAll(expandPath(model, path.substring(refEnd + 1).trim()));
if (sourceLine > 0) { <s> if (sourceLine > 0) { <s> if (matchedLength != -1) { <s> if (matchedLength != -1) { <s> /*if (lineNr < 0) { <s> /*if (lineNr < 0) { <s> if (file == null || line < 0) { <s> if (readlength >= 0) { <s> if (readlength >= 0) { <s> if (this.linePtr >= 0) { <s> if ( runLength > 0 ) { <s> if ( runLength > 0 ) { <s> if (index >= 0) { <s> if (-1 != index) { <s> if (index != -1) { <s> if (fTokenLength > 0) { fLast= NONE; <s> else if (sep > 0) { <s> if (fill > 1) { <s> if(hasMoreItems()) { <s> if (left > -1) { <s> if (left > -1) { <s> if (bytesRead > 0) { <s> if (dataIndex >= 0) { <s> if (dataIndex >= 0) { <s> if (n > 0)
} else if (indices != null && indices.containsKey(part)) { <s> } else if (function.equals("tab")) { int cursx=0; if (using_machine!=null) { cursx=using_machine.machinescreen.cursX; } stktype[upto-2]=ST_STRING; String building=""; int moveto=(int)stknum[upto-1]-cursx; if (moveto<0) moveto=0; for (int i=0; i<moveto; ++i) { building+="(rght)"; } stkstring[upto-2]=building; return; } else if (function.equals("spc")) { <s> } else if (mbname.equals("%") || mbname.equals("INBOX") || mbname.equals("*") || mbname.equals("INBOX*")) { <s> } else if (eName.equals("body")) { <s> } else if (critName.startsWith("(IS)")) { <s> } else if (critName.startsWith("(IS)")) { <s> } else if ((valLen > idLen) && (" " + id).equals(value.substring(valLen - idLen - 1))) { <s> } else if ((valLen > idLen) && (" " + id).equals(value.substring(valLen - idLen - 1))) { <s> } else if (type==Type.char_TYPE) { <s> } else if (commaCount == 2 && !nextToken.equals(",")) { <s> } else if (key.equals(BugReport.KEY_MILESTONE)) { <s> } else if (key.equals(BugReport.KEY_MILESTONE)) { <s> } else if (checkString.indexOf("mckoi") != -1) { <s> } else if (type==Type.int_TYPE) { <s> } else if (className.equals("char")) { <s> } else if (postfix.equals("I")) { <s> } if (word.equalsIgnoreCase(term)) { <s>  <s> } else if (v.equalsIgnoreCase("1") || v.equalsIgnoreCase("true")) { <s> } else if (v.equalsIgnoreCase("1") || v.equalsIgnoreCase("true")) { <s> } else if (v.equalsIgnoreCase("1") || v.equalsIgnoreCase("true")) { <s> } else if (key.equals(AdminService.BY_NAME)) { <s> } else if (key.equals(AdminService.BY_ID)) { <s> } else if (key.equals(BugReport.ATTRIBUTE_COMPONENT)) { <s> } else if (key.equals(BugReport.ATTRIBUTE_COMPONENT)) {
this(false, DEFAULT_PROVIDER_FILE_PATH); <s> this(!ProgressViewUpdater.getSingleton().debug); <s> this(!ProgressViewUpdater.getSingleton().debug); <s> this(false, DEFAULT_PROVIDER_FILE_PATH); <s>  <s> this(!ProgressViewUpdater.getSingleton().debug); <s> this(false,false); <s> super(true); <s>  <s> super.setVisible(false); <s> this.parent = parent; this.report = report; if (parent == null) { expressionIds = new HashMap(); datasetCollectors = new HashMap(); crosstabCollectors = new HashMap(); } collectedStyles = new HashSet(); <s> this.parent = parent; this.report = report; if (parent == null) { expressionIds = new HashMap(); datasetCollectors = new HashMap(); crosstabCollectors = new HashMap(); } collectedStyles = new HashSet(); <s> this(false); <s> boxes = new ArrayList(); <s> init(); <s> super(); <s> this(false); <s> this(EventListenerImpl.ACTION_VALIDATOR); <s> includeByDefault = true; ArrayList includeList = new ArrayList( ); ArrayList excludeList = new ArrayList( ); ArrayList preserveList = new ArrayList( ); <s> this(false); <s> boxes = new ArrayList(); <s> boxes = new ArrayList(); <s> boxes = new ArrayList(); <s> firePropertyChange(PROP_DIRTY); handleElementContentReplaced(); <s> internalClose();
int lengthDataBits = binaryData.length * EIGHTBIT; int fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP; int numberTriplets = lengthDataBits / TWENTYFOURBITGROUP; byte encodedData[] = null; int encodedDataLength = 0; if (fewerThan24bits != 0) { encodedDataLength = (numberTriplets + 1) * 4; } else { encodedDataLength = numberTriplets * 4; } if (fewerThan24bits == EIGHTBIT) { encodedDataLength -= 2; } else if (fewerThan24bits == SIXTEENBIT) { encodedDataLength -= 1; } encodedData = new byte[encodedDataLength]; byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0; int encodedIndex = 0; int dataIndex = 0; int i = 0; for (i = 0; i < numberTriplets; i++) { dataIndex = i * 3; b1 = binaryData[dataIndex]; b2 = binaryData[dataIndex + 1]; b3 = binaryData[dataIndex + 2]; l = (byte) (b2 & 0x0f); k = (byte) (b1 & 0x03); byte val1 = ((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0); byte val2 = ((b2 & SIGN) == 0) ? (byte) (b2 >> 4) : (byte) ((b2) >> 4 ^ 0xf0); byte val3 = ((b3 & SIGN) == 0) ? (byte) (b3 >> 6) : (byte) ((b3) >> 6 ^ 0xfc); encodedData[encodedIndex] = lookUpBase64Alphabet[val1]; encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 | (k << 4)]; encodedData[encodedIndex + 2] = lookUpBase64Alphabet[(l << 2) | val3]; encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f]; encodedIndex += 4; } dataIndex = i * 3; if (fewerThan24bits == EIGHTBIT) { b1 = binaryData[dataIndex]; k = (byte) (b1 & 0x03); byte val1 = ((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0); encodedData[encodedIndex] = lookUpBase64Alphabet[val1]; encodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4]; } else if (fewerThan24bits == SIXTEENBIT) { b1 = binaryData[dataIndex]; b2 = binaryData[dataIndex + 1]; l = (byte) (b2 & 0x0f); k = (byte) (b1 & 0x03); byte val1 = ((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0); byte val2 = ((b2 & SIGN) == 0) ? (byte) (b2 >> 4) : (byte) ((b2) >> 4 ^ 0xf0); encodedData[encodedIndex] = lookUpBase64Alphabet[val1]; encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 | (k << 4)]; encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2]; } return encodedData; <s> value = new String(Base64.base64ToByteArray(new StringBuffer(cdata.toString().trim()), null)); <s> value = new String(Base64.base64ToByteArray(new StringBuffer(cdata.toString().trim()), null)); <s> if(hash != null) { return String.valueOf(B64Code.encode(hash)); } else return null; <s> String data = new String(StringUtils.decodeBase64(response), CHARSET); <s> String data = new String(StringUtils.decodeBase64(response), CHARSET); <s> String data = new String(StringUtils.decodeBase64(response), CHARSET); <s> return encode(PDFText.escapeText(text, false)); <s>  if (m_escapeStrings == null) { String encoding = A_OpenCms.getDefaultEncoding(); m_escapeStrings = new Boolean ( "ISO-8859-1".equalsIgnoreCase(encoding) || "ISO-8859-15".equalsIgnoreCase(encoding) || "US-ASCII".equalsIgnoreCase(encoding) || "Cp1252".equalsIgnoreCase(encoding) ); } if (m_escapeStrings.booleanValue()) return value; return Encoder.encode(value); <s>  if (m_escapeStrings == null) { String encoding = A_OpenCms.getDefaultEncoding(); m_escapeStrings = new Boolean ( "ISO-8859-1".equalsIgnoreCase(encoding) || "ISO-8859-15".equalsIgnoreCase(encoding) || "US-ASCII".equalsIgnoreCase(encoding) || "Cp1252".equalsIgnoreCase(encoding) ); } if (m_escapeStrings.booleanValue()) return value; return Encoder.encode(value); <s> return obj == null ? null : new String(Base64.encodeBase64((byte[])obj)); <s> return obj == null ? null : new String(Base64.encodeBase64((byte[])obj)); <s> return Utilities.encodeForURL(Utilities.decodeFromURL(fileName)); <s> return fileName; <s> return encoder.encodeBuffer(str.getBytes()).trim(); <s> return encoder.encodeBuffer(str.getBytes()).trim(); <s> value = new String(SVNBase64.base64ToByteArray(new StringBuffer(cdata.toString().trim()), null), "UTF-8"); <s> value = new String(SVNBase64.base64ToByteArray(new StringBuffer(cdata.toString().trim()), null), "UTF-8"); <s> try { return Base64.encodeBytes(getTestData().toString().getBytes()); } catch (Exception ex) { return null; } <s> try { return Base64.encodeBytes(getTestData().toString().getBytes()); } catch (Exception ex) { return null; } <s> try { return Base64.encodeBytes(getTestData().toString().getBytes()); } catch (Exception ex) { return null; } <s> try { return Base64.encodeBytes(getTestData().toString().getBytes()); } catch (Exception ex) { return null; } <s> return SimpleTypeEncodingUtils.deserializeStringArray(elt.getPullParser(false)); <s> value = new String(SVNBase64.base64ToByteArray(new StringBuffer(cdata.toString().trim()), null)); <s> value = new String(SVNBase64.base64ToByteArray(new StringBuffer(cdata.toString().trim()), null));
content = Encoder.unescape(content, Encoder.C_URI_ENCODING); if (! Encoder.C_URI_ENCODING.equalsIgnoreCase(cms.getRequestContext().getEncoding())) { content = Encoder.escapeNonAscii(content); } <s> content = Encoder.unescape(content, Encoder.C_URI_ENCODING); if (! Encoder.C_URI_ENCODING.equalsIgnoreCase(cms.getRequestContext().getEncoding())) { content = Encoder.escapeNonAscii(content); } <s> byte[] bytes = new byte[DATA_SIZE * (query.getBytes().length / ADDRESS_SIZE)]; System.arraycopy(responseData, i, bytes, 0, bytes.length); <s> byte[] bytes = new byte[DATA_SIZE * (query.getBytes().length / ADDRESS_SIZE)]; System.arraycopy(responseData, i, bytes, 0, bytes.length); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.DATA_LENGTH, false); <s> byteBuffer.get(sizeBuffer, 0, FIELD_TAG_SIZE_LENGTH); <s> byteBuffer.get(sizeBuffer, 0, FIELD_TAG_SIZE_LENGTH); <s> byteBuffer.get(sizeBuffer, 0, FIELD_TAG_SIZE_LENGTH); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.MAX_COMPRESSED_DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.MAX_COMPRESSED_DATA_LENGTH, false); <s> Compressed comp = Key.compress(sourceData, dontCompress, alreadyCompressedCodec, sourceLength, MAX_LENGTH_BEFORE_COMPRESSION, CHKBlock.MAX_COMPRESSED_DATA_LENGTH, false);
protected Object readResolve() { super.readResolve(); <s> protected Object readResolve() { <s> protected Object readResolve() { <s> protected Object readResolve() { <s> protected Object readResolve() { <s> Object writeReplace() { <s> Object createDependency() { <s> public Object[] getValues() { <s> public Object[] getValues() { <s> public Object[] getValues() { <s> public Object[] getValues() { <s> private Object updateListModel(final Object wrappedCollection) { <s> protected final Object getTarget() { <s> private Map readConfiguration() { <s> private Object readResolve() throws ObjectStreamException { <s> private Object readResolve() throws ObjectStreamException { <s> Object createAssociation() { <s> protected Object clone() throws CloneNotSupportedException { <s> protected Object clone() throws CloneNotSupportedException { <s> protected Object clone() throws CloneNotSupportedException { <s> protected Object clone() throws CloneNotSupportedException { <s> protected Object clone() throws CloneNotSupportedException { <s> protected Object clone() throws CloneNotSupportedException { <s> protected Object clone() throws CloneNotSupportedException { <s> protected Object clone() throws CloneNotSupportedException {
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
 for (int i = 0; i < (dataToWrite.length / 16); i++) { byte[] nextBlock = Util.getBytes(dataToWrite, i * 16, 16); file.writeEncryptedBytes(nextBlock); } <s>  for (int i = 0; i < (dataToWrite.length / 16); i++) { byte[] nextBlock = Util.getBytes(dataToWrite, i * 16, 16); file.writeEncryptedBytes(nextBlock); } <s>  for (int i = 0; i < (dataToWrite.length / 16); i++) { byte[] nextBlock = Util.getBytes(dataToWrite, i * 16, 16); file.writeEncryptedBytes(nextBlock); } <s> if (rfMessage.length != NonceByteLength) { <s> if (rfMessage.length != NonceByteLength) { <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k) <s> if (dataBlockStatus.length != k)
currentBuffer.put((byte) (longValue >>> (i * 8))); <s> result |= (((int)(bytes[i])) & 0x000000FF) << (i << 3); <s> key.append((char)(m_key_[i] << 8)); <s> retval |= ((res[res.length - lpc - 1] & 0xFF) << (8 * lpc)); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> int displacement = getShort(iCode, pc); <s> key.append((char)((m_key_[i] << 8) | m_key_[i + 1])); <s> int out = (int) (in * ((1<<getComponentSize(i)) - 1)); <s> int out = (int) (in * ((1<<getComponentSize(i)) - 1)); <s> b0 += (c[i+1] & 0x30) >> 4; <s> b0 += (c[i+1] & 0x30) >> 4; <s> b.append(Integer.toHexString(key[i] & 0xFF)); <s> b.append(Integer.toHexString(key[i] & 0xFF)); <s> b.append(Integer.toHexString(key[i] & 0xFF));
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
if ( this.getName().endsWith( "/" ) ) { <s> if ( this.getName().endsWith( "/" ) ) { <s> if (resource.isFolder()) { <s> if (resource.isFolder()) { <s> if(parent.endsWith(DELIMITER)) { <s> while ((a < e) && (pathname.charAt(e) == '/')) { <s> while ((a < e) && (pathname.charAt(e) == '/')) { <s>  if (packageName !=null && packageName.endsWith(".")) { <s> if (!(fileName.startsWith("/"))) { <s> if (!(fileName.startsWith("/"))) { <s> if (!(fileName.startsWith("/"))) { <s> if (!(fileName.startsWith("/"))) { <s> if (!prefix.endsWith("/") && prefix.length() != 0) { <s> if (!this.url.endsWith("/")) { <s> while ((a <= e) && (pathname.charAt(a) == '/')) { <s> while ((a <= e) && (pathname.charAt(a) == '/')) { <s> if (!tmp.startsWith("/")) { <s> if (name.endsWith("*")) <s> if (name.endsWith("*")) <s> if (absPath.length() > 1 && absPath.endsWith("/")) <s>  boolean parentMatchEnd = key.endsWith("/?"); if (parentMatchEnd) { <s> if (!baseLocation.isDirectory()) { <s> if (!target.endsWith("/")) { <s> if (!target.endsWith("/")) { <s> if (!target.endsWith("/")) {
if (unicodeChar == '\n') { <s> if (c == '\n' || c == '\u2028') { <s> if (!xml && c == '\n') { <s> if (c == DocUtils.TAB) { <s> if (c == DocUtils.TAB) { <s> if (c == '\r') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') { <s> if (offset > 0 && buffer.charAt(offset-1) == '\n') {
 <s>  <s>  <s> this.type = type; <s> this.type = type; <s> public boolean isEmpty() { return size == 0; } <s> public boolean isEmpty() { return size == 0; } <s> boolean authorSet = authorName.getText().length() != 0; <s> boolean authorSet = authorName.getText().length() != 0; <s> public boolean isEmpty() { return map.isEmpty(); } <s> public boolean isEmpty() { return map.isEmpty(); } <s> variableName = variableNameField.getText(); <s> variableName = variableNameField.getText(); <s> variableName = variableNameField.getText(); <s> variableName = variableNameField.getText(); <s> String result = str; <s> String result = str; <s> String result = str; <s> String result = str; <s> CollectionProperty headers= headerManager.getHeaders(); <s> if (getJmsContentHeaderProperties().getHeaders().isEmpty()) <s> String conditionList = conditionField.getText().trim().toLowerCase(); <s> parser.cliPrompt = value.trim(); <s> parser.cliPrompt = value.trim(); <s> String value = paramValue.toString().trim();
public InternationalFormatter() { this(null); <s> public static String getToolsJarClassPath() { return getToolsJarClassPath(FileOps.NONEXISTENT_FILE); } <s> public static URL[] getToolsJarURLs() { return getToolsJarURLs(FileOps.NONEXISTENT_FILE); } <s> public final InputMap getInputMap(final int condition) { return getInputMap(condition, true); <s> public DoubleConverter() { super(Double.class, true); <s> public XMLOutput() { _output = new XMLOutputter(); } <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath, workingCopies); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath,workingCopies); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath,workingCopies); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath,workingCopies); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath,workingCopies); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath, workingCopies); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath,workingCopies); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath, workingCopies ); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath, workingCopies ); <s> public Reader createReader(String finalPath, Iterator workingCopies) { return ParserUtil.createReader(finalPath,workingCopies); <s> public void trySave(boolean overwrite) { this.trySave(overwrite, false); <s> public LongConverter() { super(Long.class, false); <s> public CSVConfigGuesser() { this.config = new CSVConfig(); <s> public VOTableWriter() { this( DataFormat.TABLEDATA, true ); <s> public static XMLOutput createXMLOutput(XMLReader xmlReader) { XMLOutput output = new XMLOutput(xmlReader.getContentHandler()); for (int i = 0; i < LEXICAL_HANDLER_NAMES.length; i++) { try { Object value = xmlReader.getProperty(LEXICAL_HANDLER_NAMES[i]); if (value instanceof LexicalHandler) { output.setLexicalHandler((LexicalHandler) value); break; } } catch (Exception e) { if (log.isDebugEnabled()) { log.debug("error setting lexical handler properties", e); } } } return output; <s> public FlexibleDecimalFormat ( ) { this( 5 ); <s> public FlexibleDecimalFormat ( ) { this( 5 ); <s> public FlexibleDecimalFormat ( ) { this( 5 ); <s> public static FractionFormat getImproperInstance() { return getImproperInstance(Locale.getDefault());
c = buffer[bufferPos[bufferStackPos]]; if ((c >= 'A' && c <= 'Z') || c == '_' || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')) { <s> c = buffer[bufferPos[bufferStackPos]]; if ((c >= 'A' && c <= 'Z') || c == '_' || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')) { <s> if (!((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || Character.isUnicodeIdentifierPart(c))) { <s> if (!((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || Character.isUnicodeIdentifierPart(c))) { <s> if (!((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || Character.isUnicodeIdentifierPart(c))) { <s> if (!((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || Character.isUnicodeIdentifierPart(c))) { <s> if (!((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || Character.isUnicodeIdentifierPart(c))) { <s> if (!((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || Character.isUnicodeIdentifierPart(c))) { <s> if (c == '.' && bufferPos[bufferStackPos] + 1 < limit && buffer[bufferPos[bufferStackPos] + 1] == '.' && bufferPos[bufferStackPos] + 2 < limit && buffer[bufferPos[bufferStackPos] + 2] == '.') { bufferPos[bufferStackPos] += 2; int end = bufferPos[bufferStackPos]; while(++bufferPos[bufferStackPos] < limit) { char c2 = buffer[bufferPos[bufferStackPos]]; if (c2 == ')') { bufferPos[bufferStackPos] = end; return; } switch (c2) { case ' ': case '\t': case '\r': continue; case '\\': if (bufferPos[bufferStackPos] + 1 < limit && buffer[bufferPos[bufferStackPos] + 1] == '\n') { ++bufferPos[bufferStackPos]; continue; } if( bufferPos[bufferStackPos] + 1 < limit && buffer[ bufferPos[bufferStackPos] + 1 ] == '\r') { if( bufferPos[bufferStackPos] + 2 < limit && buffer[ bufferPos[bufferStackPos] + 2] == '\n' ) { bufferPos[bufferStackPos] +=2; continue; } } break; default: handleProblem( IProblem.PREPROCESSOR_MISSING_RPAREN_PARMLIST, bufferPos[bufferStackPos], String.valueOf(c2).toCharArray() ); return; } } break; } else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') <s> if (c == '.' && bufferPos[bufferStackPos] + 1 < limit && buffer[bufferPos[bufferStackPos] + 1] == '.' && bufferPos[bufferStackPos] + 2 < limit && buffer[bufferPos[bufferStackPos] + 2] == '.') { bufferPos[bufferStackPos] += 2; int end = bufferPos[bufferStackPos]; while(++bufferPos[bufferStackPos] < limit) { char c2 = buffer[bufferPos[bufferStackPos]]; if (c2 == ')') { bufferPos[bufferStackPos] = end; return; } switch (c2) { case ' ': case '\t': case '\r': continue; case '\\': if (bufferPos[bufferStackPos] + 1 < limit && buffer[bufferPos[bufferStackPos] + 1] == '\n') { ++bufferPos[bufferStackPos]; continue; } if( bufferPos[bufferStackPos] + 1 < limit && buffer[ bufferPos[bufferStackPos] + 1 ] == '\r') { if( bufferPos[bufferStackPos] + 2 < limit && buffer[ bufferPos[bufferStackPos] + 2] == '\n' ) { bufferPos[bufferStackPos] +=2; continue; } } break; default: handleProblem( IProblem.PREPROCESSOR_MISSING_RPAREN_PARMLIST, bufferPos[bufferStackPos], String.valueOf(c2).toCharArray() ); return; } } break; } else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') <s> if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || c == ':' || c == ',') { <s> if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || c == ':' || c == ',') { <s> if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c == '_' || Character.isUnicodeIdentifierPart(c)) { <s> if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c == '_' || Character.isUnicodeIdentifierPart(c)) { <s> if ((c >= '0' && c <= 9) || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || c == ':') { <s> if ((c >= '0' && c <= 9) || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || c == '_' || c == ':') { <s> while (f >= 0 && ch[f] >= 'a' && ch[f] <= 'z') f--; <s> while (f >= 0 && ch[f] >= 'a' && ch[f] <= 'z') f--; <s> while (f >= 0 && ch[f] >= 'a' && ch[f] <= 'z') f--; <s> while (f >= 0 && ch[f] >= 'a' && ch[f] <= 'z') f--; <s> while (f >= 0 && ch[f] >= 'a' && ch[f] <= 'z') f--; <s> } else if (!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c == '_' || Character.isUnicodeIdentifierPart(c))) { <s> } else if (!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c == '_' || Character.isUnicodeIdentifierPart(c))) { <s> c = expansion[pos]; if( !((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'X') || (c >= '0' && c <= '9') || c == '_') ) <s> c = expansion[pos]; if( !((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'X') || (c >= '0' && c <= '9') || c == '_') )
return getMap(props); <s> return new UnmodifiableMap<K, V>((Map<K, V>)map); <s> try { LinkedList<E> l = (LinkedList<E>) super.clone(); l.size = 0; l.voidLink = new Link<E>(null, null, null); l.voidLink.previous = l.voidLink; l.voidLink.next = l.voidLink; l.addAll(this); return l; } catch (CloneNotSupportedException e) { return null; } <s> return new UnmodifiableSortedMap<K, V>((SortedMap<K, V>)map); <s> return spellProgression; <s> return headSet(to, false); <s> return text; <s> return new SubMap(fromKey, (K)(Object)nil); <s> return new SubMap(fromKey, (K)(Object)nil); <s> return new HashMap<String, Integer>(); <s> return new HashMap<String, Integer>(); <s> List<RequestData> requests = getRequestLogger().getRequests(); if(requestData != null) { List<RequestData> returnValues = new ArrayList<RequestData> (); for (RequestData data : requests) { if(requestData.getSessionId().equals(data.getSessionId())) { returnValues.add(data); } } return returnValues; } return requests; <s> List<RequestData> requests = getRequestLogger().getRequests(); if(requestData != null) { List<RequestData> returnValues = new ArrayList<RequestData> (); for (RequestData data : requests) { if(requestData.getSessionId().equals(data.getSessionId())) { returnValues.add(data); } } return returnValues; } return requests; <s> return tailSet(from, true); <s> List newList = FastList.newInstance(); newList.addAll(this.viewLinks); return newList; <s> List newList = FastList.newInstance(); newList.addAll(this.viewLinks); return newList; <s> List newList = FastList.newInstance(); newList.addAll(this.viewLinks); return newList; <s> if (exp != null) return new ArrayList<Integer>(exp); return new ArrayList<Integer>(); <s> try { return new String(this.content,"UTF-8"); } catch (UnsupportedEncodingException uex) { throw new RuntimeException(uex); } <s> List result = new ArrayList<ZTag>(mNameToTag.values()); Collections.sort(result); return result; <s> ArrayList<String> result = new ArrayList<String>(); for (DataFlavor key : flavor2Native.keySet()) { result.addAll(flavor2Native.get(key)); } return result; <s> return new NodeChild(this.currentNode, null, this.namespaceTagHints); <s> List<Integer> l = new Vector<Integer>(); l.add(1953); return new TestTuple<String, List<Integer>, Boolean>(info.getSource(), l, true); <s> return new ArrayList<ISession>(_sessionsById.values()); <s> return new Pair<List<UnderlyingData>,MailItem.TypedIdList>(result, missed);
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
if (resize[u]) { <s> if (resize[u]) { <s> if (resize[u]) { <s>  if (value == 0) { switch (iPrintZeroSetting) { case PRINT_ZERO_NEVER: return Long.MAX_VALUE; case PRINT_ZERO_RARELY_LAST: if (isZero(period) && iFieldFormatters[iFieldType] == this) { for (int i = iFieldType + 1; i < 10; i++) { if (isSupported(type, i) && iFieldFormatters[i] != null) { return Long.MAX_VALUE; } } } else { return Long.MAX_VALUE; } break; case PRINT_ZERO_RARELY_FIRST: if (isZero(period) && iFieldFormatters[iFieldType] == this) { for (int i = Math.min(iFieldType, 8) - 1; i >= 0; i++) { if (isSupported(type, i) && iFieldFormatters[i] != null) { return Long.MAX_VALUE; } } } else { return Long.MAX_VALUE; } break; } <s>  if (value == 0) { switch (iPrintZeroSetting) { case PRINT_ZERO_NEVER: return Long.MAX_VALUE; case PRINT_ZERO_RARELY_LAST: if (isZero(period) && iFieldFormatters[iFieldType] == this) { for (int i = iFieldType + 1; i < 10; i++) { if (isSupported(type, i) && iFieldFormatters[i] != null) { return Long.MAX_VALUE; } } } else { return Long.MAX_VALUE; } break; case PRINT_ZERO_RARELY_FIRST: if (isZero(period) && iFieldFormatters[iFieldType] == this) { for (int i = Math.min(iFieldType, 8) - 1; i >= 0; i++) { if (isSupported(type, i) && iFieldFormatters[i] != null) { return Long.MAX_VALUE; } } } else { return Long.MAX_VALUE; } break; } <s> if (Math.abs(longValue) > Byte.MAX_VALUE) <s> if (value.unscaledValue().compareTo(MAX_SHORT) > 0 || value.unscaledValue().compareTo(MIN_SHORT) < 0) <s> if (Math.abs(longValue) > Integer.MAX_VALUE) <s> if (Math.abs(longValue) > Integer.MAX_VALUE) <s> if ( value < Long.MIN_VALUE || value > Long.MAX_VALUE || Double.isNaN( value ) ) { <s> if (doubleValue > Double.MAX_VALUE) { return; } if (doubleValue < Double.MIN_VALUE) { boolean isHexaDecimal = false; <s> if (Math.abs(value.longValue()) > Integer.MAX_VALUE) <s> if (Math.abs(value.longValue()) > Byte.MAX_VALUE) <s> if (value.unscaledValue().compareTo(MAX_INT) > 0 || value.unscaledValue().compareTo(MIN_INT) < 0) <s> if (firstToken && scannedID.length > 0 && ScannerHelper.isUpperCase(scannedID[0])) { <s> if (Math.abs(longValue) > Short.MAX_VALUE) <s> if (Math.abs(longValue) > Short.MAX_VALUE) <s> if (((id = syntheticArgumentTypes[i].id) == TypeIds.T_double) || (id == TypeIds.T_long)) { <s> if (jdbcType == Types.LONGVARCHAR && precision > maxPrecision) { maxPrecision = precision; <s> if (entry.startsWith(EXTERNAL_LIB_PREFIX)) { entry = entry.substring(EXTERNAL_LIB_PREFIX.length()); <s> if ( value < Byte.MIN_VALUE || value > Byte.MAX_VALUE || Double.isNaN( value ) ) { <s> if ( a < (double)Long.MIN_VALUE || a == Double.NEGATIVE_INFINITY) { return (Long.MIN_VALUE); <s> if (Math.abs(value.longValue()) > Short.MAX_VALUE) <s> if (null != hex && entity.locationIsLeg(loc)) { <s> if (null != hex && entity.locationIsLeg(loc)) {
 if (Float.isNaN(lat) || Float.isNaN(lon)) { Debug.message("proj", "Gnomonic.inverse(): outer space!"); <s>  if (Float.isNaN(lat) || Float.isNaN(lon)) { Debug.message("proj", "Gnomonic.inverse(): outer space!"); <s> if (NumberValue.isNaN(arg1) && NumberValue.isNaN(arg2)) <s> if (NumberValue.isNaN(arg1) && NumberValue.isNaN(arg2)) <s> if (NumberValue.isNaN(arg1) && NumberValue.isNaN(arg2)) <s> if (NumberValue.isNaN(arg1) && NumberValue.isNaN(arg2)) <s> if (NumberValue.isNaN(arg1) && NumberValue.isNaN(arg2)) <s> if (n == 0) { <s> if (n == 0) { <s> if (n == 0) { <s> if (actual >= Versions.getVersion(atLeast)) { <s> if (actual >= Versions.getVersion(atLeast)) { <s> if (actual >= Versions.getVersion(atLeast)) { <s> if (Math.abs(minimum) > Math.abs(maximum)) { <s> if (actual == Versions.getVersion(exactly)) { <s> if (actual == Versions.getVersion(exactly)) { <s> if (actual == Versions.getVersion(exactly)) { <s> double dtpi = metrics.directTimePerformanceIndex(); if (isBadRatio(cpi) || isBadRatio(dtpi)) <s> if (isGoodMatch(value, oldText, isPackage)) { <s> if (isGoodMatch(value, oldText, isPackage)) { <s> if (oldName.equals(value) || isGoodMatch(value, oldName, element instanceof IPackageFragment)) { <s> if (oldName.equals(value) || isGoodMatch(value, oldName, element instanceof IPackageFragment)) { <s> if (n.remainder(THREE).sign == 0 || n.remainder(FIVE).sign == 0) <s> if (n.remainder(THREE).sign == 0 || n.remainder(FIVE).sign == 0) <s> if (n.remainder(THREE).sign == 0 || n.remainder(FIVE).sign == 0)
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
if (i < n) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s>  if ((r == p.size()-1) && (r > max)) { <s> List links = new ArrayList(); if (entries.size() > max) { <s> if (pos < max) { <s> if (pos < max) { <s> if (m_bufferOffset_ < 0 && m_source_.getIndex() != 0 && isThaiPreVowel(peekCharacter(-1))) { backupInternalState(m_utilSpecialBackUp_); m_source_.previous(); if (m_source_.getIndex() == 0 || !isThaiPreVowel(peekCharacter(-1))) { result = CE_THAI_; } else { int noReordered = 1; while (m_source_.getIndex() != 0 && isThaiPreVowel(m_source_.previous())) { noReordered ++; } if ((noReordered & 1) != 0) { result = CE_THAI_; } else { result = m_collator_.m_trie_.getLeadValue(ch); } } updateInternalState(m_utilSpecialBackUp_); } else if (ch <= 0xFF) { <s> if (!last) {
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
char c= fPattern.charAt(pos++); <s> ch = text.charAt(i + 1); <s> char c = aChars[i]; <s> char c = aChars[i]; <s> c = string.charAt(s); <s> char c = buf[i]; <s> int c = (int) s.charAt(i); <s> char c = buf[i]; <s> char c = fileName.charAt(i); <s> char ch = signature[ofs++]; <s> char ch = signature[ofs++]; <s> char ch = signature[ofs++]; <s> char next= fPattern.charAt(pos++); <s> char c = line.array[i]; <s> char c = line.array[i]; <s> char c = line.array[i]; <s> char c = line.array[i]; <s> char c = line.array[i]; <s> ch = string.charAt(i); <s> char c = query.charAt(i); <s> char c = query.charAt(i); <s> char ch = _chars[i]; <s> char ch = area.getFontState().mapChar(s.charAt(i)); <s> char c = text.charAt(i); <s> byte ch = (byte) src.charAt(i);
if (!_isLive) return Collections.EMPTY_SET; <s> if (!_isLive) return Collections.EMPTY_SET; <s> if (!_isLive) return Collections.EMPTY_SET; <s> if (!_isLive) return Collections.EMPTY_SET; <s> if (!_isLive) return Collections.EMPTY_SET; <s>  <s>  <s>  <s>  <s>  <s>  <s> if (!tokenizer.hasMoreTokens()) { return null; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (!tokenizer.hasMoreTokens()) { return true; } <s> if (HeapAllocator.isInDataSegment(a)) return true;
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
return dim; <s> return new NoPrinterJob(); <s> short[] data; switch (component) { case REDCOMPONENT: data = getCurve(icSigRedTRCTag); break; case GREENCOMPONENT: data = getCurve(icSigGreenTRCTag); break; case BLUECOMPONENT: data = getCurve(icSigBlueTRCTag); break; default: throw new IllegalArgumentException("Not a valid component"); } if (data == null) throw new IllegalArgumentException("Error reading TRC"); if (data.length <= 1) throw new ProfileDataException("Gamma value, not a TRC table."); return data; <s> return this; <s> if (accessibleContext == null) accessibleContext = new AccessibleJPanel(); return accessibleContext; <s> short[] data = getCurve(icSigGrayTRCTag); if (data == null) throw new IllegalArgumentException("Couldn't read Gray TRC data."); if (data.length <= 1) throw new ProfileDataException("Gamma value, not a TRC table."); return data; <s> return Registry.RAW_ENCODING_SHORT_NAME; <s> return AccessibleRole.PAGE_TAB_LIST; <s> String[][] info = { {"host","text","Hostname or IP Address of Host"}, {"-p","int","IP Port to connect to"}, {"width","int","Width of Applet"}, {"height","int","Height of Applet"}, {"-dn","text","Screen Device Name"}, {"-sslType","text","Type of SSL connection (NONE | SSLv2 | TLS)"} }; return info; <s> float[][] mat = new float[3][3]; for (int i = 0; i < 3; i++) for (int j = 0; j < 3; j++) mat[i][j] = matrix[i][j]; return mat; <s> AccessibleContext parentCtx = JTabbedPane.this.getAccessibleContext(); AccessibleStateSet state = parentCtx.getAccessibleStateSet(); state.add(AccessibleState.SELECTABLE); if (component == getSelectedComponent()) state.add(AccessibleState.SELECTED); return state; <s> return bidiRoot; <s> return getAccessibleChild(r * getAccessibleColumnCount() + c); <s> float[] wp = new float[3]; wp[0] = whitePoint[0]; wp[1] = whitePoint[1]; wp[2] = whitePoint[2]; return wp; <s> return caption; <s> return new AccessibleJList(); <s> return getFontManager().createFont(format, stream); <s> float[] wp = new float[3]; wp[0] = whitePoint[0]; wp[1] = whitePoint[1]; wp[2] = whitePoint[2]; return wp; <s> Accessible descr = null; if (columnDescriptions != null) descr = columnDescriptions[c]; return descr; <s> return KeyPairCodecFactory.getEncodingShortName(defaultFormat); <s> if (accessibleContext == null) accessibleContext = new AccessibleJApplet(); return accessibleContext; <s> JTableHeader h = getTableHeader(); AccessibleTable header = null; if (h != null) header = new AccessibleTableHeader(h); return header; <s> int tabIndex = indexAtLocation(p.x, p.y); if (tabIndex >= 0) return getAccessibleChild(tabIndex); else return getAccessibleSelection(0); <s> return dim; <s> Accessible child = null; switch (i) { case 0: if (popup instanceof Accessible) { AccessibleContext ctx = ((Accessible) popup).getAccessibleContext(); ctx.setAccessibleParent(comboBox); child = (Accessible) popup; } break; case 1: if (comboBox.isEditable() && editor instanceof Accessible) { AccessibleContext ctx = ((Accessible) editor).getAccessibleContext(); ctx.setAccessibleParent(comboBox); child = (Accessible) editor; } break; } return child;
return obj instanceof HighlighterImageDescriptor <s>  return true; <s> return (object instanceof Method) && ((Method) object).getName().equals(getName()); <s> Set<SNodeProxy> nodeProxies = myCellsToRefTargetsToDependOnMap.get(cell); return ((sNodes != null) && (sNodes.contains(node))) || ((nodeProxies != null && nodeProxies.contains(new SNodeProxy(node)))); <s> return canonicalID().equals(id); <s> return !PsiKeyword.NULL.equals(lhsText) && !PsiKeyword.NULL.equals(rhsText); <s> return !PsiKeyword.NULL.equals(lhsText) && !PsiKeyword.NULL.equals(rhsText); <s> return !PsiKeyword.NULL.equals(lhsText) && !PsiKeyword.NULL.equals(rhsText); <s> return !PsiKeyword.NULL.equals(lhsText) && !PsiKeyword.NULL.equals(rhsText); <s> return (expected.equals(this.received.remove(0))); <s> return (expected.equals(this.received.remove(0))); <s> if(object instanceof Reference) { Reference ref = (Reference)object; if(this.internalRef == null) { return ref.internalRef == null; } else { return this.internalRef.equals(ref.internalRef); } } else { return false; } <s> return (other instanceof ReadPermission) && locator.equals(((ReadPermission)other).locator); <s> return string.length() > 0; <s> if(this == o){ return true; } if(o instanceof ServerNameDNSWrapper){ ServerNameDNSWrapper otherWrapper = (ServerNameDNSWrapper)o; return otherWrapper.getServerDNS().equals(getServerDNS()) && otherWrapper.getServerName().equals(getServerName()); } return false; <s> return compare(objConstant) == EQUAL; <s> return compare(objConstant) == EQUAL; <s>  return (list!=null) && (list.valid(item)); <s> return myStart.equals(other.myStart) && myEnd.equals(other.myEnd); <s> return (object instanceof CharacterSet) && getName().equalsIgnoreCase(((CharacterSet) object).getName()); <s> return name.equals(other.name); <s> return (s == null) ? (t == null) : s.equals(t); <s> return (s == null) ? (t == null) : s.equals(t); <s> return (s == null) ? (t == null) : s.equals(t); <s> return getUniqueIdentifier() == ((ParserAction)other).getUniqueIdentifier();
|| Protein.class.isAssignableFrom(type) || Sequence.class.isAssignableFrom(type)); <s> || Protein.class.isAssignableFrom(type) || Sequence.class.isAssignableFrom(type)); <s> || Number.class.isAssignableFrom(klass) || Event.class.isAssignableFrom(klass) || Property.class.isAssignableFrom(klass) || ObjectType.class.isAssignableFrom(klass) || ObjectMap.class.isAssignableFrom(klass)) { <s> && classNode.getSuperClass()==Type.CLOSURE_TYPE; <s>  <s>  <s>  <s> else if (Number.class.isAssignableFrom(l_Object.getClass())) <s> try { plugDescription.setRecordLoader(IRecordLoader.class.isAssignableFrom(Class.forName(plugDescription .getIPlugClass()))); } catch (ClassNotFoundException e) { new RuntimeException("iplug class not in classpath", e); } <s> && Matcher.class.isAssignableFrom(javaMethod.getReturnType()); <s> || superClass.equals(Type.GSTRING_TYPE); <s> return Number.class.isAssignableFrom( fieldType ); <s> org.eigenbase.util.property.Property.class.isAssignableFrom( field.getType())) { <s> org.eigenbase.util.property.Property.class.isAssignableFrom( field.getType())) { <s> org.eigenbase.util.property.Property.class.isAssignableFrom( field.getType())) { <s> !InputSource.class.isAssignableFrom(componentType) && !componentType.isInterface() <s> !InputSource.class.isAssignableFrom(componentType) && !componentType.isInterface() <s> !InputSource.class.isAssignableFrom(componentType) && !componentType.isInterface() <s> !InputSource.class.isAssignableFrom(componentType) && !componentType.isInterface() <s> else if ( IllegalArgumentException.class .isAssignableFrom( t.getClass() )) <s> else if ( IllegalArgumentException.class .isAssignableFrom( t.getClass() )) <s> else if ( IllegalArgumentException.class .isAssignableFrom( t.getClass() )) <s> else if ( IllegalArgumentException.class .isAssignableFrom( t.getClass() )) <s> return Map.class.isAssignableFrom( type ) && !Properties.class.isAssignableFrom( type ); <s> if (o != null) { return (STUB_OBJECT_INTERFACE.isAssignableFrom(o.getClass())); } else { return false; }
connector.retrieveContext(repository, task, delegate); <s> connector.retrieveContext(repository, task, delegate); <s>  String token = st.nextToken().trim(); if (internalMatches(name, token, 0, 0)) { <s>  String token = st.nextToken().trim(); if (internalMatches(name, token, 0, 0)) { <s> if (expressionEvaluator.evaluate(buffer, start, len, definitions, getLineNumber( bufferPos[bufferStackPos] ), getCurrentFilename()) == 0) { <s> if (expressionEvaluator.evaluate(buffer, start, len, definitions, getLineNumber( bufferPos[bufferStackPos] ), getCurrentFilename()) == 0) { <s> if (pointcut.matches(classMetaData, methodMetaData, exception)) { <s> if (pointcut.matches(classMetaData, methodMetaData, exception)) { <s>  if(geometry.intersect(newPS, pickInfo, flags, iPnt, geometry, i)) { <s> if (isLocal(op, index, type)) { <s> if (m.has(index, start)) { m.put(index, start, value); <s> if (geo.intersect(newPS, pickInfo, flags, iPnt, geom, geomIndex)) { <s> if (geo.intersect(newPS, pickInfo, flags, iPnt, geo, 0)) { <s> RefactoringStatus filterStatus= new RefactoringStatus(); if (descriptor.matches(evalContext, filter, filterStatus)) { <s> if (node != null && isSimple(ctx, e, node)) { <s> if (rules[i].matches(text, pos, variables, filter)) { <s> if (rules[i].matches(text, pos, variables, filter)) { <s> if (o != null) { <s> if (o != null) { <s> if (o != null) { <s> if (endsWith(m_url, s_resource, s_cookieName)) { <s> if (classFilter(definitions, classMetaData, ctClass)) { return; <s> super.execute(prefix, context, source, typesetter); <s> super.execute(prefix, context, source, typesetter); <s> boolean importAdded= updateReplacementString(document, trigger, offset, impStructure); if (importAdded) {
 if (exp.getVal()==0 || exp.getVal()==1) { return new TypePrimitive(TypePrimitive.TYPE_BIT); } else { return new TypePrimitive(TypePrimitive.TYPE_INT); } <s>  if (exp.getVal()==0 || exp.getVal()==1) { return new TypePrimitive(TypePrimitive.TYPE_BIT); } else { return new TypePrimitive(TypePrimitive.TYPE_INT); } <s> s = _unaryHelper(FLOAT_NEG, popFloat(), OPT_ClassLoaderProxy.FloatType); <s> s = _unaryHelper(FLOAT_NEG, popFloat(), OPT_ClassLoaderProxy.FloatType); <s> s = _unaryHelper(FLOAT_NEG, popFloat(), OPT_ClassLoaderProxy.FloatType); <s> dwastore(JvmType.DOUBLE); <s> dwastore(JvmType.DOUBLE); <s> s = _unaryHelper(INT_2FLOAT, popInt(), OPT_ClassLoaderProxy.FloatType); <s> s = _unaryHelper(INT_2FLOAT, popInt(), OPT_ClassLoaderProxy.FloatType); <s> s = _unaryHelper(INT_2FLOAT, popInt(), OPT_ClassLoaderProxy.FloatType); <s> aNumber.divide(bNumber); <s> return new OPT_RegisterOperand(reg, OPT_ClassLoaderProxy.FloatType); <s> return new OPT_RegisterOperand(reg, OPT_ClassLoaderProxy.FloatType); <s> return new OPT_RegisterOperand(reg, OPT_ClassLoaderProxy.FloatType); <s> public FloatFormatter() { init(Floats.MAX_NEGATIVE_VALUE, Float.MAX_VALUE); <s> public FloatFormatter() { init(Floats.MAX_NEGATIVE_VALUE, Float.MAX_VALUE); <s> s = _unaryHelper(FLOAT_2INT, popFloat(), OPT_ClassLoaderProxy.IntType); <s> s = _unaryHelper(FLOAT_2INT, popFloat(), OPT_ClassLoaderProxy.IntType); <s> s = _unaryHelper(FLOAT_2INT, popFloat(), OPT_ClassLoaderProxy.IntType); <s> s = _unaryHelper(LONG_2FLOAT, popLong(), OPT_ClassLoaderProxy.FloatType); <s> s = _unaryHelper(LONG_2FLOAT, popLong(), OPT_ClassLoaderProxy.FloatType); <s> s = _unaryHelper(LONG_2FLOAT, popLong(), OPT_ClassLoaderProxy.FloatType); <s>  <s>  <s> 
return new InterTypeMethodInstance_c(this, pos, id, origin, container, flags, oflags, <s> return new ClassDecl_c(null, pos, flags, name, superClass, interfaces, body); <s> ClassDecl n = new ClassDecl_c(pos, flags, name, superClass, interfaces, body); if (extFactory != null) { n = (ClassDecl)n.ext(extFactory.extClassDecl()); } return n; <s> return new ProblemMethodBinding(candidates[0].selector, candidates[0].parameters, candidates[0].declaringClass, NotVisible); <s> return new ConstructorJoinPoint(joinPointType, m_targetClass, signature, rtti, joinPointMetaData, <s> return new Stream(location, type.getClassName(), streamBaseClass) .setIsUninteresting(isUninteresting) .setIgnoreImplicitExceptions(true) .setIsOpenOnCreation(true); <s> return new Stream(location, type.getClassName(), streamBaseClass) .setIsUninteresting(isUninteresting) .setIgnoreImplicitExceptions(true) .setIsOpenOnCreation(true); <s> return new InterTypeMethodInstance_c(this, pos, origin, container, flags, oflags, <s> script = new BeanShellScript(context, scriptName, eventType, eventSubtypes, code); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name); <s> return new RubyClass(runtime, runtime.getClass("Class"), superClass, parentClass, name);
sb.append(File.pathSeparator); <s> if (document.getChar(offset) != ')') buf.append(';'); <s>  <s> buffer.append(";\n"); <s>  <s> src.append('&'); <s> src.append('&'); <s> src.append('&'); <s> src.append('&'); <s> src.append('&'); <s> src.append('&'); <s> src.append('&'); <s> src.append('&'); <s> src.append('&'); <s> sb.append('}'); <s> sb.append("((?i)"); <s> sb.append("((?i)"); <s>  <s> url.append('?'); <s> url.append('?'); <s> url.append('?'); <s> src.append('?'); <s> src.append('?'); <s> url.append('?'); <s> src.append('?');
return _loadProject(ProjectFileParser.ONLY.parse(projectFile)); <s> return AnnotationProcessorFactoryLoader.getLoader().hasFactoriesForProject(project); <s> return _queryExecuter.execute(new MethodInvocation(method, args, LifeView.CALLING_NICKNAME.get())); <s> return OgnlUtil.getValue(expr, context, root); <s>  Topic templateTopic = WikiBase.getHandler().lookupTopic(parserInput.getVirtualWiki(), name, false); if (templateTopic == null) { return raw; } return this.parseTemplateBody(parserInput, templateTopic.getTopicContent()); <s> public PatternParser(ITokenSource tokenSource) { super(); this.tokenSource = tokenSource; this.sourceContext = tokenSource.getSourceContext(); <s> public PatternParser(ITokenSource tokenSource) { super(); this.tokenSource = tokenSource; this.sourceContext = tokenSource.getSourceContext(); <s> return filterAndConvertValues(includeMap, predicate, fromDomainToAPITransformer); <s> return filterAndConvertValues(imagesMap, predicate, fromDomainToAPITransformer); <s> return FullParser.realiseObjects(FullParser.parse(is), model, false); <s> return FullParser.realiseObjects(FullParser.parse(is), model, false); <s> return parseFromStream(in, fileName); <s> return parseFromStream(in, fileName); <s> return newView(view,buffer,false); <s> return doPredicate(context, pointer, <s> return filterAndConvertValues(textFieldsMap, predicate, fromDomainToAPITransformer); <s> Query newQuery = new Query(); /*Map fromElementMap = new HashMap(); Iterator fromIter = query.getFrom().iterator(); while (fromIter.hasNext()) { FromElement origFrom = (FromElement) fromIter.next(); FromElement newFrom = null; if (origFrom instanceof QueryClass) { newFrom = new QueryClass(((QueryClass) origFrom).getType()); } else if (origFrom instanceof Query) { newFrom = cloneQuery((Query) origFrom); } else { throw new IllegalArgumentException("Unknown type of FromElement " + origFrom); } newQuery.addFrom(newFrom, (String) query.getAliases().get(origFrom)); fromElementMap.put(origFrom, newFrom); }*/ return FqlQueryParser.parse(new FqlQuery(query)); <s> Query newQuery = new Query(); /*Map fromElementMap = new HashMap(); Iterator fromIter = query.getFrom().iterator(); while (fromIter.hasNext()) { FromElement origFrom = (FromElement) fromIter.next(); FromElement newFrom = null; if (origFrom instanceof QueryClass) { newFrom = new QueryClass(((QueryClass) origFrom).getType()); } else if (origFrom instanceof Query) { newFrom = cloneQuery((Query) origFrom); } else { throw new IllegalArgumentException("Unknown type of FromElement " + origFrom); } newQuery.addFrom(newFrom, (String) query.getAliases().get(origFrom)); fromElementMap.put(origFrom, newFrom); }*/ return FqlQueryParser.parse(new FqlQuery(query)); <s> Envelope env = this.innerReadMessage(m_da.getMessageManager().getMostRelevantOccurrence( <s> return _getNumberFormat(cldrFile, NumberNames[index], OTHER_KEY); <s> File file = new File("../sql/" + fileName + ".sql"); String template = FileUtil.read(file); if (fileName.equals("portal") || fileName.equals("update-3.6.0-4.0.0")) { BufferedReader br = new BufferedReader(new StringReader(template)); StringBuffer sb = new StringBuffer(); String line = null; while ((line = br.readLine()) != null) { if (line.startsWith("@include ")) { int pos = line.indexOf(" "); String includeFileName = line.substring(pos + 1, line.length()); String include = FileUtil.read("../sql/" + includeFileName); if (includeFileName.endsWith(".vm")) { try { include = _evaluateVM(include); } catch (Exception e) { e.printStackTrace(); } } /*if (includeFileName.equals("portal-data-image.sql") && server.equals("sybase")) { include = StringUtil.replace( include, ");\n", ");\nCOMMIT_TRANSACTION;\n"); }*/ include = _convertTimestamp(include, server); include = StringUtil.replace( include, _TEMPLATE, replace); sb.append(include); sb.append("\n\n"); } else { sb.append(line); sb.append("\n"); } } br.close(); template = sb.toString(); } template = _convertTimestamp(template, server); template = StringUtil.replace(template, _TEMPLATE, replace); return template; <s> File file = new File("../sql/" + fileName + ".sql"); String template = FileUtil.read(file); if (fileName.equals("portal") || fileName.equals("update-3.6.0-4.0.0")) { BufferedReader br = new BufferedReader(new StringReader(template)); StringBuffer sb = new StringBuffer(); String line = null; while ((line = br.readLine()) != null) { if (line.startsWith("@include ")) { int pos = line.indexOf(" "); String includeFileName = line.substring(pos + 1, line.length()); String include = FileUtil.read("../sql/" + includeFileName); if (includeFileName.endsWith(".vm")) { try { include = _evaluateVM(include); } catch (Exception e) { e.printStackTrace(); } } /*if (includeFileName.equals("portal-data-image.sql") && server.equals("sybase")) { include = StringUtil.replace( include, ");\n", ");\nCOMMIT_TRANSACTION;\n"); }*/ include = _convertTimestamp(include, server); include = StringUtil.replace( include, _TEMPLATE, replace); sb.append(include); sb.append("\n\n"); } else { sb.append(line); sb.append("\n"); } } br.close(); template = sb.toString(); } template = _convertTimestamp(template, server); template = StringUtil.replace(template, _TEMPLATE, replace); return template; <s> return jv; <s> return jv; <s> try { return new ClassParser(fileName).parse(); } catch (ClassFormatException e) { throw new ClassFormatException("Invalid class file format for " + fileName + ": " + e.getMessage()); }
return isRepresentsEntityReference() && getLastPropertyKeyName().equals(p.getName()); <s> comp = a.getName().compareToIgnoreCase(b.getName()); <s> comp = a.getName().compareToIgnoreCase(b.getName()); <s> JPanel editor = (JPanel) c.newInstance(); removeAll(); add(editor, BorderLayout.CENTER); label.setText(c.getSimpleName()); add(label, BorderLayout.SOUTH); repaint(); <s> return (characterSet != null) && getName().equalsIgnoreCase(characterSet.getName()); <s> return (characterSet != null) && getName().equalsIgnoreCase(characterSet.getName()); <s> final String name = param.getName(); final String value = System.getProperty(name); if (value == null) { return m_props.getProperty(name); } else { return value; } <s> return (method != null) && getName().equals(method.getName()); <s> return i.getName().equals(name); <s> return i.getName().equals(name); <s> Object[] propertyInfo = lookUpProperty(val.getProperty(), map); set = propertyInfo[1]; <s> return childName.equals(el.getName()) && childNS.equals(el.getNamespaceURI()); <s> return childName.equals(el.getName()) && childNS.equals(el.getNamespaceURI()); <s> return childName.equals(el.getName()) && childNS.equals(el.getNamespaceURI()); <s> return childName.equals(el.getName()) && childNS.equals(el.getNamespaceURI()); <s> result.append((pt) ? iter.getName() : iter.getNameEn()); <s> object.add(new QName(beanName.getNamespaceURI(),propDesc.getName(),beanName.getPrefix())); <s> object.add(new QName(beanName.getNamespaceURI(), propDesc.getName(), beanName.getPrefix())); <s> object.add(new QName(beanName.getNamespaceURI(),propDesc.getName(),beanName.getPrefix())); <s> object.add(new QName(beanName.getNamespaceURI(),propDesc.getName(),beanName.getPrefix())); <s> object.add(new QName(beanName.getNamespaceURI(), propDesc.getName(), beanName.getPrefix())); <s> res = hl.getName(); <s> return getZimletName().compareTo(f.getZimletName()); <s> return filename.regionMatches(0, canFile.getName(), 0, namelen); <s> return type != null && type.equals(var.getType());
if (c == String.class || c == Object.class || c == Serializable.class) <s> if (method == null && getTheClass() != Class.class) { <s>  if (theClass != Class.class) { <s> if (method == null && theClass != Class.class) { <s> if (tdata.format < 8 || tdata.format % 8 != 0) { <s> if (d.width == c.width && d.height == c.height) { <s> Class wrap = Filters.wrap(c); if (wrap == Integer.class || wrap == Float.class || wrap == Double.class || wrap == Long.class || wrap == BigDecimal.class || wrap == BigInteger.class) return Filters.unwrap(c); <s> if ((token == Scanner.TokenNameclass || token == Scanner.TokenNameinterface) && previousToken != Scanner.TokenNameDOT) { <s> if (type == Void.TYPE) { <s> if (type == Void.TYPE) { <s> if (!haveAnswer) { <s> if (newValue != null && getType() == String.class && !(newValue instanceof String)) { <s> if (ls.incomplete) continue; if (ls.from == n || ls.to == n) { <s> if (readerClassName == null && writerClassName == null) { <s> if (state.primitiveOrImmutable) { <s> if ( type == String.class ) { <s> if ( type == String.class ) { <s> if ( type == String.class ) { <s> if (other.field == field && other.type == type) { <s> if (other.field == field && other.type == type) { <s> if (rel != null && rel.otherType != null && (rel.groupby != null || rel.accessName != null)) { <s> if (rel != null && rel.otherType != null && (rel.groupby != null || rel.accessName != null)) { <s> if (ent == null || ent.getMethod().isUndefined()) { <s> if (ent == null || ent.getMethod().isUndefined()) { <s> if (ent == null || ent.getMethod().isUndefined()) {
properties = (Map)namer.getSubstitutions().clone(); <s> if (iterateDirectories) { files = ds.getIncludedDirectories(); } else { files = ds.getIncludedFiles(); } <s> if (iterateDirectories) { files = ds.getIncludedDirectories(); } else { files = ds.getIncludedFiles(); } <s> sourceFiles = packageData.getSourceFiles(); <s> if(project!=null) files = project.getFiles(); } catch (NumberFormatException e) { return errorProperties(method,MethodConstants.SE_PARSE_ERROR,"Unable to parse project ID = '"+projectID+"'!"); <s>  properties = new HashMap(); for (Iterator iterator = message.getPropertyNames(); iterator.hasNext();) { Object o = iterator.next(); properties.put(o, message.getProperty(o)); } <s>  properties = new HashMap(); for (Iterator iterator = message.getPropertyNames(); iterator.hasNext();) { Object o = iterator.next(); properties.put(o, message.getProperty(o)); } <s> Object src = message.getPayload(); try { if (src instanceof byte[]) { src = new String((byte[]) src); } Document dom4jDoc; if (src instanceof String) { String xml = (String) src; SAXReader reader = new SAXReader(); setDoSchemaValidation(reader, isValidateSchema()); InputStream xsdAsStream = ClassHelper.getResourceAsStream(getExternalSchemaLocation(), getClass()); if (xsdAsStream == null) { throw new IllegalArgumentException("Couldn't find schema at " + getExternalSchemaLocation()); } reader.setProperty("http: dom4jDoc = reader.read(new StringReader(xml)); } else if (src instanceof org.dom4j.Document) { dom4jDoc = (org.dom4j.Document) src; } else { logger.error("Non-xml message payload: " + src.getClass().toString()); return; } if (dom4jDoc != null) { if (splitExpression.length() > 0) { XPath xpath = dom4jDoc.createXPath(splitExpression); if (namespaces != null) xpath.setNamespaceURIs(namespaces); List nodes = xpath.selectNodes(dom4jDoc); if (logger.isDebugEnabled()) { logger.debug("Split into " + nodes.size()); } FilteringXmlMessageSplitter.nodes.set(nodes); } } else { logger.warn("Unsupported message type, ignoring"); } } catch (Exception ex) { throw new IllegalArgumentException("Failed to initialise the payload.", ex); } Map theProperties = message.getProperties(); properties.set(theProperties); <s> Object src = message.getPayload(); try { if (src instanceof byte[]) { src = new String((byte[]) src); } Document dom4jDoc; if (src instanceof String) { String xml = (String) src; SAXReader reader = new SAXReader(); setDoSchemaValidation(reader, isValidateSchema()); InputStream xsdAsStream = ClassHelper.getResourceAsStream(getExternalSchemaLocation(), getClass()); if (xsdAsStream == null) { throw new IllegalArgumentException("Couldn't find schema at " + getExternalSchemaLocation()); } reader.setProperty("http: dom4jDoc = reader.read(new StringReader(xml)); } else if (src instanceof org.dom4j.Document) { dom4jDoc = (org.dom4j.Document) src; } else { logger.error("Non-xml message payload: " + src.getClass().toString()); return; } if (dom4jDoc != null) { if (splitExpression.length() > 0) { XPath xpath = dom4jDoc.createXPath(splitExpression); if (namespaces != null) xpath.setNamespaceURIs(namespaces); List nodes = xpath.selectNodes(dom4jDoc); if (logger.isDebugEnabled()) { logger.debug("Split into " + nodes.size()); } FilteringXmlMessageSplitter.nodes.set(nodes); } } else { logger.warn("Unsupported message type, ignoring"); } } catch (Exception ex) { throw new IllegalArgumentException("Failed to initialise the payload.", ex); } Map theProperties = message.getProperties(); properties.set(theProperties); <s> Object src = message.getPayload(); try { if (src instanceof byte[]) { src = new String((byte[]) src); } Document dom4jDoc; if (src instanceof String) { String xml = (String) src; SAXReader reader = new SAXReader(); setDoSchemaValidation(reader, isValidateSchema()); InputStream xsdAsStream = ClassHelper.getResourceAsStream(getExternalSchemaLocation(), getClass()); if (xsdAsStream == null) { throw new IllegalArgumentException("Couldn't find schema at " + getExternalSchemaLocation()); } reader.setProperty("http: dom4jDoc = reader.read(new StringReader(xml)); } else if (src instanceof org.dom4j.Document) { dom4jDoc = (org.dom4j.Document) src; } else { logger.error("Non-xml message payload: " + src.getClass().toString()); return; } if (dom4jDoc != null) { if (splitExpression.length() > 0) { XPath xpath = dom4jDoc.createXPath(splitExpression); if (namespaces != null) xpath.setNamespaceURIs(namespaces); List nodes = xpath.selectNodes(dom4jDoc); if (logger.isDebugEnabled()) { logger.debug("Split into " + nodes.size()); } FilteringXmlMessageSplitter.nodes.set(nodes); } } else { logger.warn("Unsupported message type, ignoring"); } } catch (Exception ex) { throw new IllegalArgumentException("Failed to initialise the payload.", ex); } Map theProperties = message.getProperties(); properties.set(theProperties); <s>  properties = new HashMap(); for (Iterator iterator = message.getPropertyNames(); iterator.hasNext();) { Object o = iterator.next(); properties.put(o, message.getProperty(o)); } <s>  properties = new HashMap(); for (Iterator iterator = message.getPropertyNames(); iterator.hasNext();) { Object o = iterator.next(); properties.put(o, message.getProperty(o)); } <s> Object src = message.getPayload(); try { if (src instanceof byte[]) { src = new String((byte[]) src); } Document dom4jDoc; if (src instanceof String) { String xml = (String) src; SAXReader reader = new SAXReader(); setDoSchemaValidation(reader, isValidateSchema()); InputStream xsdAsStream = ClassHelper.getResourceAsStream(getExternalSchemaLocation(), getClass()); if (xsdAsStream == null) { throw new IllegalArgumentException("Couldn't find schema at " + getExternalSchemaLocation()); } reader.setProperty("http: dom4jDoc = reader.read(new StringReader(xml)); } else if (src instanceof org.dom4j.Document) { dom4jDoc = (org.dom4j.Document) src; } else { logger.error("Non-xml message payload: " + src.getClass().toString()); return; } if (dom4jDoc != null) { if (splitExpression.length() > 0) { XPath xpath = dom4jDoc.createXPath(splitExpression); if (namespaces != null) xpath.setNamespaceURIs(namespaces); List nodes = xpath.selectNodes(dom4jDoc); if (logger.isDebugEnabled()) { logger.debug("Split into " + nodes.size()); } FilteringXmlMessageSplitter.nodes.set(nodes); } } else { logger.warn("Unsupported message type, ignoring"); } } catch (Exception ex) { throw new IllegalArgumentException("Failed to initialise the payload.", ex); } Map theProperties = message.getProperties(); properties.set(theProperties); <s> connections = plini.getConnections(); for (int i = listenerList.size() - 1; i >= 0; i--) { listenerList.get(i).contentsChanged( new ListDataEvent(this, ListDataEvent.INTERVAL_ADDED, e.getListIndex(), e.getListIndex())); } <s> packagesEJB = reader.get(); <s> projects = project.getDescription().getReferencedProjects(); <s> projects = project.getDescription().getReferencedProjects(); <s> projects = project.getDescription().getReferencedProjects(); <s> projects = project.getDescription().getReferencedProjects(); <s> projects = project.getDescription().getReferencedProjects(); <s> projects = project.getDescription().getReferencedProjects(); <s> projects = project.getDescription().getReferencedProjects(); <s> projects = project.getDescription().getReferencedProjects(); <s> configs = newProject.getConfigurations(); <s> configs = newProject.getConfigurations();
value = parent.getVariable( name ); <s>  decl = source.getStatement(index); <s>  decl = source.getStatement(index); <s> if( knrParamDtor != null ) paramName = knrParamDtor.getName(); <s> if( knrParamDtor != null ) paramName = knrParamDtor.getName(); <s> try { rval = super.findClass(name); } catch (ClassFormatError cfe) { Main.info(name + ": Catched " + cfe + ". Trying to repair..."); rval = loadFixedClass( name ); } <s> try { rval = super.findClass(name); } catch (ClassFormatError cfe) { Main.info(name + ": Catched " + cfe + ". Trying to repair..."); rval = loadFixedClass( name ); } <s> i = findNamePoint(argn.getNodeName(),0); <s> i = findNamePoint(argn.getNodeName(),0); <s> i = findNamePoint(argn.getNodeName(),0); <s> i = findNamePoint(argn.getNodeName(),0); <s> final int endCol = matcher.end(0) - 1; <s> final int endCol = matcher.end(0) - 1; <s> res = root.findMember(new Path(fileName)); <s> res = root.findMember(new Path(fileName)); <s> res = root.findMember(new Path(fileName)); <s> res = root.findMember(new Path(fileName)); <s>  source.removeStatement(index); source.addStatement(index, assigns); index++; <s>  source.removeStatement(index); source.addStatement(index, assigns); index++; <s> Named x = c.find(name()); <s> Named x = c.find(name()); <s> parameterInclude.addParameter(param); <s> name.append(celem.getElementName()); <s> name.append(celem.getElementName()); <s> name.append(celem.getElementName());
output.writeObject(archivelist); <s>  <s>  <s> out.writeInt(_value); <s> d.print(SConstants.UID_DIVIDER); <s>  <s>  <s>  out.writeUTF(name.toString()); <s>  out.writeUTF(name.toString()); <s> synchronized (instance) { o.writeObject(instance); } <s> device.print("','"); <s> device.print("','"); <s> device.print("/>"); <s> device.print("','"); <s> device.print("/>"); <s> device.print("\""); <s> device.print("\""); <s> device.print("\""); <s> device.print("','"); <s> device.print("','"); <s> if (path.indexOf("dateTimeFormatLength") > 0) return; try { gen.add(value, false, patternInfo); switch (patternInfo.status) { case PatternInfo.CONFLICT: failures.add("Conflicting Patterns: \"" + value + "\"\t&\t\"" + patternInfo.conflictingPattern + "\""); break; } } catch (RuntimeException e) { failures.add(e.getMessage()); } <s>  <s>  <s>  do { response.read(_in); } while (response.getStatus().equals("100")); <s>  do { response.read(_in); } while (response.getStatus().equals("100"));
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
_srcRoot = null; <s>  <s>  <s> _name = name; <s> _name = name; <s> _name = name; <s>  <s> _dirtyCheck = dirtyCheck; <s> _pathSource = path; <s> _prefix = lookupPrefix(namespace); <s> _prefix = lookupPrefix(namespace); <s> if(xmlDoc!=null) _xmlDocs = new LimeXMLDocument[] {xmlDoc}; <s>  if (_serializer != null) { OutputFormat format = Configuration.getOutputFormat(); format.setOmitXMLDeclaration( ! asDocument ); _serializer.setOutputFormat( format ); try { _handler = _serializer.asDocumentHandler(); } catch (java.io.IOException iox) { } } <s> _includedFrom = parent; <s> _includedFrom = parent; <s>  <s>  <s> if (embedOwner && _embedFullName == null) { if (_owner.getEmbeddingMetaData() == null) _embedFullName = _fullName; else _embedFullName = _owner.getEmbeddingMetaData(). getFieldMetaData().getFullName(true) + "." + _fullName; } return (embedOwner) ? _embedFullName : _fullName; <s> _dom = root; <s> _dom = root; <s>  <s>  <s>  <s>  <s> since = "none";
}else if ("and".equalsIgnoreCase(result.value) || mLocalizer.msg("and", "and").equalsIgnoreCase(result.value)) { <s> } else if (key.equals("short_desc_type")) { if (value.equals("allwordssubstr")) <s> } else if (key.equals("short_desc_type")) { if (value.equals("allwordssubstr")) <s> currentTime = ""; } else if (qName.equals("trkseg") || qName.equals("trk") || qName.equals("gpx")) { <s> } else if (atts.getQName(j).equals("title") && atts.getValue(j).equals("connect")) { <s> } else if (atts.getQName(j).equals("title") && atts.getValue(j).equals("connect")) { <s> } else if (atts.getQName(j).equals("title") && atts.getValue(j).equals("connect")) { <s> } else if (atts.getQName(j).equals("title") && atts.getValue(j).equals("connect")) { <s> } else if (atts.getQName(j).equals("title") && atts.getValue(j).equals("connect")) { <s> } else if (atts.getQName(j).equals("title") && atts.getValue(j).equals("connect")) { <s> } else if (atts.getQName(j).equals("title") && atts.getValue(j).equals("connect")) { <s> } else if (atts.getQName(j).equals("title") && atts.getValue(j).equals("connect")) { <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName()); <s> if ((peerNodeStatus.getStatusValue() == Node.PEER_NODE_STATUS_CONNECTED) && (Integer.parseInt(peerNodeStatus.getSimpleVersion()) > 476)) { peerRow.addChild("td", "class", "peer-name").addChild("a", "href", "/send_n2ntm/?peernode_hashcode=" + peerNodeStatus.hashCode(), peerNodeStatus.getName());
currentBuffer = ByteBuffer.allocateDirect(0x40000); <s> final String c = castMap.get(String.valueOf(x)); <s> throw new InvalidKeyException(x.getMessage(), x); <s> throw new InvalidKeyException(x.getMessage(), x); <s> throw new InvalidKeyException(x.getMessage(), x); <s> throw new InvalidKeyException(x.getMessage(), x); <s> String mark = String.valueOf(Chromosome.realIndex[x] + 1); <s> Integer idInteger = null; <s> Integer idInteger = null; <s>  Integer idInteger = null; try { idInteger = Integer.valueOf(id); } catch (Exception e) { Object o = null; o = getContentDefinitionConstructor(cms, cdClass, id); try { Method deleteMethod = (Method) cdClass.getMethod("delete", new Class[] {CmsObject.class}); deleteMethod.invoke(o, new Object[] {cms}); } catch (Exception e1) { if (A_OpenCms.isLogging()) { A_OpenCms.log(C_OPENCMS_INFO, getClassName() + ": Backoffice: delete method throwed an exception!"); } templateSelector = "deleteerror"; template.setData("deleteerror", e1.getMessage()); } processResult = startProcessing(cms, template, elementName, parameters, templateSelector); return processResult; } <s>  Integer idInteger = null; try { idInteger = Integer.valueOf(id); } catch (Exception e) { Object o = null; o = getContentDefinitionConstructor(cms, cdClass, id); try { Method deleteMethod = (Method) cdClass.getMethod("delete", new Class[] {CmsObject.class}); deleteMethod.invoke(o, new Object[] {cms}); } catch (Exception e1) { if (A_OpenCms.isLogging()) { A_OpenCms.log(C_OPENCMS_INFO, getClassName() + ": Backoffice: delete method throwed an exception!"); } templateSelector = "deleteerror"; template.setData("deleteerror", e1.getMessage()); } processResult = startProcessing(cms, template, elementName, parameters, templateSelector); return processResult; } <s> Integer idInteger = null; <s> Integer idInteger = null; <s> throw new SignatureException(x.getMessage(), x); <s> throw new SignatureException(x.getMessage(), x); <s> throw new SignatureException(x.getMessage(), x); <s> throw new SignatureException(x.getMessage(), x); <s> throw new SignatureException(x.getMessage(), x); <s> throw new SignatureException(x.getMessage(), x); <s> public String toString() { return String.valueOf(value); } <s> final String s = org.apache.poi.hpsf.Util.toString(t); <s> throw new RuntimeException("nextRandomBytes(): " + x); <s> throw new RuntimeException("nextRandomBytes(): " + x); <s> return toString(); <s> throw new RuntimeException("nextRandomBytes(): " + x);
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
r.next(); <s> r.next(); <s>  copyToken(tok,defTok); <s> geckoBrowser.setSize(gscroll.getSize()); <s> geckoBrowser.setSize(gscroll.getSize()); <s> geckoBrowser.setSize(gscroll.getSize()); <s> geckoBrowser.setSize(gscroll.getSize()); <s> Thread p = new Thread(r); p.start(); <s> Thread p = new Thread(r); p.start(); <s> Thread p = new Thread(r); p.start(); <s> Thread p = new Thread(r); p.start(); <s> fViewer.refresh(root, true); fViewer.setSelection(fViewer.getSelection()); <s> synchronized (this) { Runnable asr = afterStopRunnable; afterStopRunnable = null; asr.run(); } <s> synchronized (this) { Runnable asr = afterStopRunnable; afterStopRunnable = null; asr.run(); } <s> rs.close(); <s> rs.close(); <s> rs.close(); <s> rs.close(); <s> rs.close(); <s> rs.close(); <s> rs.close(); <s>  <s>  <s> if (r != null) r.close(); <s> rs.close();
 final String[] unindentAfter = {"break", "continue", "return", "pass"}; <s> final String[] explicitModifiers = {"public", "private", "protected"}; <s> final String[] explicitModifiers = {"public", "private", "protected"}; <s>  final String[] unindent = {"else", "elif", "except", "finally"}; <s> final String[] illegal = new String[] {"\n", "\r"}; <s>  final String[] unindent = {"else", "elif", "except"}; <s> final String[] declarationTypes = new String[]{"String", "int"}; <s> final String[] declarationTypes = new String[]{"String", "int"}; <s> final String[] declarationTypes = new String[]{"String", "int"}; <s> final String[] declarationTypes = new String[]{"String", "int"}; <s> final String[] declarationTypes = new String[]{"String", "int"}; <s> final String[] declarationTypes = new String[]{"String", "int"}; <s> String[] titles = {"", "Name", "Flag", "X", "Y"}; <s> String[][] scriptOrigin = {{"any"}, {"any", "document"}, {"any", "document", "embeded"}, {"any", "document", "embeded"}, };; <s> String[][] scriptOrigin = {{"any"}, {"any", "document"}, {"any", "document", "embeded"}, {"any", "document", "embeded"}, };; <s> String[] array = { "one", "two", "three" }; <s> new String[]{"meta_headline", "meta_text", "text", "keyword"}, new LowerCaseLetterAnalyzer() ); <s> menuItems = new String[]{"copy", "cut", "paste", "insert filter page", "insert attribute page", "delete", "save"}; <s> new String[] {"alpha", "alpha/beta", <s> new String[] {"alpha", "alpha/beta", <s> new String[] {"alpha", "alpha/beta", <s> Object[] foo = { "a", "b", "c" }; <s>  <s>  <s> 
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
clone.dropCaches(); <s> clone.dropCaches(); <s> clone.dropCaches(); <s> clone.dropCaches(); <s> if (files != null) files.clear(); <s> if (files != null) files.clear(); <s> if (files != null) files.clear(); <s> if (files != null) files.clear(); <s> if (files != null) files.clear(); <s>  <s>  <s>  <s>  <s>  <s> factories.clear (); <s> index.clearFile(file); <s> index.clearFile(file); <s> index.clearFile(file); <s> index.clearFile(file); <s>  <s> KoLCharacter.resetInventory(); <s>  <s> if(engine != null) engine.parse(); <s> if(engine != null) engine.parse(); <s> 
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
if (Length <= 11) { <s> if (Length <= 11) { <s> if (Length <= 11) { <s>  <s>  <s> if (end <= start) { <s> if (i == -1) { <s> if (len <= VAR_MAX) { <s> if (len <= VAR_MAX) { <s>  if (connection.isWideChar() && len <= SYB_LONGVAR_MAX) { try { len = pi.getString(connection.getCharset()).length(); } catch (IOException e) { throw new SQLException( Messages.get("error.generic.ioerror", e.getMessage()), "HY000"); } } if (len <= VAR_MAX) { <s> if (len <= VAR_MAX) { <s>  if (connection.isWideChar() && len <= SYB_LONGVAR_MAX) { try { len = pi.getString(connection.getCharset()).length(); } catch (IOException e) { throw new SQLException( Messages.get("error.generic.ioerror", e.getMessage()), "HY000"); } } if (len <= VAR_MAX) { <s>  if (connection.isWideChar() && len <= SYB_LONGVAR_MAX) { try { len = pi.getString(connection.getCharset()).length(); } catch (IOException e) { throw new SQLException( Messages.get("error.generic.ioerror", e.getMessage()), "HY000"); } } if (len <= VAR_MAX) { <s> if (i < 0) { <s> if (i < 0) { <s> while (dx < dlim) { <s> if (lastOffset < start) { <s> if (x <= y) { EMIT(MIR_RotateAndMask.create(PPC64_RLDICR, def, left, IC(y - x), IC(0), IC(63 - y))); <s> if (x <= y) { EMIT(MIR_RotateAndMask.create(PPC64_RLDICR, def, left, IC(y - x), IC(0), IC(63 - y))); <s> if (x <= y) { EMIT(MIR_RotateAndMask.create(PPC64_RLDICR, def, left, IC(y - x), IC(0), IC(63 - y))); <s> if (x <= y) { EMIT(MIR_RotateAndMask.create(PPC64_RLDICL, def, left, IC(64 - (y - x)), IC(y), IC(63))); <s> if (x <= y) { EMIT(MIR_RotateAndMask.create(PPC64_RLDICL, def, left, IC(64 - (y - x)), IC(y), IC(63))); <s> if (x <= y) { EMIT(MIR_RotateAndMask.create(PPC64_RLDICL, def, left, IC(64 - (y - x)), IC(y), IC(63))); <s> if (!last) { <s> if (!last) {
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
 String outputName = "temp"; if (tool.getInputExtensions().get(0) != null) { outputName += tool.getInputExtensions().get(0); } String[] f = new String[ flags.size() ]; IManagedCommandLineGenerator gen = tool.getCommandLineGenerator(); IManagedCommandLineInfo info = gen.generateCommandLineInfo( tool, tool.getToolCommand(), (String[])flags.toArray( f ), tool.getOutputFlag(), tool.getOutputPrefix(), outputName, new String[0], tool.getCommandLinePattern() ); return info.getFlags(); <s>  String outputName = "temp"; if (tool.getInputExtensions().get(0) != null) { outputName += tool.getInputExtensions().get(0); } String[] f = new String[ flags.size() ]; IManagedCommandLineGenerator gen = tool.getCommandLineGenerator(); IManagedCommandLineInfo info = gen.generateCommandLineInfo( tool, tool.getToolCommand(), (String[])flags.toArray( f ), tool.getOutputFlag(), tool.getOutputPrefix(), outputName, new String[0], tool.getCommandLinePattern() ); return info.getFlags(); <s>  return sb.toString(); <s> return buffer.toString(); <s> return temp.substring(0); <s> return temp.substring(0); <s> return temp.substring(0); <s> return temp.substring(0); <s> int len = value.toString().length(); if (typeName.equals("money")) { len++; } return len; <s> return attachment.getDescription(); <s> return attachment.getDescription(); <s> String result = current.toString(); current = new StringBuffer(); return result; <s> String result = current.toString(); current = new StringBuffer(); return result; <s> } <s> newBuffer.append("</tr>");*/ return gradeBuffer.toString(); <s> return newBuffer.toString();*/ return headingBuffer.toString(); <s> return text.substring(0); <s> return text.substring(0); <s> return "Id3\n\n" + toString(0); <s> return text.substring(0); <s> return result; <s> return result; <s> return result; <s> return result; <s> return text;
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
Validate.noNullElements(array); fail("Expecting IllegalArgumentException"); <s> Validate.noNullElements(array); fail("Expecting IllegalArgumentException"); <s> if (message == null) { return null; } <s> if (message == null) { return null; } <s> if (message == null) { return null; } <s> if (message == null) { return null; } <s> Validate.noNullElements(coll); fail("Expecting IllegalArgumentException"); <s> Validate.noNullElements(coll); fail("Expecting IllegalArgumentException"); <s> if (encryptedMessage == null) { return null; } <s> if (encryptedMessage == null) { return null; } <s> Validate.noNullElements(array, "MSG"); fail("Expecting IllegalArgumentException"); <s> Validate.noNullElements(array, "MSG"); fail("Expecting IllegalArgumentException"); <s> Validate.noNullElements(coll, "MSG"); fail("Expecting IllegalArgumentException"); <s> Validate.noNullElements(coll, "MSG"); fail("Expecting IllegalArgumentException"); <s> return(name); <s> return(name); <s>  if (message == null) { return (digest == null); } else if (digest == null) { return false; } <s>  if (message == null) { return (digest == null); } else if (digest == null) { return false; } <s> if (ui > 0) { handler.startElement(getLocalName(node)); handler.namespace(EMPTYSTRING, _uriArray[ui]); } else { handler.startElement(name); } <s> if (ui > 0) { handler.startElement(getLocalName(node)); handler.namespace(EMPTYSTRING, _uriArray[ui]); } else { handler.startElement(name); } <s> result.addElement(roleName); <s> if (!toDOM) { doc.startElement(helper.getQName(f)); } else { helper.populateNameInfo(nameInfo, f); Element elem = document.createElementNS(nameInfo.getNamespaceURI(), nameInfo.getQualifiedName()); handler.recordEObject(elem, remote, remote.eContainer(), f); System.out.println("-->remote: "+elem.getNodeName()+": "+remote.eClass().getName()+"; "+f.getName()); elem.appendChild(document.createTextNode(href)); currentNode = currentNode.appendChild(elem); } <s> if (!toDOM) { String name = helper.getQName(f); doc.startElement(name); } else { helper.populateNameInfo(nameInfo, f); Element elem = document.createElementNS(nameInfo.getNamespaceURI(), nameInfo.getQualifiedName()); if (DEBUG_DOM) { System.out.println("-->href: "+elem.getNodeName()+"; eObject: "+remote.eClass().getName()+"; container:"+remote.eContainer()+"; "+f.getName()); } handler.recordEObject(elem, remote, remote.eContainer(), f); currentNode = currentNode.appendChild(elem); } <s> if (qualifier != null) { result.append(qualifier); result.append(capName(name)); } else { result.append(name); } <s> 
return false; <s> return false; <s> return false; <s> if(other == this){ return true; } PythonSourceFolder f = (PythonSourceFolder) other; return this.folder.equals(f.folder); <s> if(other == this){ return true; } IWrappedResource w = (IWrappedResource) other; return this.actualObject.equals(w.getActualObject()); <s> if(other == this){ return true; } IWrappedResource w = (IWrappedResource) other; return this.actualObject.equals(w.getActualObject()); <s> return (this == other); <s> return (this == other); <s> if(other == this){ return true; } PythonSourceFolder f = (PythonSourceFolder) other; return this.folder.equals(f.folder); <s> return id.equals((((HibernateDatabaseObject)that).id)); <s> return reference; <s>  <s> catch(NullPointerException null1exp){ if (CryptoDebug.debug) { System.err.println( "Workaround to Cougaar core bug (Context not known). Sleeping 200ms then retrying..."); } continue; } catch(Exception exp1){ exp1.printStackTrace(); continue; } <s> return lastChild; <s>  <s> return convertCollection(o); <s> return convertCollection(o); <s> return engine.eval(source, row, col, script); <s> return (SecretKey) o; <s> return convertCollection(o); <s> return invokeMethod(method, target, collectionRange); <s> return convertCollection(o); <s> if( type == this ) return true; if( !(type instanceof CPPDeferredClassInstance ) ) return false; ICPPClassTemplate typeClass = (ICPPClassTemplate) ((CPPDeferredClassInstance)type).getSpecializedBinding(); if( typeClass != classTemplate ) return false; return true; <s> if( type == this ) return true; if( !(type instanceof CPPDeferredClassInstance ) ) return false; ICPPClassTemplate typeClass = (ICPPClassTemplate) ((CPPDeferredClassInstance)type).getSpecializedBinding(); if( typeClass != classTemplate ) return false; return true; <s> return connectionManager;
if (element.equals(root)) { <s> if (element.equals(root)) { <s> if (element.equals(root)) { <s> if (element.equals(root)) { <s> if (element.equals(root)) { <s> if (element.equals(root)) { <s> if (element.equals(root)) { <s> if (element.equals(root)) { <s> if (matched) <s> if (matched) <s> if (matched) <s> for (String input : inputs) <s> if ((obj == null && selected == null) || (obj != null &&obj.equals(selected))) <s> if (value.equals(current.toString())) <s> if (value.equals(current.toString())) <s> if (value.equals(current.toString())) <s> if (arg.getQName().equals(name)) <s> if (arg.getQName().equals(name)) <s> if (search.equals(fResult)) { <s> if ( s1.equalsIgnoreCase(query)) <s> if (ch != null && ch.equals(channel)) <s> } if (token.equals(localizedCommand)) { <s> } if (token.equals(localizedCommand)) { <s> } if (token.equals(localizedCommand)) { <s> } if (token.equals(localizedCommand)) {
} else if (eName.equals("body")) { <s> } else if (function.equals("tab")) { int cursx=0; if (using_machine!=null) { cursx=using_machine.machinescreen.cursX; } stktype[upto-2]=ST_STRING; String building=""; int moveto=(int)stknum[upto-1]-cursx; if (moveto<0) moveto=0; for (int i=0; i<moveto; ++i) { building+="(rght)"; } stkstring[upto-2]=building; return; } else if (function.equals("spc")) { <s> } else if (commaCount == 2 && !nextToken.equals(",")) { <s> } else if (type.equals("".getClass().getName()) || type.equals("L" + "".getClass().getName())) { <s> } else if (type.equals(String.class.getName()) || type.equals("L".getClass().getName())) { <s> } else if (mbname.equals("%") || mbname.equals("INBOX") || mbname.equals("*") || mbname.equals("INBOX*")) { <s> } else if (child.getName().equals("fo:table-footer")) { <s> } else if (qName.equals("token")) { inToken = true; if (attrs.getValue("negate")!=null){ tokenNegated=attrs.getValue("negate").equals("yes"); } elements = new StringBuffer(); if (elementList == null) { elementList = new ArrayList(); } if (attrs.getValue("postag")!=null) { if (attrs.getValue("postag_exceptions")!=null) { exceptions=attrs.getValue("postag_exceptions").split("\\|"); } else { exceptions=null; } String[] pos = new String [1]; pos[0] = attrs.getValue("postag"); if (attrs.getValue("postag_regexp")!=null){ regular = attrs.getValue("postag_regexp").equals("yes"); } POSElement posElement = new POSElement(pos, caseSensitive, regular, exceptions); if (attrs.getValue("negate_pos")!=null){ posElement.setNegation(attrs.getValue("negate_pos").equals("yes")); } if (elementList == null) { elementList = new ArrayList(); } elementList.add(posElement); inToken=false; } if (attrs.getValue("regexp")!=null){ regExpression = attrs.getValue("regexp").equals("yes"); } } else if (qName.equals("example") && attrs.getValue("type").equals("correct")) { <s> } else if ((valLen > idLen) && (" " + id).equals(value.substring(valLen - idLen - 1))) { <s> } else if ((valLen > idLen) && (" " + id).equals(value.substring(valLen - idLen - 1))) { <s> } else if (child.getName().equals("fo:table-header")) { <s> } else if(childEl == null && selectedOnly){ return false; } else if (lastChildElement != null && !lastChildElement.equals(childEl)){ <s> } else if(childEl == null && selectedOnly){ return false; } else if (lastChildElement != null && !lastChildElement.equals(childEl)){ <s> } else if ("metaid".equals(tagname)) { <s> } else if ("dataSource".equals(propertyName)) { <s> } else if (critName.startsWith("(IS)")) { <s> } else if (critName.startsWith("(IS)")) { <s> } else if ("value".equals(localname)) { if (isInItem) <s> } else if ("value".equals(localname)) { if (isInItem) <s> } else if ("value".equals(localname)) { if (isInItem) <s> } else if ("value".equals(localname)) { if (isInItem) <s> } else if ("value".equals(localname)) { if (isInItem) <s> } else if (isConstructor() || hasAttr("method", "new")) { <s> } else if((name.startsWith("freenet") && (name.endsWith(".jar.new")))) { <s> } else if((name.startsWith("freenet") && (name.endsWith(".jar.new")))) {
 <s>  <s> acc.append(Character.toChars(c)); <s> acc.append(Character.toChars(c)); <s> acc.append(Character.toChars(c)); <s> if (out != null) { out.write(c); } <s> if (out != null) { out.write(c); } <s>  <s> if (out != null) { out.write(c); } <s> if (out != null) { out.write(c); } <s>  <s> if (out != null) { out.write(c); } <s> if (out != null) { out.write(c); } <s> if (out != null) { out.write(c); } <s>  <s> if (out != null) { out.write(c); } <s> buf.append(c, NumberFormat.Field.PERCENT); <s> buf.append(c, NumberFormat.Field.PERCENT); <s> buf.append(Character.toChars(c)); <s> buf.append(c, NumberFormat.Field.PERMILLE); <s> buf.append(c, NumberFormat.Field.PERMILLE); <s> buf.append(c, NumberFormat.Field.PERMILLE); <s> buf.append(c, NumberFormat.Field.PERCENT); <s> buf.append(c, NumberFormat.Field.PERMILLE); <s> buf.append(c, NumberFormat.Field.PERCENT);
if (attrLocalName == null) <s> if (attrLocalName == null) <s> if (attrLocalName == null) <s> if (attrLocalName == null) <s> if (attrLocalName == null) <s> if (data.length > 1) <s> if (false && !setVariable) <s> if (false && !setVariable) <s> if (!showTitle) { <s> if (!showTitle) { <s> if (!showTitle) { <s> if (!showTitle) { <s> if (!add) { <s> if (!add) { <s> if (!add) { <s> if (!add) { <s> if (!add) { <s> if (!add) { <s> if (!add) { <s> if (!add) { <s> if (!byLine) { <s> if (!byLine) { <s> if (!byLine) { <s> if (valueRequired) { codeStream.generateImplicitConversion(this.implicitConversion); } else { <s> if (!isValid) {
return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s> return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z')); <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; } <s>  if (c <= 'Z') { return 'A' <= c; } else { return 'a' <= c && c <= 'z'; }
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
attributes.removeAttribute(attribute); <s> attributes.removeAttribute(attribute); <s> session.removeAttribute(getCpid()+name); <s> attributes.remove(key.toLowerCase()); <s> map.putAll((Attributes)attr); <s>  Iterator cIter = children.iterator(); while (cIter.hasNext()) { Element child = (Element)cIter.next(); child.removeAttribute(attName); } <s>  <s> attributes.remove( key ); attributeIndex.removeElement( key ); <s> attributes.remove( key ); attributeIndex.removeElement( key ); <s> if (map.remove(key) != null) return 0; <s>  <s> attributes.remove (name); <s> attributes.remove (name); <s> attributes.remove (name); <s> c.addAttribute(attrib); if (attrib.isNamespaceDeclaration()) { String nsPrefix = attrib.getQName().equals("xmlns") ? "" : QName.extractLocalName(attrib.getQName()); staticContext.declareInScopeNamespace(nsPrefix,attrib.getLiteralValue()); } <s> if (key != null) staticAttributeKeys.put(key.getClass().getName() + "." + key.toString(), key); <s> if (key != null) staticAttributeKeys.put(key.getClass().getName() + "." + key.toString(), key); <s> if (key != null) staticAttributeKeys.put(key.getClass().getName() + "." + key.toString(), key); <s> cache.remove(ctx.getId()); <s> iterator.remove(); <s> elem.setAttributeNodeNS(attr); <s> elem.setAttributeNodeNS(attr); <s> elem.setAttributeNodeNS(attr); <s> elem.setAttributeNodeNS(attr); <s> element.setAttribute(attribute);
String clazz = entity.get("name"); <s> String type = atts.getValue("type"); if(type == null) type ="XMLResource"; <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final int idIndex = attributes.getIndex("id"); <s> final String name = startTag.getCollapsedAttribute("name"); <s> final String name = startTag.getCollapsedAttribute("name"); <s> final String name = startTag.getCollapsedAttribute("name"); <s> String classAttribute = reader.getAttribute(ConversionHelp.ATT_CLASS); <s> String classAttribute = reader.getAttribute(ConversionHelp.ATT_CLASS); <s> final String className = classType.getCanonicalText(); <s> final String className = classType.resolve().getQualifiedName(); <s> final String className = classType.resolve().getQualifiedName();
String imgName = tok.nextToken().toLowerCase().trim(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String name = getSimpleName(c); <s> String ns = element.getNamespace().getNamespaceURI(); <s> String name; if(e.getKind()== ElementKind.CONSTRUCTOR) name = e.getEnclosingElement().getSimpleName().toString(); else name = mt.getName().toString(); <s> String name; if(e.getKind()== ElementKind.CONSTRUCTOR) name = e.getEnclosingElement().getSimpleName().toString(); else name = mt.getName().toString(); <s> String value; if(DB.isFyracle()){ value = nameField.getText(); }else{ value = nameField.getText().toUpperCase(); } <s> String value; if(DB.isFyracle()){ value = nameField.getText(); }else{ value = nameField.getText().toUpperCase(); } <s> String value; if(DB.isFyracle()){ value = nameField.getText(); }else{ value = nameField.getText().toUpperCase(); } <s> token = tokenizer.nextToken().trim(); } <s> token = tokenizer.nextToken().trim(); } <s> token = tokenizer.nextToken().trim(); } <s> String value = st.nextToken(")").trim(); <s> String value = st.nextToken(")").trim(); <s> String value = st.nextToken(")").trim(); <s> String value = st.nextToken(")").trim(); <s> Object name = newColumnHeaders.nextElement(); <s> String line = tokenizer.nextToken(); <s> boolean pointerToFunction = declarator.getDeclarator() != null; String declaratorName = pointerToFunction ? declarator.getDeclarator().getName().toString() : declarator.getName().toString(); <s> boolean pointerToFunction = declarator.getDeclarator() != null; String declaratorName = pointerToFunction ? declarator.getDeclarator().getName().toString() : declarator.getName().toString();
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
 <s> String name = getSimpleName(c); <s> String ns = element.getNamespace().getNamespaceURI(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String childTag = childElement.getLocalName(); <s> String name = DOMUtil.getLocalName(child); <s> String name = DOMUtil.getLocalName(child); <s> String name = DOMUtil.getLocalName(child); <s> String name = DOMUtil.getLocalName(child); <s>  <s> String nameStr = name.httpStringValue(); <s> String name = el.getAttribute("item").getValue(); <s> String name = el.getAttribute("item").getValue(); <s> String name = wrapper.getName().toString(); <s> String name = wrapper.getName().toString(); <s> String childName = DOMUtil.getLocalName(child); <s> String childName = DOMUtil.getLocalName(child); <s> String childName = DOMUtil.getLocalName(child); <s> String childName = DOMUtil.getLocalName(child); <s> boolean pointerToFunction = declarator.getDeclarator() != null; String declaratorName = pointerToFunction ? declarator.getDeclarator().getName().toString() : declarator.getName().toString(); <s> boolean pointerToFunction = declarator.getDeclarator() != null; String declaratorName = pointerToFunction ? declarator.getDeclarator().getName().toString() : declarator.getName().toString();
if (parent.getChildCount() > index) { <s> if (parent.getChildCount() > index) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (currentNodeset != null && currentNodeset.size() > 0) { <s> if (metaNode.getChildCount() > 0) { <s> if (cat.getHits().size() > 0) { <s> if (cat.getHits().size() > 0) { <s> if (officeParent.getBranchOnlyChildren().size() > 0) { <s> if (line != null && line.size() > 0) { <s> if (line != null && line.size() > 0) { <s> if (line != null && line.size() > 0) { <s> if (line != null && line.size() > 0) { <s> if (size > 0) { <s> if (size > 0) { <s> if (bodyNode != null) { <s> if (bodyNode != null) { <s> if ((qinfo.size() > 0) || params.getEstimateSize()) {
return value; <s> return value; <s> return value; <s> if (isMySQL()) { q = "`"; } else { return val; } <s> return value; <s> if (isMySQL()) { q = "`"; } else { return val; } <s> return value; <s> return value; <s> return value; <s> return value; <s> return value; <s> return value; <s> return node(); <s> return value; <s> return value; <s> return value; <s> return value; <s> return value; <s> return value; <s> return value; <s> return value; <s> return value; <s> return value; <s> if (isMySQL()) { q = "`"; } else { return val; } <s> System.out.println(usage); System.out.println("Options:"); printUsage(System.out); System.exit(1); return -1;
super("^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"); <s> super("^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"); <s> String[] pieces = line.split("[^-\\?.a-zA-Z0-9,~%@/'_]"); <s>  <s>  <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s> if (((String)fragment).matches("\\-?[0-9]*\\.?[0-9]*([0-9]+[e|E]\\-?([0-9]+\\.)?[0-9]*)?")) { return null; } <s>  <s>  <s>  <s>  <s> final String[] pieces = line.split("[^- \\?.a-zA-Z0-9,~%@/'_]"); <s> new RegexSplitter(Pattern.compile("(\\(-?\\d+/-?\\d+\\)|[A-Za-z^]+)"), 1); <s> new RegexSplitter(Pattern.compile("(\\(-?\\d+/-?\\d+\\)|[A-Za-z^]+)"), 1); <s> String[] pieces = line.split("[^-\\?.a-zA-Z0-9,~%@/_]");
EMFUIMessages.Validation_liveValidationWarnDialogPrompt, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> EMFUIMessages.Validation_liveDialogTitle, <s> POIFSConstants.END_OF_CHAIN, <s> POIFSConstants.END_OF_CHAIN, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> EXCEPTION_RESOLUTION, <s> HTTPConstants.MTOM_RECEIVED_CONTENT_TYPE, <s> return UNKNOWN; <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_SMALL_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> case VERY_BIG_FONT_SIZE : <s> CERR_DEFVALUE_CONTEXT_DEPENDENT_TYPE, <s> CommonUIMessages.ModelingPreferencePage_OpenUnrecognizedContent_label, <s> CommonUIMessages.ModelingPreferencePage_SaveUnrecognizedContent_label, <s> JAVA_TASK_MARKER_ATTRIBUTE_NAMES,
return new IntegerValue(getArgument(0).eval(docs, contextSequence).getLength()); <s> return new IntegerValue(getArgument(0).eval(contextSequence).getLength()); <s> return new Rectangle[] { new Rectangle(Math.min(dx, x), Math.min(dy, y), <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> if (args[0] instanceof RubyRegexp) { IRubyObject match = RubyRegexp.regexpValue(args[0]).match(toString(), 0); return match.isNil() ? getRuntime().getNil() : ((RubyMatchData) match).group(args[1].convertToInteger().getLongValue()); } return substr(RubyNumeric.fix2int(args[0]), RubyNumeric.fix2int(args[1])); <s> params.addPositional(position, argument); return (SelfType) this; <s> params.addPositional(position, argument); return (SelfType) this;
